// Generated by dart2js (NullSafetyMode.sound, deferred-serialization, csp), the Dart to JavaScript compiler version: 2.18.5.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded.
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.

function conversionWorker(vtkBytesAsString) {
  return A.conversionWorker(vtkBytesAsString);
}

function copyProperties(from, to) {
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    to[key] = from[key];
  }
}
function mixinPropertiesHard(from, to) {
  var keys = Object.keys(from);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!to.hasOwnProperty(key))
      to[key] = from[key];
  }
}
function mixinPropertiesEasy(from, to) {
  Object.assign(to, from);
}
var supportsDirectProtoAccess = function() {
  var cls = function() {
  };
  cls.prototype = {p: {}};
  var object = new cls();
  if (!(object.__proto__ && object.__proto__.p === cls.prototype.p))
    return false;
  try {
    if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
      return true;
    if (typeof version == "function" && version.length == 0) {
      var v = version();
      if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
        return true;
    }
  } catch (_) {
  }
  return false;
}();
function inherit(cls, sup) {
  cls.prototype.constructor = cls;
  cls.prototype["$is" + cls.name] = cls;
  if (sup != null) {
    if (supportsDirectProtoAccess) {
      cls.prototype.__proto__ = sup.prototype;
      return;
    }
    var clsPrototype = Object.create(sup.prototype);
    copyProperties(cls.prototype, clsPrototype);
    cls.prototype = clsPrototype;
  }
}
function inheritMany(sup, classes) {
  for (var i = 0; i < classes.length; i++)
    inherit(classes[i], sup);
}
function mixinEasy(cls, mixin) {
  mixinPropertiesEasy(mixin.prototype, cls.prototype);
  cls.prototype.constructor = cls;
}
function mixinHard(cls, mixin) {
  mixinPropertiesHard(mixin.prototype, cls.prototype);
  cls.prototype.constructor = cls;
}
function lazyOld(holder, name, getterName, initializer) {
  var uninitializedSentinel = holder;
  holder[name] = uninitializedSentinel;
  holder[getterName] = function() {
    holder[getterName] = function() {
      A.throwCyclicInit(name);
    };
    var result;
    var sentinelInProgress = initializer;
    try {
      if (holder[name] === uninitializedSentinel) {
        result = holder[name] = sentinelInProgress;
        result = holder[name] = initializer();
      } else
        result = holder[name];
    } finally {
      if (result === sentinelInProgress)
        holder[name] = null;
      holder[getterName] = function() {
        return this[name];
      };
    }
    return result;
  };
}
function lazy(holder, name, getterName, initializer) {
  var uninitializedSentinel = holder;
  holder[name] = uninitializedSentinel;
  holder[getterName] = function() {
    if (holder[name] === uninitializedSentinel)
      holder[name] = initializer();
    holder[getterName] = function() {
      return this[name];
    };
    return holder[name];
  };
}
function lazyFinal(holder, name, getterName, initializer) {
  var uninitializedSentinel = holder;
  holder[name] = uninitializedSentinel;
  holder[getterName] = function() {
    if (holder[name] === uninitializedSentinel) {
      var value = initializer();
      if (holder[name] !== uninitializedSentinel)
        A.throwLateFieldADI(name);
      holder[name] = value;
    }
    var finalValue = holder[name];
    holder[getterName] = function() {
      return finalValue;
    };
    return finalValue;
  };
}
function makeConstList(list) {
  list.immutable$list = Array;
  list.fixed$length = Array;
  return list;
}
function convertToFastObject(properties) {
  function t() {
  }
  t.prototype = properties;
  new t();
  return properties;
}
function convertAllToFastObject(arrayOfObjects) {
  for (var i = 0; i < arrayOfObjects.length; ++i)
    convertToFastObject(arrayOfObjects[i]);
}
var functionCounter = 0;
function instanceTearOffGetter(isIntercepted, parameters) {
  var cache = null;
  return isIntercepted ? function(receiver) {
    if (cache === null)
      cache = A.closureFromTearOff(parameters);
    return new cache(receiver, this);
  } : function() {
    if (cache === null)
      cache = A.closureFromTearOff(parameters);
    return new cache(this, null);
  };
}
function staticTearOffGetter(parameters) {
  var cache = null;
  return function() {
    if (cache === null)
      cache = A.closureFromTearOff(parameters).prototype;
    return cache;
  };
}
var typesOffset = 0;
function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
  if (typeof funType == "number")
    funType += typesOffset;
  return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
}
function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
  var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
  var getterFunction = staticTearOffGetter(parameters);
  holder[getterName] = getterFunction;
}
function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
  isIntercepted = !!isIntercepted;
  var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
  var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
  prototype[getterName] = getterFunction;
}
function setOrUpdateInterceptorsByTag(newTags) {
  var tags = init.interceptorsByTag;
  if (!tags) {
    init.interceptorsByTag = newTags;
    return;
  }
  copyProperties(newTags, tags);
}
function setOrUpdateLeafTags(newTags) {
  var tags = init.leafTags;
  if (!tags) {
    init.leafTags = newTags;
    return;
  }
  copyProperties(newTags, tags);
}
function updateTypes(newTypes) {
  var types = init.types;
  var length = types.length;
  types.push.apply(types, newTypes);
  return length;
}
function updateHolder(holder, newHolder) {
  copyProperties(newHolder, holder);
  return holder;
}
var hunkHelpers = function() {
  var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
      return function(container, getterName, name, funType) {
        return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
      };
    },
    mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
      return function(container, getterName, name, funType) {
        return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
      };
    };
  return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, lazyOld: lazyOld, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
}();
function initializeDeferredHunk(hunk) {
  typesOffset = init.types.length;
  hunk(hunkHelpers, init, holders, $);
}
var A = {JS_CONST: function JS_CONST() {
  },
  LateError$fieldADI(fieldName) {
    return new A.LateError("Field '" + fieldName + "' has been assigned during initialization.");
  },
  LateError$fieldNI(fieldName) {
    return new A.LateError("Field '" + fieldName + "' has not been initialized.");
  },
  LateError$fieldAI(fieldName) {
    return new A.LateError("Field '" + fieldName + "' has already been initialized.");
  },
  MappedIterable_MappedIterable(iterable, $function, $S, $T) {
    if (type$.EfficientLengthIterable_dynamic._is(iterable))
      return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
  },
  IterableElementError_noElement() {
    return new A.StateError("No element");
  },
  Sort_sort(a, compare, $E) {
    A.Sort__doSort(a, 0, J.get$length$asx(a) - 1, compare, $E);
  },
  Sort__doSort(a, left, right, compare, $E) {
    if (right - left <= 32)
      A.Sort__insertionSort(a, left, right, compare, $E);
    else
      A.Sort__dualPivotQuicksort(a, left, right, compare, $E);
  },
  Sort__insertionSort(a, left, right, compare, $E) {
    var i, t1, el, j, t2, j0;
    for (i = left + 1, t1 = J.getInterceptor$asx(a); i <= right; ++i) {
      el = t1.$index(a, i);
      j = i;
      while (true) {
        if (j > left) {
          t2 = compare.call$2(t1.$index(a, j - 1), el);
          if (typeof t2 !== "number")
            return t2.$gt();
          t2 = t2 > 0;
        } else
          t2 = false;
        if (!t2)
          break;
        j0 = j - 1;
        t1.$indexSet(a, j, t1.$index(a, j0));
        j = j0;
      }
      t1.$indexSet(a, j, el);
    }
  },
  Sort__dualPivotQuicksort(a, left, right, compare, $E) {
    var t0, less, great, k, ak, comp, great0, less0, pivots_are_equal,
      sixth = B.JSInt_methods._tdivFast$1(right - left + 1, 6),
      index1 = left + sixth,
      index5 = right - sixth,
      index3 = B.JSInt_methods._tdivFast$1(left + right, 2),
      index2 = index3 - sixth,
      index4 = index3 + sixth,
      t1 = J.getInterceptor$asx(a),
      el1 = t1.$index(a, index1),
      el2 = t1.$index(a, index2),
      el3 = t1.$index(a, index3),
      el4 = t1.$index(a, index4),
      el5 = t1.$index(a, index5),
      t2 = compare.call$2(el1, el2);
    if (typeof t2 !== "number")
      return t2.$gt();
    if (t2 > 0) {
      t0 = el2;
      el2 = el1;
      el1 = t0;
    }
    t2 = compare.call$2(el4, el5);
    if (typeof t2 !== "number")
      return t2.$gt();
    if (t2 > 0) {
      t0 = el5;
      el5 = el4;
      el4 = t0;
    }
    t2 = compare.call$2(el1, el3);
    if (typeof t2 !== "number")
      return t2.$gt();
    if (t2 > 0) {
      t0 = el3;
      el3 = el1;
      el1 = t0;
    }
    t2 = compare.call$2(el2, el3);
    if (typeof t2 !== "number")
      return t2.$gt();
    if (t2 > 0) {
      t0 = el3;
      el3 = el2;
      el2 = t0;
    }
    t2 = compare.call$2(el1, el4);
    if (typeof t2 !== "number")
      return t2.$gt();
    if (t2 > 0) {
      t0 = el4;
      el4 = el1;
      el1 = t0;
    }
    t2 = compare.call$2(el3, el4);
    if (typeof t2 !== "number")
      return t2.$gt();
    if (t2 > 0) {
      t0 = el4;
      el4 = el3;
      el3 = t0;
    }
    t2 = compare.call$2(el2, el5);
    if (typeof t2 !== "number")
      return t2.$gt();
    if (t2 > 0) {
      t0 = el5;
      el5 = el2;
      el2 = t0;
    }
    t2 = compare.call$2(el2, el3);
    if (typeof t2 !== "number")
      return t2.$gt();
    if (t2 > 0) {
      t0 = el3;
      el3 = el2;
      el2 = t0;
    }
    t2 = compare.call$2(el4, el5);
    if (typeof t2 !== "number")
      return t2.$gt();
    if (t2 > 0) {
      t0 = el5;
      el5 = el4;
      el4 = t0;
    }
    t1.$indexSet(a, index1, el1);
    t1.$indexSet(a, index3, el3);
    t1.$indexSet(a, index5, el5);
    t1.$indexSet(a, index2, t1.$index(a, left));
    t1.$indexSet(a, index4, t1.$index(a, right));
    less = left + 1;
    great = right - 1;
    if (J.$eq$(compare.call$2(el2, el4), 0)) {
      for (k = less; k <= great; ++k) {
        ak = t1.$index(a, k);
        comp = compare.call$2(ak, el2);
        if (comp === 0)
          continue;
        if (comp < 0) {
          if (k !== less) {
            t1.$indexSet(a, k, t1.$index(a, less));
            t1.$indexSet(a, less, ak);
          }
          ++less;
        } else
          for (; true;) {
            comp = compare.call$2(t1.$index(a, great), el2);
            if (comp > 0) {
              --great;
              continue;
            } else {
              great0 = great - 1;
              if (comp < 0) {
                t1.$indexSet(a, k, t1.$index(a, less));
                less0 = less + 1;
                t1.$indexSet(a, less, t1.$index(a, great));
                t1.$indexSet(a, great, ak);
                great = great0;
                less = less0;
                break;
              } else {
                t1.$indexSet(a, k, t1.$index(a, great));
                t1.$indexSet(a, great, ak);
                great = great0;
                break;
              }
            }
          }
      }
      pivots_are_equal = true;
    } else {
      for (k = less; k <= great; ++k) {
        ak = t1.$index(a, k);
        if (compare.call$2(ak, el2) < 0) {
          if (k !== less) {
            t1.$indexSet(a, k, t1.$index(a, less));
            t1.$indexSet(a, less, ak);
          }
          ++less;
        } else if (compare.call$2(ak, el4) > 0)
          for (; true;)
            if (compare.call$2(t1.$index(a, great), el4) > 0) {
              --great;
              if (great < k)
                break;
              continue;
            } else {
              great0 = great - 1;
              if (compare.call$2(t1.$index(a, great), el2) < 0) {
                t1.$indexSet(a, k, t1.$index(a, less));
                less0 = less + 1;
                t1.$indexSet(a, less, t1.$index(a, great));
                t1.$indexSet(a, great, ak);
                less = less0;
              } else {
                t1.$indexSet(a, k, t1.$index(a, great));
                t1.$indexSet(a, great, ak);
              }
              great = great0;
              break;
            }
      }
      pivots_are_equal = false;
    }
    t2 = less - 1;
    t1.$indexSet(a, left, t1.$index(a, t2));
    t1.$indexSet(a, t2, el2);
    t2 = great + 1;
    t1.$indexSet(a, right, t1.$index(a, t2));
    t1.$indexSet(a, t2, el4);
    A.Sort__doSort(a, left, less - 2, compare, $E);
    A.Sort__doSort(a, great + 2, right, compare, $E);
    if (pivots_are_equal)
      return;
    if (less < index1 && great > index5) {
      for (; J.$eq$(compare.call$2(t1.$index(a, less), el2), 0);)
        ++less;
      for (; J.$eq$(compare.call$2(t1.$index(a, great), el4), 0);)
        --great;
      for (k = less; k <= great; ++k) {
        ak = t1.$index(a, k);
        if (compare.call$2(ak, el2) === 0) {
          if (k !== less) {
            t1.$indexSet(a, k, t1.$index(a, less));
            t1.$indexSet(a, less, ak);
          }
          ++less;
        } else if (compare.call$2(ak, el4) === 0)
          for (; true;)
            if (compare.call$2(t1.$index(a, great), el4) === 0) {
              --great;
              if (great < k)
                break;
              continue;
            } else {
              great0 = great - 1;
              if (compare.call$2(t1.$index(a, great), el2) < 0) {
                t1.$indexSet(a, k, t1.$index(a, less));
                less0 = less + 1;
                t1.$indexSet(a, less, t1.$index(a, great));
                t1.$indexSet(a, great, ak);
                less = less0;
              } else {
                t1.$indexSet(a, k, t1.$index(a, great));
                t1.$indexSet(a, great, ak);
              }
              great = great0;
              break;
            }
      }
      A.Sort__doSort(a, less, great, compare, $E);
    } else
      A.Sort__doSort(a, less, great, compare, $E);
  },
  LateError: function LateError(t0) {
    this._message = t0;
  },
  CodeUnits: function CodeUnits(t0) {
    this._string = t0;
  },
  EfficientLengthIterable: function EfficientLengthIterable() {
  },
  ListIterable: function ListIterable() {
  },
  ListIterator: function ListIterator(t0, t1, t2) {
    var _ = this;
    _.__internal$_iterable = t0;
    _.__internal$_length = t1;
    _.__internal$_index = 0;
    _.__internal$_current = null;
    _.$ti = t2;
  },
  MappedIterable: function MappedIterable(t0, t1, t2) {
    this.__internal$_iterable = t0;
    this._f = t1;
    this.$ti = t2;
  },
  EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
    this.__internal$_iterable = t0;
    this._f = t1;
    this.$ti = t2;
  },
  MappedIterator: function MappedIterator(t0, t1, t2) {
    var _ = this;
    _.__internal$_current = null;
    _._iterator = t0;
    _._f = t1;
    _.$ti = t2;
  },
  MappedListIterable: function MappedListIterable(t0, t1, t2) {
    this._source = t0;
    this._f = t1;
    this.$ti = t2;
  },
  WhereIterable: function WhereIterable(t0, t1, t2) {
    this.__internal$_iterable = t0;
    this._f = t1;
    this.$ti = t2;
  },
  WhereIterator: function WhereIterator(t0, t1, t2) {
    this._iterator = t0;
    this._f = t1;
    this.$ti = t2;
  },
  FixedLengthListMixin: function FixedLengthListMixin() {
  },
  UnmodifiableListMixin: function UnmodifiableListMixin() {
  },
  UnmodifiableListBase: function UnmodifiableListBase() {
  },
  ReversedListIterable: function ReversedListIterable(t0, t1) {
    this._source = t0;
    this.$ti = t1;
  },
  Symbol: function Symbol(t0) {
    this.__internal$_name = t0;
  },
  GeneralConstantMap__constantMapHashCode(key) {
    if (typeof key == "number")
      return B.JSNumber_methods.get$hashCode(key);
    if (type$.Symbol._is(key))
      return key.get$hashCode(key);
    if (type$.Type._is(key))
      return A.Primitives_objectHashCode(key);
    return A.objectHashCode(key);
  },
  GeneralConstantMap__typeTest($T) {
    return new A.GeneralConstantMap__typeTest_closure($T);
  },
  unminifyOrTag(rawClassName) {
    var preserved = init.mangledGlobalNames[rawClassName];
    if (preserved != null)
      return preserved;
    return rawClassName;
  },
  isJsIndexable(object, record) {
    var result;
    if (record != null) {
      result = record.x;
      if (result != null)
        return result;
    }
    return type$.JavaScriptIndexingBehavior_dynamic._is(object);
  },
  S(value) {
    var result;
    if (typeof value == "string")
      return value;
    if (typeof value == "number") {
      if (value !== 0)
        return "" + value;
    } else if (true === value)
      return "true";
    else if (false === value)
      return "false";
    else if (value == null)
      return "null";
    result = J.toString$0$(value);
    return result;
  },
  Primitives_objectHashCode(object) {
    var hash,
      property = $.Primitives__identityHashCodeProperty;
    if (property == null)
      property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
    hash = object[property];
    if (hash == null) {
      hash = Math.random() * 0x3fffffff | 0;
      object[property] = hash;
    }
    return hash;
  },
  Primitives_objectTypeName(object) {
    return A.Primitives__objectTypeNameNewRti(object);
  },
  Primitives__objectTypeNameNewRti(object) {
    var interceptor, dispatchName, $constructor, constructorName;
    if (object instanceof A.Object)
      return A._rtiToString(A.instanceType(object), null);
    interceptor = J.getInterceptor$(object);
    if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
      dispatchName = B.C_JS_CONST(object);
      if (dispatchName !== "Object" && dispatchName !== "")
        return dispatchName;
      $constructor = object.constructor;
      if (typeof $constructor == "function") {
        constructorName = $constructor.name;
        if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
          return constructorName;
      }
    }
    return A._rtiToString(A.instanceType(object), null);
  },
  Primitives_stringFromNativeUint8List(charCodes, start, end) {
    var i, result, i0, chunkEnd;
    if (end <= 500 && start === 0 && end === charCodes.length)
      return String.fromCharCode.apply(null, charCodes);
    for (i = start, result = ""; i < end; i = i0) {
      i0 = i + 500;
      chunkEnd = i0 < end ? i0 : end;
      result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
    }
    return result;
  },
  Primitives_stringFromCharCode(charCode) {
    var bits;
    if (charCode <= 65535)
      return String.fromCharCode(charCode);
    if (charCode <= 1114111) {
      bits = charCode - 65536;
      return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
    }
    throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
  },
  Primitives_valueFromDecomposedDate(years, month, day, hours, minutes, seconds, milliseconds, isUtc) {
    var value,
      jsMonth = month - 1;
    if (years < 100) {
      years += 400;
      jsMonth -= 4800;
    }
    value = Date.UTC(years, jsMonth, day, hours, minutes, seconds, milliseconds);
    if (isNaN(value) || value < -864e13 || value > 864e13)
      return null;
    return value;
  },
  Primitives_lazyAsJsDate(receiver) {
    if (receiver.date === void 0)
      receiver.date = new Date(receiver._value);
    return receiver.date;
  },
  Primitives_getYear(receiver) {
    var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0;
    return t1;
  },
  Primitives_getMonth(receiver) {
    var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1;
    return t1;
  },
  Primitives_getDay(receiver) {
    var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0;
    return t1;
  },
  Primitives_getHours(receiver) {
    var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0;
    return t1;
  },
  Primitives_getMinutes(receiver) {
    var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0;
    return t1;
  },
  Primitives_getSeconds(receiver) {
    var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0;
    return t1;
  },
  Primitives_getMilliseconds(receiver) {
    var t1 = A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0;
    return t1;
  },
  Primitives_functionNoSuchMethod($function, positionalArguments, namedArguments) {
    var $arguments, namedArgumentList, t1 = {};
    t1.argumentCount = 0;
    $arguments = [];
    namedArgumentList = [];
    t1.argumentCount = positionalArguments.length;
    B.JSArray_methods.addAll$1($arguments, positionalArguments);
    t1.names = "";
    if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
      namedArguments.forEach$1(0, new A.Primitives_functionNoSuchMethod_closure(t1, namedArgumentList, $arguments));
    return J.noSuchMethod$1$($function, new A.JSInvocationMirror(B.Symbol_call, 0, $arguments, namedArgumentList, 0));
  },
  Primitives_applyFunction($function, positionalArguments, namedArguments) {
    var t1, argumentCount, jsStub;
    if (Array.isArray(positionalArguments))
      t1 = namedArguments == null || namedArguments.__js_helper$_length === 0;
    else
      t1 = false;
    if (t1) {
      argumentCount = positionalArguments.length;
      if (argumentCount === 0) {
        if (!!$function.call$0)
          return $function.call$0();
      } else if (argumentCount === 1) {
        if (!!$function.call$1)
          return $function.call$1(positionalArguments[0]);
      } else if (argumentCount === 2) {
        if (!!$function.call$2)
          return $function.call$2(positionalArguments[0], positionalArguments[1]);
      } else if (argumentCount === 3) {
        if (!!$function.call$3)
          return $function.call$3(positionalArguments[0], positionalArguments[1], positionalArguments[2]);
      } else if (argumentCount === 4) {
        if (!!$function.call$4)
          return $function.call$4(positionalArguments[0], positionalArguments[1], positionalArguments[2], positionalArguments[3]);
      } else if (argumentCount === 5)
        if (!!$function.call$5)
          return $function.call$5(positionalArguments[0], positionalArguments[1], positionalArguments[2], positionalArguments[3], positionalArguments[4]);
      jsStub = $function["call" + "$" + argumentCount];
      if (jsStub != null)
        return jsStub.apply($function, positionalArguments);
    }
    return A.Primitives__generalApplyFunction($function, positionalArguments, namedArguments);
  },
  Primitives__generalApplyFunction($function, positionalArguments, namedArguments) {
    var defaultValuesClosure, t1, defaultValues, interceptor, jsFunction, maxArguments, missingDefaults, keys, _i, defaultValue, used, key,
      $arguments = Array.isArray(positionalArguments) ? positionalArguments : A.List_List$of(positionalArguments, true, type$.dynamic),
      argumentCount = $arguments.length,
      requiredParameterCount = $function.$requiredArgCount;
    if (argumentCount < requiredParameterCount)
      return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
    defaultValuesClosure = $function.$defaultValues;
    t1 = defaultValuesClosure == null;
    defaultValues = !t1 ? defaultValuesClosure() : null;
    interceptor = J.getInterceptor$($function);
    jsFunction = interceptor["call*"];
    if (typeof jsFunction == "string")
      jsFunction = interceptor[jsFunction];
    if (t1) {
      if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
        return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      if (argumentCount === requiredParameterCount)
        return jsFunction.apply($function, $arguments);
      return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
    }
    if (Array.isArray(defaultValues)) {
      if (namedArguments != null && namedArguments.__js_helper$_length !== 0)
        return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      maxArguments = requiredParameterCount + defaultValues.length;
      if (argumentCount > maxArguments)
        return A.Primitives_functionNoSuchMethod($function, $arguments, null);
      if (argumentCount < maxArguments) {
        missingDefaults = defaultValues.slice(argumentCount - requiredParameterCount);
        if ($arguments === positionalArguments)
          $arguments = A.List_List$of($arguments, true, type$.dynamic);
        B.JSArray_methods.addAll$1($arguments, missingDefaults);
      }
      return jsFunction.apply($function, $arguments);
    } else {
      if (argumentCount > requiredParameterCount)
        return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      if ($arguments === positionalArguments)
        $arguments = A.List_List$of($arguments, true, type$.dynamic);
      keys = Object.keys(defaultValues);
      if (namedArguments == null)
        for (t1 = keys.length, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
          defaultValue = defaultValues[A._asString(keys[_i])];
          if (B.C__Required === defaultValue)
            return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
          B.JSArray_methods.add$1($arguments, defaultValue);
        }
      else {
        for (t1 = keys.length, used = 0, _i = 0; _i < keys.length; keys.length === t1 || (0, A.throwConcurrentModificationError)(keys), ++_i) {
          key = A._asString(keys[_i]);
          if (namedArguments.containsKey$1(key)) {
            ++used;
            B.JSArray_methods.add$1($arguments, namedArguments.$index(0, key));
          } else {
            defaultValue = defaultValues[key];
            if (B.C__Required === defaultValue)
              return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
            B.JSArray_methods.add$1($arguments, defaultValue);
          }
        }
        if (used !== namedArguments.__js_helper$_length)
          return A.Primitives_functionNoSuchMethod($function, $arguments, namedArguments);
      }
      return jsFunction.apply($function, $arguments);
    }
  },
  iae(argument) {
    throw A.wrapException(A.argumentErrorValue(argument));
  },
  ioore(receiver, index) {
    if (receiver == null)
      J.get$length$asx(receiver);
    throw A.wrapException(A.diagnoseIndexError(receiver, index));
  },
  diagnoseIndexError(indexable, index) {
    var $length, _s5_ = "index";
    if (!A._isInt(index))
      return new A.ArgumentError(true, index, _s5_, null);
    $length = A._asInt(J.get$length$asx(indexable));
    if (index < 0 || index >= $length)
      return A.IndexError$(index, indexable, _s5_, null, $length);
    return A.RangeError$value(index, _s5_);
  },
  diagnoseRangeError(start, end, $length) {
    if (start > $length)
      return A.RangeError$range(start, 0, $length, "start", null);
    if (end != null)
      if (end < start || end > $length)
        return A.RangeError$range(end, start, $length, "end", null);
    return new A.ArgumentError(true, end, "end", null);
  },
  argumentErrorValue(object) {
    return new A.ArgumentError(true, object, null, null);
  },
  wrapException(ex) {
    var wrapper, t1;
    if (ex == null)
      ex = new A.NullThrownError();
    wrapper = new Error();
    wrapper.dartException = ex;
    t1 = A.toStringWrapper;
    if ("defineProperty" in Object) {
      Object.defineProperty(wrapper, "message", {get: t1});
      wrapper.name = "";
    } else
      wrapper.toString = t1;
    return wrapper;
  },
  toStringWrapper() {
    return J.toString$0$(this.dartException);
  },
  throwExpression(ex) {
    throw A.wrapException(ex);
  },
  throwConcurrentModificationError(collection) {
    throw A.wrapException(A.ConcurrentModificationError$(collection));
  },
  TypeErrorDecoder_extractPattern(message) {
    var match, $arguments, argumentsExpr, expr, method, receiver;
    message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
    match = message.match(/\\\$[a-zA-Z]+\\\$/g);
    if (match == null)
      match = A._setArrayType([], type$.JSArray_String);
    $arguments = match.indexOf("\\$arguments\\$");
    argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
    expr = match.indexOf("\\$expr\\$");
    method = match.indexOf("\\$method\\$");
    receiver = match.indexOf("\\$receiver\\$");
    return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
  },
  TypeErrorDecoder_provokeCallErrorOn(expression) {
    return function($expr$) {
      var $argumentsExpr$ = "$arguments$";
      try {
        $expr$.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }(expression);
  },
  TypeErrorDecoder_provokePropertyErrorOn(expression) {
    return function($expr$) {
      try {
        $expr$.$method$;
      } catch (e) {
        return e.message;
      }
    }(expression);
  },
  JsNoSuchMethodError$(_message, match) {
    var t1 = match == null,
      t2 = t1 ? null : match.method;
    return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
  },
  unwrapException(ex) {
    if (ex == null)
      return new A.NullThrownFromJavaScriptException(ex);
    if (typeof ex !== "object")
      return ex;
    if ("dartException" in ex)
      return A.saveStackTrace(ex, ex.dartException);
    return A._unwrapNonDartException(ex);
  },
  saveStackTrace(ex, error) {
    if (type$.Error._is(error))
      if (error.$thrownJsError == null)
        error.$thrownJsError = ex;
    return error;
  },
  _unwrapNonDartException(ex) {
    var message, number, ieErrorCode, t1, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match, _null = null;
    if (!("message" in ex))
      return ex;
    message = ex.message;
    if ("number" in ex && typeof ex.number == "number") {
      number = ex.number;
      ieErrorCode = number & 65535;
      if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
        switch (ieErrorCode) {
          case 438:
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", _null));
          case 445:
          case 5007:
            t1 = A.S(message);
            return A.saveStackTrace(ex, new A.NullError(t1 + " (Error " + ieErrorCode + ")", _null));
        }
    }
    if (ex instanceof TypeError) {
      nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
      notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
      nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
      nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
      undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
      undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
      nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
      $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
      undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
      undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
      match = nsme.matchTypeError$1(message);
      if (match != null)
        return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
      else {
        match = notClosure.matchTypeError$1(message);
        if (match != null) {
          match.method = "call";
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A._asString(message), match));
        } else {
          match = nullCall.matchTypeError$1(message);
          if (match == null) {
            match = nullLiteralCall.matchTypeError$1(message);
            if (match == null) {
              match = undefCall.matchTypeError$1(message);
              if (match == null) {
                match = undefLiteralCall.matchTypeError$1(message);
                if (match == null) {
                  match = nullProperty.matchTypeError$1(message);
                  if (match == null) {
                    match = nullLiteralCall.matchTypeError$1(message);
                    if (match == null) {
                      match = undefProperty.matchTypeError$1(message);
                      if (match == null) {
                        match = undefLiteralProperty.matchTypeError$1(message);
                        t1 = match != null;
                      } else
                        t1 = true;
                    } else
                      t1 = true;
                  } else
                    t1 = true;
                } else
                  t1 = true;
              } else
                t1 = true;
            } else
              t1 = true;
          } else
            t1 = true;
          if (t1) {
            A._asString(message);
            return A.saveStackTrace(ex, new A.NullError(message, match == null ? _null : match.method));
          }
        }
      }
      return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
    }
    if (ex instanceof RangeError) {
      if (typeof message == "string" && message.indexOf("call stack") !== -1)
        return new A.StackOverflowError();
      message = function(ex) {
        try {
          return String(ex);
        } catch (e) {
        }
        return null;
      }(ex);
      return A.saveStackTrace(ex, new A.ArgumentError(false, _null, _null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
    }
    if (typeof InternalError == "function" && ex instanceof InternalError)
      if (typeof message == "string" && message === "too much recursion")
        return new A.StackOverflowError();
    return ex;
  },
  objectHashCode(object) {
    if (object == null || typeof object != "object")
      return J.get$hashCode$(object);
    else
      return A.Primitives_objectHashCode(object);
  },
  fillLiteralMap(keyValuePairs, result) {
    var index, index0, index1,
      $length = keyValuePairs.length;
    for (index = 0; index < $length; index = index1) {
      index0 = index + 1;
      index1 = index0 + 1;
      result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
    }
    return result;
  },
  Closure_fromTearOff(parameters) {
    var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
      container = parameters.co,
      isStatic = parameters.iS,
      isIntercepted = parameters.iI,
      needsDirectAccess = parameters.nDA,
      applyTrampolineIndex = parameters.aI,
      funsOrNames = parameters.fs,
      callNames = parameters.cs,
      $name = funsOrNames[0],
      callName = callNames[0],
      $function = container[$name],
      t1 = parameters.fT;
    t1.toString;
    $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
    $prototype.$initialize = $prototype.constructor;
    if (isStatic)
      $constructor = function static_tear_off() {
        this.$initialize();
      };
    else
      $constructor = function tear_off(a, b) {
        this.$initialize(a, b);
      };
    $prototype.constructor = $constructor;
    $constructor.prototype = $prototype;
    $prototype.$_name = $name;
    $prototype.$_target = $function;
    t2 = !isStatic;
    if (t2)
      trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
    else {
      $prototype.$static_name = $name;
      trampoline = $function;
    }
    $prototype.$signature = A.Closure__computeSignatureFunctionNewRti(t1, isStatic, isIntercepted);
    $prototype[callName] = trampoline;
    for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
      stub = funsOrNames[i];
      if (typeof stub == "string") {
        stub0 = container[stub];
        stubName = stub;
        stub = stub0;
      } else
        stubName = "";
      stubCallName = callNames[i];
      if (stubCallName != null) {
        if (t2)
          stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
        $prototype[stubCallName] = stub;
      }
      if (i === applyTrampolineIndex)
        applyTrampoline = stub;
    }
    $prototype["call*"] = applyTrampoline;
    $prototype.$requiredArgCount = parameters.rC;
    $prototype.$defaultValues = parameters.dV;
    return $constructor;
  },
  Closure__computeSignatureFunctionNewRti(functionType, isStatic, isIntercepted) {
    if (typeof functionType == "number")
      return functionType;
    if (typeof functionType == "string") {
      if (isStatic)
        throw A.wrapException("Cannot compute signature for static tearoff.");
      return function(recipe, evalOnReceiver) {
        return function() {
          return evalOnReceiver(this, recipe);
        };
      }(functionType, A.BoundClosure_evalRecipe);
    }
    throw A.wrapException("Error in functionType of tearoff");
  },
  Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
    var getReceiver = A.BoundClosure_receiverOf;
    switch (needsDirectAccess ? -1 : arity) {
      case 0:
        return function(entry, receiverOf) {
          return function() {
            return receiverOf(this)[entry]();
          };
        }(stubName, getReceiver);
      case 1:
        return function(entry, receiverOf) {
          return function(a) {
            return receiverOf(this)[entry](a);
          };
        }(stubName, getReceiver);
      case 2:
        return function(entry, receiverOf) {
          return function(a, b) {
            return receiverOf(this)[entry](a, b);
          };
        }(stubName, getReceiver);
      case 3:
        return function(entry, receiverOf) {
          return function(a, b, c) {
            return receiverOf(this)[entry](a, b, c);
          };
        }(stubName, getReceiver);
      case 4:
        return function(entry, receiverOf) {
          return function(a, b, c, d) {
            return receiverOf(this)[entry](a, b, c, d);
          };
        }(stubName, getReceiver);
      case 5:
        return function(entry, receiverOf) {
          return function(a, b, c, d, e) {
            return receiverOf(this)[entry](a, b, c, d, e);
          };
        }(stubName, getReceiver);
      default:
        return function(f, receiverOf) {
          return function() {
            return f.apply(receiverOf(this), arguments);
          };
        }($function, getReceiver);
    }
  },
  Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
    var arity, t1;
    if (isIntercepted)
      return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
    arity = $function.length;
    t1 = A.Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function);
    return t1;
  },
  Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
    var getReceiver = A.BoundClosure_receiverOf,
      getInterceptor = A.BoundClosure_interceptorOf;
    switch (needsDirectAccess ? -1 : arity) {
      case 0:
        throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
      case 1:
        return function(entry, interceptorOf, receiverOf) {
          return function() {
            return interceptorOf(this)[entry](receiverOf(this));
          };
        }(stubName, getInterceptor, getReceiver);
      case 2:
        return function(entry, interceptorOf, receiverOf) {
          return function(a) {
            return interceptorOf(this)[entry](receiverOf(this), a);
          };
        }(stubName, getInterceptor, getReceiver);
      case 3:
        return function(entry, interceptorOf, receiverOf) {
          return function(a, b) {
            return interceptorOf(this)[entry](receiverOf(this), a, b);
          };
        }(stubName, getInterceptor, getReceiver);
      case 4:
        return function(entry, interceptorOf, receiverOf) {
          return function(a, b, c) {
            return interceptorOf(this)[entry](receiverOf(this), a, b, c);
          };
        }(stubName, getInterceptor, getReceiver);
      case 5:
        return function(entry, interceptorOf, receiverOf) {
          return function(a, b, c, d) {
            return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
          };
        }(stubName, getInterceptor, getReceiver);
      case 6:
        return function(entry, interceptorOf, receiverOf) {
          return function(a, b, c, d, e) {
            return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
          };
        }(stubName, getInterceptor, getReceiver);
      default:
        return function(f, interceptorOf, receiverOf) {
          return function() {
            var a = [receiverOf(this)];
            Array.prototype.push.apply(a, arguments);
            return f.apply(interceptorOf(this), a);
          };
        }($function, getInterceptor, getReceiver);
    }
  },
  Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
    var arity, t1;
    if ($.BoundClosure__interceptorFieldNameCache == null)
      $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
    if ($.BoundClosure__receiverFieldNameCache == null)
      $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
    arity = $function.length;
    t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
    return t1;
  },
  closureFromTearOff(parameters) {
    return A.Closure_fromTearOff(parameters);
  },
  BoundClosure_evalRecipe(closure, recipe) {
    return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
  },
  BoundClosure_receiverOf(closure) {
    return closure._receiver;
  },
  BoundClosure_interceptorOf(closure) {
    return closure._interceptor;
  },
  BoundClosure__computeFieldNamed(fieldName) {
    var t1, i, $name,
      template = new A.BoundClosure("receiver", "interceptor"),
      names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template), type$.nullable_Object);
    for (t1 = names.length, i = 0; i < t1; ++i) {
      $name = names[i];
      if (template[$name] === fieldName)
        return $name;
    }
    throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found."));
  },
  boolConversionCheck(value) {
    if (value == null)
      A.assertThrow("boolean expression must not be null");
    return value;
  },
  assertThrow(message) {
    throw A.wrapException(new A._AssertionError(message));
  },
  throwCyclicInit(staticName) {
    throw A.wrapException(new A.CyclicInitializationError(staticName));
  },
  getIsolateAffinityTag($name) {
    return init.getIsolateTag($name);
  },
  LinkedHashMapKeyIterator$(_map, _modifications, $E) {
    var t1 = new A.LinkedHashMapKeyIterator(_map, _modifications, $E._eval$1("LinkedHashMapKeyIterator<0>"));
    t1._cell = _map._first;
    return t1;
  },
  lookupAndCacheInterceptor(obj) {
    var interceptor, interceptorClass, altTag, mark, t1,
      tag = A._asString($.getTagFunction.call$1(obj)),
      record = $.dispatchRecordsForInstanceTags[tag];
    if (record != null) {
      Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      return record.i;
    }
    interceptor = $.interceptorsForUncacheableTags[tag];
    if (interceptor != null)
      return interceptor;
    interceptorClass = init.interceptorsByTag[tag];
    if (interceptorClass == null) {
      altTag = A._asStringQ($.alternateTagFunction.call$2(obj, tag));
      if (altTag != null) {
        record = $.dispatchRecordsForInstanceTags[altTag];
        if (record != null) {
          Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
          return record.i;
        }
        interceptor = $.interceptorsForUncacheableTags[altTag];
        if (interceptor != null)
          return interceptor;
        interceptorClass = init.interceptorsByTag[altTag];
        tag = altTag;
      }
    }
    if (interceptorClass == null)
      return null;
    interceptor = interceptorClass.prototype;
    mark = tag[0];
    if (mark === "!") {
      record = A.makeLeafDispatchRecord(interceptor);
      $.dispatchRecordsForInstanceTags[tag] = record;
      Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
      return record.i;
    }
    if (mark === "~") {
      $.interceptorsForUncacheableTags[tag] = interceptor;
      return interceptor;
    }
    if (mark === "-") {
      t1 = A.makeLeafDispatchRecord(interceptor);
      Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
      return t1.i;
    }
    if (mark === "+")
      return A.patchInteriorProto(obj, interceptor);
    if (mark === "*")
      throw A.wrapException(A.UnimplementedError$(tag));
    if (init.leafTags[tag] === true) {
      t1 = A.makeLeafDispatchRecord(interceptor);
      Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
      return t1.i;
    } else
      return A.patchInteriorProto(obj, interceptor);
  },
  patchInteriorProto(obj, interceptor) {
    var proto = Object.getPrototypeOf(obj);
    Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
    return interceptor;
  },
  makeLeafDispatchRecord(interceptor) {
    return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
  },
  makeDefaultDispatchRecord(tag, interceptorClass, proto) {
    var interceptor = interceptorClass.prototype;
    if (init.leafTags[tag] === true)
      return A.makeLeafDispatchRecord(interceptor);
    else
      return J.makeDispatchRecord(interceptor, proto, null, null);
  },
  initNativeDispatch() {
    if (true === $.initNativeDispatchFlag)
      return;
    $.initNativeDispatchFlag = true;
    A.initNativeDispatchContinue();
  },
  initNativeDispatchContinue() {
    var map, tags, fun, i, tag, proto, record, interceptorClass;
    $.dispatchRecordsForInstanceTags = Object.create(null);
    $.interceptorsForUncacheableTags = Object.create(null);
    A.initHooks();
    map = init.interceptorsByTag;
    tags = Object.getOwnPropertyNames(map);
    if (typeof window != "undefined") {
      window;
      fun = function() {
      };
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        proto = $.prototypeForTagFunction.call$1(tag);
        if (proto != null) {
          record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
          if (record != null) {
            Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            fun.prototype = proto;
          }
        }
      }
    }
    for (i = 0; i < tags.length; ++i) {
      tag = tags[i];
      if (/^[A-Za-z_]/.test(tag)) {
        interceptorClass = map[tag];
        map["!" + tag] = interceptorClass;
        map["~" + tag] = interceptorClass;
        map["-" + tag] = interceptorClass;
        map["+" + tag] = interceptorClass;
        map["*" + tag] = interceptorClass;
      }
    }
  },
  initHooks() {
    var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
      hooks = B.C_JS_CONST0();
    hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
    if (typeof dartNativeDispatchHooksTransformer != "undefined") {
      transformers = dartNativeDispatchHooksTransformer;
      if (typeof transformers == "function")
        transformers = [transformers];
      if (transformers.constructor == Array)
        for (i = 0; i < transformers.length; ++i) {
          transformer = transformers[i];
          if (typeof transformer == "function")
            hooks = transformer(hooks) || hooks;
        }
    }
    getTag = hooks.getTag;
    getUnknownTag = hooks.getUnknownTag;
    prototypeForTag = hooks.prototypeForTag;
    $.getTagFunction = new A.initHooks_closure(getTag);
    $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
    $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
  },
  applyHooksTransformer(transformer, hooks) {
    return transformer(hooks) || hooks;
  },
  JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, unicode, dotAll, global) {
    var m = multiLine ? "m" : "",
      i = caseSensitive ? "" : "i",
      u = unicode ? "u" : "",
      s = dotAll ? "s" : "",
      g = global ? "g" : "",
      regexp = function(source, modifiers) {
        try {
          return new RegExp(source, modifiers);
        } catch (e) {
          return e;
        }
      }(source, m + i + u + s + g);
    if (regexp instanceof RegExp)
      return regexp;
    throw A.wrapException(A.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
  },
  escapeReplacement(replacement) {
    if (replacement.indexOf("$", 0) >= 0)
      return replacement.replace(/\$/g, "$$$$");
    return replacement;
  },
  quoteStringForRegExp(string) {
    if (/[[\]{}()*+?.\\^$|]/.test(string))
      return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
    return string;
  },
  stringReplaceAllUnchecked(receiver, pattern, replacement) {
    var t1,
      nativeRegexp = pattern.get$_nativeGlobalVersion();
    nativeRegexp.lastIndex = 0;
    t1 = receiver.replace(nativeRegexp, A.escapeReplacement(replacement));
    return t1;
  },
  _stringIdentity(string) {
    return string;
  },
  stringReplaceAllFuncUnchecked(receiver, pattern, onMatch, onNonMatch) {
    var t1, t2, startIndex, t3, match, t4, t5;
    for (t1 = pattern.allMatches$1(0, receiver), t1 = new A._AllMatchesIterator(t1._re, t1.__js_helper$_string, t1._start), t2 = type$.RegExpMatch, startIndex = 0, t3 = ""; t1.moveNext$0();) {
      match = t1.__js_helper$_current;
      if (match == null)
        match = t2._as(match);
      t4 = match._match;
      t5 = t4.index;
      t3 = t3 + A.S(A._stringIdentity(B.JSString_methods.substring$2(receiver, startIndex, t5))) + A.S(onMatch.call$1(match));
      startIndex = t5 + t4[0].length;
    }
    t1 = t3 + A.S(A._stringIdentity(B.JSString_methods.substring$1(receiver, startIndex)));
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  },
  ConstantMapView: function ConstantMapView(t0, t1) {
    this._collection$_map = t0;
    this.$ti = t1;
  },
  ConstantMap: function ConstantMap() {
  },
  ConstantMap_map_closure: function ConstantMap_map_closure(t0, t1, t2) {
    this.$this = t0;
    this.transform = t1;
    this.result = t2;
  },
  ConstantStringMap: function ConstantStringMap(t0, t1, t2, t3) {
    var _ = this;
    _.__js_helper$_length = t0;
    _._jsObject = t1;
    _._keys = t2;
    _.$ti = t3;
  },
  _ConstantMapKeyIterable: function _ConstantMapKeyIterable(t0, t1) {
    this._map = t0;
    this.$ti = t1;
  },
  GeneralConstantMap: function GeneralConstantMap(t0, t1) {
    this._jsData = t0;
    this.$ti = t1;
  },
  GeneralConstantMap__typeTest_closure: function GeneralConstantMap__typeTest_closure(t0) {
    this.T = t0;
  },
  JSInvocationMirror: function JSInvocationMirror(t0, t1, t2, t3, t4) {
    var _ = this;
    _._memberName = t0;
    _.__js_helper$_kind = t1;
    _._arguments = t2;
    _._namedArgumentNames = t3;
    _._typeArgumentCount = t4;
  },
  Primitives_functionNoSuchMethod_closure: function Primitives_functionNoSuchMethod_closure(t0, t1, t2) {
    this._box_0 = t0;
    this.namedArgumentList = t1;
    this.$arguments = t2;
  },
  TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
    var _ = this;
    _._pattern = t0;
    _._arguments = t1;
    _._argumentsExpr = t2;
    _._expr = t3;
    _._method = t4;
    _._receiver = t5;
  },
  NullError: function NullError(t0, t1) {
    this.__js_helper$_message = t0;
    this._method = t1;
  },
  JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
    this.__js_helper$_message = t0;
    this._method = t1;
    this._receiver = t2;
  },
  UnknownJsTypeError: function UnknownJsTypeError(t0) {
    this.__js_helper$_message = t0;
  },
  NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
    this._irritant = t0;
  },
  Closure: function Closure() {
  },
  Closure0Args: function Closure0Args() {
  },
  Closure2Args: function Closure2Args() {
  },
  TearOffClosure: function TearOffClosure() {
  },
  StaticClosure: function StaticClosure() {
  },
  BoundClosure: function BoundClosure(t0, t1) {
    this._receiver = t0;
    this._interceptor = t1;
  },
  RuntimeError: function RuntimeError(t0) {
    this.message = t0;
  },
  _AssertionError: function _AssertionError(t0) {
    this.message = t0;
  },
  _Required: function _Required() {
  },
  JsLinkedHashMap: function JsLinkedHashMap(t0) {
    var _ = this;
    _.__js_helper$_length = 0;
    _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
    _._modifications = 0;
    _.$ti = t0;
  },
  JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
    this.$this = t0;
  },
  LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
    var _ = this;
    _.hashMapCellKey = t0;
    _.hashMapCellValue = t1;
    _._previous = _._next = null;
  },
  LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
    this._map = t0;
    this.$ti = t1;
  },
  LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1, t2) {
    var _ = this;
    _._map = t0;
    _._modifications = t1;
    _.__js_helper$_current = _._cell = null;
    _.$ti = t2;
  },
  initHooks_closure: function initHooks_closure(t0) {
    this.getTag = t0;
  },
  initHooks_closure0: function initHooks_closure0(t0) {
    this.getUnknownTag = t0;
  },
  initHooks_closure1: function initHooks_closure1(t0) {
    this.prototypeForTag = t0;
  },
  JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
    var _ = this;
    _.pattern = t0;
    _._nativeRegExp = t1;
    _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
  },
  _MatchImplementation: function _MatchImplementation(t0) {
    this._match = t0;
  },
  _AllMatchesIterable: function _AllMatchesIterable(t0, t1, t2) {
    this._re = t0;
    this.__js_helper$_string = t1;
    this._start = t2;
  },
  _AllMatchesIterator: function _AllMatchesIterator(t0, t1, t2) {
    var _ = this;
    _._regExp = t0;
    _.__js_helper$_string = t1;
    _._nextIndex = t2;
    _.__js_helper$_current = null;
  },
  _checkViewArguments(buffer, offsetInBytes, $length) {
  },
  _ensureNativeList(list) {
    var t1, result, i;
    if (type$.JSIndexable_dynamic._is(list))
      return list;
    t1 = J.getInterceptor$asx(list);
    result = A.List_List$filled(t1.get$length(list), null, false, type$.dynamic);
    for (i = 0; i < t1.get$length(list); ++i)
      B.JSArray_methods.$indexSet(result, i, t1.$index(list, i));
    return result;
  },
  NativeUint8List_NativeUint8List$view(buffer, offsetInBytes, $length) {
    var t1;
    A._checkViewArguments(buffer, offsetInBytes, $length);
    t1 = new Uint8Array(buffer, offsetInBytes, $length);
    return t1;
  },
  _checkValidIndex(index, list, $length) {
    if (index >>> 0 !== index || index >= $length)
      throw A.wrapException(A.diagnoseIndexError(list, index));
  },
  _checkValidRange(start, end, $length) {
    var t1;
    if (!(start >>> 0 !== start))
      t1 = end >>> 0 !== end || start > end || end > $length;
    else
      t1 = true;
    if (t1)
      throw A.wrapException(A.diagnoseRangeError(start, end, $length));
    return end;
  },
  NativeTypedData: function NativeTypedData() {
  },
  NativeByteData: function NativeByteData() {
  },
  NativeTypedArray: function NativeTypedArray() {
  },
  NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
  },
  NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
  },
  NativeFloat32List: function NativeFloat32List() {
  },
  NativeUint8List: function NativeUint8List() {
  },
  _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
  },
  _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
  },
  _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
  },
  _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
  },
  Rti__getQuestionFromStar(universe, rti) {
    var question = rti._precomputed1;
    return question == null ? rti._precomputed1 = A._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
  },
  Rti__getFutureFromFutureOr(universe, rti) {
    var future = rti._precomputed1;
    return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
  },
  Rti__isUnionOfFunctionType(rti) {
    var kind = rti._kind;
    if (kind === 6 || kind === 7 || kind === 8)
      return A.Rti__isUnionOfFunctionType(rti._primary);
    return kind === 11 || kind === 12;
  },
  Rti__getCanonicalRecipe(rti) {
    return rti._canonicalRecipe;
  },
  findType(recipe) {
    return A._Universe_eval(init.typeUniverse, recipe, false);
  },
  _substitute(universe, rti, typeArguments, depth) {
    var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
      kind = rti._kind;
    switch (kind) {
      case 5:
      case 1:
      case 2:
      case 3:
      case 4:
        return rti;
      case 6:
        baseType = rti._primary;
        substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
        if (substitutedBaseType === baseType)
          return rti;
        return A._Universe__lookupStarRti(universe, substitutedBaseType, true);
      case 7:
        baseType = rti._primary;
        substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
        if (substitutedBaseType === baseType)
          return rti;
        return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
      case 8:
        baseType = rti._primary;
        substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
        if (substitutedBaseType === baseType)
          return rti;
        return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
      case 9:
        interfaceTypeArguments = rti._rest;
        substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
        if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
          return rti;
        return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
      case 10:
        base = rti._primary;
        substitutedBase = A._substitute(universe, base, typeArguments, depth);
        $arguments = rti._rest;
        substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
        if (substitutedBase === base && substitutedArguments === $arguments)
          return rti;
        return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
      case 11:
        returnType = rti._primary;
        substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
        functionParameters = rti._rest;
        substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
        if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
          return rti;
        return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
      case 12:
        bounds = rti._rest;
        depth += bounds.length;
        substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
        base = rti._primary;
        substitutedBase = A._substitute(universe, base, typeArguments, depth);
        if (substitutedBounds === bounds && substitutedBase === base)
          return rti;
        return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
      case 13:
        index = rti._primary;
        if (index < depth)
          return rti;
        argument = typeArguments[index - depth];
        if (argument == null)
          return rti;
        return argument;
      default:
        throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
    }
  },
  _substituteArray(universe, rtiArray, typeArguments, depth) {
    var changed, i, rti, substitutedRti,
      $length = rtiArray.length,
      result = A._Utils_newArrayOrEmpty($length);
    for (changed = false, i = 0; i < $length; ++i) {
      rti = rtiArray[i];
      substitutedRti = A._substitute(universe, rti, typeArguments, depth);
      if (substitutedRti !== rti)
        changed = true;
      result[i] = substitutedRti;
    }
    return changed ? result : rtiArray;
  },
  _substituteNamed(universe, namedArray, typeArguments, depth) {
    var changed, i, t1, t2, rti, substitutedRti,
      $length = namedArray.length,
      result = A._Utils_newArrayOrEmpty($length);
    for (changed = false, i = 0; i < $length; i += 3) {
      t1 = namedArray[i];
      t2 = namedArray[i + 1];
      rti = namedArray[i + 2];
      substitutedRti = A._substitute(universe, rti, typeArguments, depth);
      if (substitutedRti !== rti)
        changed = true;
      result.splice(i, 3, t1, t2, substitutedRti);
    }
    return changed ? result : namedArray;
  },
  _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
    var result,
      requiredPositional = functionParameters._requiredPositional,
      substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
      optionalPositional = functionParameters._optionalPositional,
      substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
      named = functionParameters._named,
      substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
    if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
      return functionParameters;
    result = new A._FunctionParameters();
    result._requiredPositional = substitutedRequiredPositional;
    result._optionalPositional = substitutedOptionalPositional;
    result._named = substitutedNamed;
    return result;
  },
  _setArrayType(target, rti) {
    target[init.arrayRti] = rti;
    return target;
  },
  closureFunctionType(closure) {
    var signature = closure.$signature;
    if (signature != null) {
      if (typeof signature == "number")
        return A.getTypeFromTypesTable(signature);
      return closure.$signature();
    }
    return null;
  },
  instanceOrFunctionType(object, testRti) {
    var rti;
    if (A.Rti__isUnionOfFunctionType(testRti))
      if (object instanceof A.Closure) {
        rti = A.closureFunctionType(object);
        if (rti != null)
          return rti;
      }
    return A.instanceType(object);
  },
  instanceType(object) {
    var rti;
    if (object instanceof A.Object) {
      rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    }
    if (Array.isArray(object))
      return A._arrayInstanceType(object);
    return A._instanceTypeFromConstructor(J.getInterceptor$(object));
  },
  _arrayInstanceType(object) {
    var rti = object[init.arrayRti],
      defaultRti = type$.JSArray_dynamic;
    if (rti == null)
      return defaultRti;
    if (rti.constructor !== defaultRti.constructor)
      return defaultRti;
    return rti;
  },
  _instanceType(object) {
    var rti = object.$ti;
    return rti != null ? rti : A._instanceTypeFromConstructor(object);
  },
  _instanceTypeFromConstructor(instance) {
    var $constructor = instance.constructor,
      probe = $constructor.$ccache;
    if (probe != null)
      return probe;
    return A._instanceTypeFromConstructorMiss(instance, $constructor);
  },
  _instanceTypeFromConstructorMiss(instance, $constructor) {
    var effectiveConstructor = instance instanceof A.Closure ? instance.__proto__.__proto__.constructor : $constructor,
      rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
    $constructor.$ccache = rti;
    return rti;
  },
  getTypeFromTypesTable(index) {
    var rti,
      table = init.types,
      type = table[index];
    if (typeof type == "string") {
      rti = A._Universe_eval(init.typeUniverse, type, false);
      table[index] = rti;
      return rti;
    }
    return type;
  },
  createRuntimeType(rti) {
    var recipe, starErasedRecipe, starErasedRti,
      type = rti._cachedRuntimeType;
    if (type != null)
      return type;
    recipe = rti._canonicalRecipe;
    starErasedRecipe = recipe.replace(/\*/g, "");
    if (starErasedRecipe === recipe)
      return rti._cachedRuntimeType = new A._Type(rti);
    starErasedRti = A._Universe_eval(init.typeUniverse, starErasedRecipe, true);
    type = starErasedRti._cachedRuntimeType;
    return rti._cachedRuntimeType = type == null ? starErasedRti._cachedRuntimeType = new A._Type(starErasedRti) : type;
  },
  typeLiteral(recipe) {
    return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
  },
  _installSpecializedIsTest(object) {
    var t1, unstarred, isFn, $name, testRti = this;
    if (testRti === type$.Object)
      return A._finishIsFn(testRti, object, A._isObject);
    if (!A.isStrongTopType(testRti))
      if (!(testRti === type$.legacy_Object))
        t1 = false;
      else
        t1 = true;
    else
      t1 = true;
    if (t1)
      return A._finishIsFn(testRti, object, A._isTop);
    t1 = testRti._kind;
    unstarred = t1 === 6 ? testRti._primary : testRti;
    if (unstarred === type$.int)
      isFn = A._isInt;
    else if (unstarred === type$.double || unstarred === type$.num)
      isFn = A._isNum;
    else if (unstarred === type$.String)
      isFn = A._isString;
    else
      isFn = unstarred === type$.bool ? A._isBool : null;
    if (isFn != null)
      return A._finishIsFn(testRti, object, isFn);
    if (unstarred._kind === 9) {
      $name = unstarred._primary;
      if (unstarred._rest.every(A.isTopType)) {
        testRti._specializedTestResource = "$is" + $name;
        if ($name === "List")
          return A._finishIsFn(testRti, object, A._isListTestViaProperty);
        return A._finishIsFn(testRti, object, A._isTestViaProperty);
      }
    } else if (t1 === 7)
      return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
    return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
  },
  _finishIsFn(testRti, object, isFn) {
    testRti._is = isFn;
    return testRti._is(object);
  },
  _installSpecializedAsCheck(object) {
    var t1, testRti = this,
      asFn = A._generalAsCheckImplementation;
    if (!A.isStrongTopType(testRti))
      if (!(testRti === type$.legacy_Object))
        t1 = false;
      else
        t1 = true;
    else
      t1 = true;
    if (t1)
      asFn = A._asTop;
    else if (testRti === type$.Object)
      asFn = A._asObject;
    else {
      t1 = A.isNullable(testRti);
      if (t1)
        asFn = A._generalNullableAsCheckImplementation;
    }
    testRti._as = asFn;
    return testRti._as(object);
  },
  _nullIs(testRti) {
    var t1,
      kind = testRti._kind;
    if (!A.isStrongTopType(testRti))
      if (!(testRti === type$.legacy_Object))
        if (!(testRti === type$.legacy_Never))
          if (kind !== 7)
            t1 = kind === 8 && A._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
    else
      t1 = true;
    return t1;
  },
  _generalIsTestImplementation(object) {
    var testRti = this;
    if (object == null)
      return A._nullIs(testRti);
    return A._isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), null, testRti, null);
  },
  _generalNullableIsTestImplementation(object) {
    if (object == null)
      return true;
    return this._primary._is(object);
  },
  _isTestViaProperty(object) {
    var tag, testRti = this;
    if (object == null)
      return A._nullIs(testRti);
    tag = testRti._specializedTestResource;
    if (object instanceof A.Object)
      return !!object[tag];
    return !!J.getInterceptor$(object)[tag];
  },
  _isListTestViaProperty(object) {
    var tag, testRti = this;
    if (object == null)
      return A._nullIs(testRti);
    if (typeof object != "object")
      return false;
    if (Array.isArray(object))
      return true;
    tag = testRti._specializedTestResource;
    if (object instanceof A.Object)
      return !!object[tag];
    return !!J.getInterceptor$(object)[tag];
  },
  _generalAsCheckImplementation(object) {
    var t1, testRti = this;
    if (object == null) {
      t1 = A.isNullable(testRti);
      if (t1)
        return object;
    } else if (testRti._is(object))
      return object;
    A._failedAsCheck(object, testRti);
  },
  _generalNullableAsCheckImplementation(object) {
    var testRti = this;
    if (object == null)
      return object;
    else if (testRti._is(object))
      return object;
    A._failedAsCheck(object, testRti);
  },
  _failedAsCheck(object, testRti) {
    throw A.wrapException(A._TypeError$fromMessage(A._Error_compose(object, A.instanceOrFunctionType(object, testRti), A._rtiToString(testRti, null))));
  },
  checkTypeBound(type, bound, variable, methodName) {
    var _null = null;
    if (A._isSubtype(init.typeUniverse, type, _null, bound, _null))
      return type;
    throw A.wrapException(A._TypeError$fromMessage("The type argument '" + A._rtiToString(type, _null) + "' is not a subtype of the type variable bound '" + A._rtiToString(bound, _null) + "' of type variable '" + variable + "' in '" + methodName + "'."));
  },
  _Error_compose(object, objectRti, checkedTypeDescription) {
    var objectDescription = A.Error_safeToString(object);
    return objectDescription + ": type '" + A._rtiToString(objectRti == null ? A.instanceType(object) : objectRti, null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
  },
  _TypeError$fromMessage(message) {
    return new A._TypeError("TypeError: " + message);
  },
  _TypeError__TypeError$forType(object, type) {
    return new A._TypeError("TypeError: " + A._Error_compose(object, null, type));
  },
  _isObject(object) {
    return object != null;
  },
  _asObject(object) {
    if (object != null)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "Object"));
  },
  _isTop(object) {
    return true;
  },
  _asTop(object) {
    return object;
  },
  _isBool(object) {
    return true === object || false === object;
  },
  _asBool(object) {
    if (true === object)
      return true;
    if (false === object)
      return false;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
  },
  _asBoolS(object) {
    if (true === object)
      return true;
    if (false === object)
      return false;
    if (object == null)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
  },
  _asBoolQ(object) {
    if (true === object)
      return true;
    if (false === object)
      return false;
    if (object == null)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "bool?"));
  },
  _asDouble(object) {
    if (typeof object == "number")
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
  },
  _asDoubleS(object) {
    if (typeof object == "number")
      return object;
    if (object == null)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
  },
  _asDoubleQ(object) {
    if (typeof object == "number")
      return object;
    if (object == null)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "double?"));
  },
  _isInt(object) {
    return typeof object == "number" && Math.floor(object) === object;
  },
  _asInt(object) {
    if (typeof object == "number" && Math.floor(object) === object)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
  },
  _asIntS(object) {
    if (typeof object == "number" && Math.floor(object) === object)
      return object;
    if (object == null)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
  },
  _asIntQ(object) {
    if (typeof object == "number" && Math.floor(object) === object)
      return object;
    if (object == null)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "int?"));
  },
  _isNum(object) {
    return typeof object == "number";
  },
  _asNum(object) {
    if (typeof object == "number")
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
  },
  _asNumS(object) {
    if (typeof object == "number")
      return object;
    if (object == null)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
  },
  _asNumQ(object) {
    if (typeof object == "number")
      return object;
    if (object == null)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "num?"));
  },
  _isString(object) {
    return typeof object == "string";
  },
  _asString(object) {
    if (typeof object == "string")
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
  },
  _asStringS(object) {
    if (typeof object == "string")
      return object;
    if (object == null)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
  },
  _asStringQ(object) {
    if (typeof object == "string")
      return object;
    if (object == null)
      return object;
    throw A.wrapException(A._TypeError__TypeError$forType(object, "String?"));
  },
  _rtiArrayToString(array, genericContext) {
    var s, sep, i;
    for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
      s += sep + A._rtiToString(array[i], genericContext);
    return s;
  },
  _functionRtiToString(functionType, genericContext, bounds) {
    var boundsLength, outerContextLength, offset, i, t1, t2, typeParametersText, typeSep, t3, t4, boundRti, kind, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ";
    if (bounds != null) {
      boundsLength = bounds.length;
      if (genericContext == null) {
        genericContext = A._setArrayType([], type$.JSArray_String);
        outerContextLength = null;
      } else
        outerContextLength = genericContext.length;
      offset = genericContext.length;
      for (i = boundsLength; i > 0; --i)
        B.JSArray_methods.add$1(genericContext, "T" + (offset + i));
      for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
        t3 = genericContext.length;
        t4 = t3 - 1 - i;
        if (!(t4 >= 0))
          return A.ioore(genericContext, t4);
        typeParametersText = B.JSString_methods.$add(typeParametersText + typeSep, genericContext[t4]);
        boundRti = bounds[i];
        kind = boundRti._kind;
        if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
          if (!(boundRti === t2))
            t3 = false;
          else
            t3 = true;
        else
          t3 = true;
        if (!t3)
          typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
      }
      typeParametersText += ">";
    } else {
      typeParametersText = "";
      outerContextLength = null;
    }
    t1 = functionType._primary;
    parameters = functionType._rest;
    requiredPositional = parameters._requiredPositional;
    requiredPositionalLength = requiredPositional.length;
    optionalPositional = parameters._optionalPositional;
    optionalPositionalLength = optionalPositional.length;
    named = parameters._named;
    namedLength = named.length;
    returnTypeText = A._rtiToString(t1, genericContext);
    for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
      argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
    if (optionalPositionalLength > 0) {
      argumentsText += sep + "[";
      for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
      argumentsText += "]";
    }
    if (namedLength > 0) {
      argumentsText += sep + "{";
      for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
        argumentsText += sep;
        if (named[i + 1])
          argumentsText += "required ";
        argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
      }
      argumentsText += "}";
    }
    if (outerContextLength != null) {
      genericContext.toString;
      genericContext.length = outerContextLength;
    }
    return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
  },
  _rtiToString(rti, genericContext) {
    var s, questionArgument, argumentKind, $name, $arguments, t1, t2,
      kind = rti._kind;
    if (kind === 5)
      return "erased";
    if (kind === 2)
      return "dynamic";
    if (kind === 3)
      return "void";
    if (kind === 1)
      return "Never";
    if (kind === 4)
      return "any";
    if (kind === 6) {
      s = A._rtiToString(rti._primary, genericContext);
      return s;
    }
    if (kind === 7) {
      questionArgument = rti._primary;
      s = A._rtiToString(questionArgument, genericContext);
      argumentKind = questionArgument._kind;
      return (argumentKind === 11 || argumentKind === 12 ? "(" + s + ")" : s) + "?";
    }
    if (kind === 8)
      return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
    if (kind === 9) {
      $name = A._unminifyOrTag(rti._primary);
      $arguments = rti._rest;
      return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
    }
    if (kind === 11)
      return A._functionRtiToString(rti, genericContext, null);
    if (kind === 12)
      return A._functionRtiToString(rti._primary, genericContext, rti._rest);
    if (kind === 13) {
      t1 = rti._primary;
      t2 = genericContext.length;
      t1 = t2 - 1 - t1;
      if (!(t1 >= 0 && t1 < t2))
        return A.ioore(genericContext, t1);
      return genericContext[t1];
    }
    return "?";
  },
  _unminifyOrTag(rawClassName) {
    var preserved = init.mangledGlobalNames[rawClassName];
    if (preserved != null)
      return preserved;
    return rawClassName;
  },
  _Universe_findRule(universe, targetType) {
    var rule = universe.tR[targetType];
    for (; typeof rule == "string";)
      rule = universe.tR[rule];
    return rule;
  },
  _Universe_findErasedType(universe, cls) {
    var $length, erased, $arguments, i, $interface,
      t1 = universe.eT,
      probe = t1[cls];
    if (probe == null)
      return A._Universe_eval(universe, cls, false);
    else if (typeof probe == "number") {
      $length = probe;
      erased = A._Universe__lookupTerminalRti(universe, 5, "#");
      $arguments = A._Utils_newArrayOrEmpty($length);
      for (i = 0; i < $length; ++i)
        $arguments[i] = erased;
      $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
      t1[cls] = $interface;
      return $interface;
    } else
      return probe;
  },
  _Universe_addRules(universe, rules) {
    return A._Utils_objectAssign(universe.tR, rules);
  },
  _Universe_addErasedTypes(universe, types) {
    return A._Utils_objectAssign(universe.eT, types);
  },
  _Universe_eval(universe, recipe, normalize) {
    var rti,
      t1 = universe.eC,
      probe = t1.get(recipe);
    if (probe != null)
      return probe;
    rti = A._Parser_parse(A._Parser_create(universe, null, recipe, normalize));
    t1.set(recipe, rti);
    return rti;
  },
  _Universe_evalInEnvironment(universe, environment, recipe) {
    var probe, rti,
      cache = environment._evalCache;
    if (cache == null)
      cache = environment._evalCache = new Map();
    probe = cache.get(recipe);
    if (probe != null)
      return probe;
    rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
    cache.set(recipe, rti);
    return rti;
  },
  _Universe_bind(universe, environment, argumentsRti) {
    var argumentsRecipe, probe, rti,
      cache = environment._bindCache;
    if (cache == null)
      cache = environment._bindCache = new Map();
    argumentsRecipe = argumentsRti._canonicalRecipe;
    probe = cache.get(argumentsRecipe);
    if (probe != null)
      return probe;
    rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
    cache.set(argumentsRecipe, rti);
    return rti;
  },
  _Universe__installTypeTests(universe, rti) {
    rti._as = A._installSpecializedAsCheck;
    rti._is = A._installSpecializedIsTest;
    return rti;
  },
  _Universe__lookupTerminalRti(universe, kind, key) {
    var rti, t1,
      probe = universe.eC.get(key);
    if (probe != null)
      return probe;
    rti = new A.Rti(null, null);
    rti._kind = kind;
    rti._canonicalRecipe = key;
    t1 = A._Universe__installTypeTests(universe, rti);
    universe.eC.set(key, t1);
    return t1;
  },
  _Universe__lookupStarRti(universe, baseType, normalize) {
    var t1,
      key = baseType._canonicalRecipe + "*",
      probe = universe.eC.get(key);
    if (probe != null)
      return probe;
    t1 = A._Universe__createStarRti(universe, baseType, key, normalize);
    universe.eC.set(key, t1);
    return t1;
  },
  _Universe__createStarRti(universe, baseType, key, normalize) {
    var baseKind, t1, rti;
    if (normalize) {
      baseKind = baseType._kind;
      if (!A.isStrongTopType(baseType))
        t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
      else
        t1 = true;
      if (t1)
        return baseType;
    }
    rti = new A.Rti(null, null);
    rti._kind = 6;
    rti._primary = baseType;
    rti._canonicalRecipe = key;
    return A._Universe__installTypeTests(universe, rti);
  },
  _Universe__lookupQuestionRti(universe, baseType, normalize) {
    var t1,
      key = baseType._canonicalRecipe + "?",
      probe = universe.eC.get(key);
    if (probe != null)
      return probe;
    t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
    universe.eC.set(key, t1);
    return t1;
  },
  _Universe__createQuestionRti(universe, baseType, key, normalize) {
    var baseKind, t1, starArgument, rti;
    if (normalize) {
      baseKind = baseType._kind;
      if (!A.isStrongTopType(baseType))
        if (!(baseType === type$.Null || baseType === type$.JSNull))
          if (baseKind !== 7)
            t1 = baseKind === 8 && A.isNullable(baseType._primary);
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
      if (t1)
        return baseType;
      else if (baseKind === 1 || baseType === type$.legacy_Never)
        return type$.Null;
      else if (baseKind === 6) {
        starArgument = baseType._primary;
        if (starArgument._kind === 8 && A.isNullable(starArgument._primary))
          return starArgument;
        else
          return A.Rti__getQuestionFromStar(universe, baseType);
      }
    }
    rti = new A.Rti(null, null);
    rti._kind = 7;
    rti._primary = baseType;
    rti._canonicalRecipe = key;
    return A._Universe__installTypeTests(universe, rti);
  },
  _Universe__lookupFutureOrRti(universe, baseType, normalize) {
    var t1,
      key = baseType._canonicalRecipe + "/",
      probe = universe.eC.get(key);
    if (probe != null)
      return probe;
    t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
    universe.eC.set(key, t1);
    return t1;
  },
  _Universe__createFutureOrRti(universe, baseType, key, normalize) {
    var t1, t2, rti;
    if (normalize) {
      t1 = baseType._kind;
      if (!A.isStrongTopType(baseType))
        if (!(baseType === type$.legacy_Object))
          t2 = false;
        else
          t2 = true;
      else
        t2 = true;
      if (t2 || baseType === type$.Object)
        return baseType;
      else if (t1 === 1)
        return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
      else if (baseType === type$.Null || baseType === type$.JSNull)
        return type$.nullable_Future_Null;
    }
    rti = new A.Rti(null, null);
    rti._kind = 8;
    rti._primary = baseType;
    rti._canonicalRecipe = key;
    return A._Universe__installTypeTests(universe, rti);
  },
  _Universe__lookupGenericFunctionParameterRti(universe, index) {
    var rti, t1,
      key = "" + index + "^",
      probe = universe.eC.get(key);
    if (probe != null)
      return probe;
    rti = new A.Rti(null, null);
    rti._kind = 13;
    rti._primary = index;
    rti._canonicalRecipe = key;
    t1 = A._Universe__installTypeTests(universe, rti);
    universe.eC.set(key, t1);
    return t1;
  },
  _Universe__canonicalRecipeJoin($arguments) {
    var s, sep, i,
      $length = $arguments.length;
    for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
      s += sep + $arguments[i]._canonicalRecipe;
    return s;
  },
  _Universe__canonicalRecipeJoinNamed($arguments) {
    var s, sep, i, t1, nameSep,
      $length = $arguments.length;
    for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
      t1 = $arguments[i];
      nameSep = $arguments[i + 1] ? "!" : ":";
      s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
    }
    return s;
  },
  _Universe__lookupInterfaceRti(universe, $name, $arguments) {
    var probe, rti, t1,
      s = $name;
    if ($arguments.length > 0)
      s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
    probe = universe.eC.get(s);
    if (probe != null)
      return probe;
    rti = new A.Rti(null, null);
    rti._kind = 9;
    rti._primary = $name;
    rti._rest = $arguments;
    if ($arguments.length > 0)
      rti._precomputed1 = $arguments[0];
    rti._canonicalRecipe = s;
    t1 = A._Universe__installTypeTests(universe, rti);
    universe.eC.set(s, t1);
    return t1;
  },
  _Universe__lookupBindingRti(universe, base, $arguments) {
    var newBase, newArguments, key, probe, rti, t1;
    if (base._kind === 10) {
      newBase = base._primary;
      newArguments = base._rest.concat($arguments);
    } else {
      newArguments = $arguments;
      newBase = base;
    }
    key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
    probe = universe.eC.get(key);
    if (probe != null)
      return probe;
    rti = new A.Rti(null, null);
    rti._kind = 10;
    rti._primary = newBase;
    rti._rest = newArguments;
    rti._canonicalRecipe = key;
    t1 = A._Universe__installTypeTests(universe, rti);
    universe.eC.set(key, t1);
    return t1;
  },
  _Universe__lookupFunctionRti(universe, returnType, parameters) {
    var sep, key, probe, rti, t1,
      s = returnType._canonicalRecipe,
      requiredPositional = parameters._requiredPositional,
      requiredPositionalLength = requiredPositional.length,
      optionalPositional = parameters._optionalPositional,
      optionalPositionalLength = optionalPositional.length,
      named = parameters._named,
      namedLength = named.length,
      recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
    if (optionalPositionalLength > 0) {
      sep = requiredPositionalLength > 0 ? "," : "";
      recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
    }
    if (namedLength > 0) {
      sep = requiredPositionalLength > 0 ? "," : "";
      recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
    }
    key = s + (recipe + ")");
    probe = universe.eC.get(key);
    if (probe != null)
      return probe;
    rti = new A.Rti(null, null);
    rti._kind = 11;
    rti._primary = returnType;
    rti._rest = parameters;
    rti._canonicalRecipe = key;
    t1 = A._Universe__installTypeTests(universe, rti);
    universe.eC.set(key, t1);
    return t1;
  },
  _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
    var t1,
      key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
      probe = universe.eC.get(key);
    if (probe != null)
      return probe;
    t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
    universe.eC.set(key, t1);
    return t1;
  },
  _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
    var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
    if (normalize) {
      $length = bounds.length;
      typeArguments = A._Utils_newArrayOrEmpty($length);
      for (count = 0, i = 0; i < $length; ++i) {
        bound = bounds[i];
        if (bound._kind === 1) {
          typeArguments[i] = bound;
          ++count;
        }
      }
      if (count > 0) {
        substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
        substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
        return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
      }
    }
    rti = new A.Rti(null, null);
    rti._kind = 12;
    rti._primary = baseFunctionType;
    rti._rest = bounds;
    rti._canonicalRecipe = key;
    return A._Universe__installTypeTests(universe, rti);
  },
  _Parser_create(universe, environment, recipe, normalize) {
    return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
  },
  _Parser_parse(parser) {
    var t2, i, ch, t3, array, head, base, parameters, optionalPositional, named, item,
      source = parser.r,
      t1 = parser.s;
    for (t2 = source.length, i = 0; i < t2;) {
      ch = source.charCodeAt(i);
      if (ch >= 48 && ch <= 57)
        i = A._Parser_handleDigit(i + 1, ch, source, t1);
      else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36)
        i = A._Parser_handleIdentifier(parser, i, source, t1, false);
      else if (ch === 46)
        i = A._Parser_handleIdentifier(parser, i, source, t1, true);
      else {
        ++i;
        switch (ch) {
          case 44:
            break;
          case 58:
            t1.push(false);
            break;
          case 33:
            t1.push(true);
            break;
          case 59:
            t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
            break;
          case 94:
            t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
            break;
          case 35:
            t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
            break;
          case 64:
            t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
            break;
          case 126:
            t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
            break;
          case 60:
            t1.push(parser.p);
            parser.p = t1.length;
            break;
          case 62:
            t3 = parser.u;
            array = t1.splice(parser.p);
            A._Parser_toTypes(parser.u, parser.e, array);
            parser.p = t1.pop();
            head = t1.pop();
            if (typeof head == "string")
              t1.push(A._Universe__lookupInterfaceRti(t3, head, array));
            else {
              base = A._Parser_toType(t3, parser.e, head);
              switch (base._kind) {
                case 11:
                  t1.push(A._Universe__lookupGenericFunctionRti(t3, base, array, parser.n));
                  break;
                default:
                  t1.push(A._Universe__lookupBindingRti(t3, base, array));
                  break;
              }
            }
            break;
          case 38:
            A._Parser_handleExtendedOperations(parser, t1);
            break;
          case 42:
            t3 = parser.u;
            t1.push(A._Universe__lookupStarRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
            break;
          case 63:
            t3 = parser.u;
            t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
            break;
          case 47:
            t3 = parser.u;
            t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
            break;
          case 40:
            t1.push(parser.p);
            parser.p = t1.length;
            break;
          case 41:
            t3 = parser.u;
            parameters = new A._FunctionParameters();
            optionalPositional = t3.sEA;
            named = t3.sEA;
            head = t1.pop();
            if (typeof head == "number")
              switch (head) {
                case -1:
                  optionalPositional = t1.pop();
                  break;
                case -2:
                  named = t1.pop();
                  break;
                default:
                  t1.push(head);
                  break;
              }
            else
              t1.push(head);
            array = t1.splice(parser.p);
            A._Parser_toTypes(parser.u, parser.e, array);
            parser.p = t1.pop();
            parameters._requiredPositional = array;
            parameters._optionalPositional = optionalPositional;
            parameters._named = named;
            t1.push(A._Universe__lookupFunctionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parameters));
            break;
          case 91:
            t1.push(parser.p);
            parser.p = t1.length;
            break;
          case 93:
            array = t1.splice(parser.p);
            A._Parser_toTypes(parser.u, parser.e, array);
            parser.p = t1.pop();
            t1.push(array);
            t1.push(-1);
            break;
          case 123:
            t1.push(parser.p);
            parser.p = t1.length;
            break;
          case 125:
            array = t1.splice(parser.p);
            A._Parser_toTypesNamed(parser.u, parser.e, array);
            parser.p = t1.pop();
            t1.push(array);
            t1.push(-2);
            break;
          default:
            throw "Bad character " + ch;
        }
      }
    }
    item = t1.pop();
    return A._Parser_toType(parser.u, parser.e, item);
  },
  _Parser_handleDigit(i, digit, source, stack) {
    var t1, ch,
      value = digit - 48;
    for (t1 = source.length; i < t1; ++i) {
      ch = source.charCodeAt(i);
      if (!(ch >= 48 && ch <= 57))
        break;
      value = value * 10 + (ch - 48);
    }
    stack.push(value);
    return i;
  },
  _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
    var t1, ch, t2, string, environment, recipe,
      i = start + 1;
    for (t1 = source.length; i < t1; ++i) {
      ch = source.charCodeAt(i);
      if (ch === 46) {
        if (hasPeriod)
          break;
        hasPeriod = true;
      } else {
        if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36))
          t2 = ch >= 48 && ch <= 57;
        else
          t2 = true;
        if (!t2)
          break;
      }
    }
    string = source.substring(start, i);
    if (hasPeriod) {
      t1 = parser.u;
      environment = parser.e;
      if (environment._kind === 10)
        environment = environment._primary;
      recipe = A._Universe_findRule(t1, environment._primary)[string];
      if (recipe == null)
        A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
      stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
    } else
      stack.push(string);
    return i;
  },
  _Parser_handleExtendedOperations(parser, stack) {
    var $top = stack.pop();
    if (0 === $top) {
      stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
      return;
    }
    if (1 === $top) {
      stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
      return;
    }
    throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
  },
  _Parser_toType(universe, environment, item) {
    if (typeof item == "string")
      return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
    else if (typeof item == "number")
      return A._Parser_indexToType(universe, environment, item);
    else
      return item;
  },
  _Parser_toTypes(universe, environment, items) {
    var i,
      $length = items.length;
    for (i = 0; i < $length; ++i)
      items[i] = A._Parser_toType(universe, environment, items[i]);
  },
  _Parser_toTypesNamed(universe, environment, items) {
    var i,
      $length = items.length;
    for (i = 2; i < $length; i += 3)
      items[i] = A._Parser_toType(universe, environment, items[i]);
  },
  _Parser_indexToType(universe, environment, index) {
    var typeArguments, len,
      kind = environment._kind;
    if (kind === 10) {
      if (index === 0)
        return environment._primary;
      typeArguments = environment._rest;
      len = typeArguments.length;
      if (index <= len)
        return typeArguments[index - 1];
      index -= len;
      environment = environment._primary;
      kind = environment._kind;
    } else if (index === 0)
      return environment;
    if (kind !== 9)
      throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
    typeArguments = environment._rest;
    if (index <= typeArguments.length)
      return typeArguments[index - 1];
    throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
  },
  _isSubtype(universe, s, sEnv, t, tEnv) {
    var t1, sKind, leftTypeVariable, tKind, sBounds, tBounds, sLength, i, sBound, tBound;
    if (s === t)
      return true;
    if (!A.isStrongTopType(t))
      if (!(t === type$.legacy_Object))
        t1 = false;
      else
        t1 = true;
    else
      t1 = true;
    if (t1)
      return true;
    sKind = s._kind;
    if (sKind === 4)
      return true;
    if (A.isStrongTopType(s))
      return false;
    if (s._kind !== 1)
      t1 = false;
    else
      t1 = true;
    if (t1)
      return true;
    leftTypeVariable = sKind === 13;
    if (leftTypeVariable)
      if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv))
        return true;
    tKind = t._kind;
    t1 = s === type$.Null || s === type$.JSNull;
    if (t1) {
      if (tKind === 8)
        return A._isSubtype(universe, s, sEnv, t._primary, tEnv);
      return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
    }
    if (t === type$.Object) {
      if (sKind === 8)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      if (sKind === 6)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
      return sKind !== 7;
    }
    if (sKind === 6)
      return A._isSubtype(universe, s._primary, sEnv, t, tEnv);
    if (tKind === 6) {
      t1 = A.Rti__getQuestionFromStar(universe, t);
      return A._isSubtype(universe, s, sEnv, t1, tEnv);
    }
    if (sKind === 8) {
      if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv))
        return false;
      return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv);
    }
    if (sKind === 7) {
      t1 = A._isSubtype(universe, type$.Null, sEnv, t, tEnv);
      return t1 && A._isSubtype(universe, s._primary, sEnv, t, tEnv);
    }
    if (tKind === 8) {
      if (A._isSubtype(universe, s, sEnv, t._primary, tEnv))
        return true;
      return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv);
    }
    if (tKind === 7) {
      t1 = A._isSubtype(universe, s, sEnv, type$.Null, tEnv);
      return t1 || A._isSubtype(universe, s, sEnv, t._primary, tEnv);
    }
    if (leftTypeVariable)
      return false;
    t1 = sKind !== 11;
    if ((!t1 || sKind === 12) && t === type$.Function)
      return true;
    if (tKind === 12) {
      if (s === type$.JavaScriptFunction)
        return true;
      if (sKind !== 12)
        return false;
      sBounds = s._rest;
      tBounds = t._rest;
      sLength = sBounds.length;
      if (sLength !== tBounds.length)
        return false;
      sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
      tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
      for (i = 0; i < sLength; ++i) {
        sBound = sBounds[i];
        tBound = tBounds[i];
        if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv))
          return false;
      }
      return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv);
    }
    if (tKind === 11) {
      if (s === type$.JavaScriptFunction)
        return true;
      if (t1)
        return false;
      return A._isFunctionSubtype(universe, s, sEnv, t, tEnv);
    }
    if (sKind === 9) {
      if (tKind !== 9)
        return false;
      return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv);
    }
    return false;
  },
  _isFunctionSubtype(universe, s, sEnv, t, tEnv) {
    var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
    if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv))
      return false;
    sParameters = s._rest;
    tParameters = t._rest;
    sRequiredPositional = sParameters._requiredPositional;
    tRequiredPositional = tParameters._requiredPositional;
    sRequiredPositionalLength = sRequiredPositional.length;
    tRequiredPositionalLength = tRequiredPositional.length;
    if (sRequiredPositionalLength > tRequiredPositionalLength)
      return false;
    requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
    sOptionalPositional = sParameters._optionalPositional;
    tOptionalPositional = tParameters._optionalPositional;
    sOptionalPositionalLength = sOptionalPositional.length;
    tOptionalPositionalLength = tOptionalPositional.length;
    if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
      return false;
    for (i = 0; i < sRequiredPositionalLength; ++i) {
      t1 = sRequiredPositional[i];
      if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv))
        return false;
    }
    for (i = 0; i < requiredPositionalDelta; ++i) {
      t1 = sOptionalPositional[i];
      if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv))
        return false;
    }
    for (i = 0; i < tOptionalPositionalLength; ++i) {
      t1 = sOptionalPositional[requiredPositionalDelta + i];
      if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv))
        return false;
    }
    sNamed = sParameters._named;
    tNamed = tParameters._named;
    sNamedLength = sNamed.length;
    tNamedLength = tNamed.length;
    for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
      tName = tNamed[tIndex];
      for (; true;) {
        if (sIndex >= sNamedLength)
          return false;
        sName = sNamed[sIndex];
        sIndex += 3;
        if (tName < sName)
          return false;
        sIsRequired = sNamed[sIndex - 2];
        if (sName < tName) {
          if (sIsRequired)
            return false;
          continue;
        }
        t1 = tNamed[tIndex + 1];
        if (sIsRequired && !t1)
          return false;
        t1 = sNamed[sIndex - 1];
        if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv))
          return false;
        break;
      }
    }
    for (; sIndex < sNamedLength;) {
      if (sNamed[sIndex + 1])
        return false;
      sIndex += 3;
    }
    return true;
  },
  _isInterfaceSubtype(universe, s, sEnv, t, tEnv) {
    var rule, recipes, $length, supertypeArgs, i, t1, t2,
      sName = s._primary,
      tName = t._primary;
    for (; sName !== tName;) {
      rule = universe.tR[sName];
      if (rule == null)
        return false;
      if (typeof rule == "string") {
        sName = rule;
        continue;
      }
      recipes = rule[tName];
      if (recipes == null)
        return false;
      $length = recipes.length;
      supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
      for (i = 0; i < $length; ++i)
        supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
      return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv);
    }
    t1 = s._rest;
    t2 = t._rest;
    return A._areArgumentsSubtypes(universe, t1, null, sEnv, t2, tEnv);
  },
  _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv) {
    var i, t1, t2,
      $length = sArgs.length;
    for (i = 0; i < $length; ++i) {
      t1 = sArgs[i];
      t2 = tArgs[i];
      if (!A._isSubtype(universe, t1, sEnv, t2, tEnv))
        return false;
    }
    return true;
  },
  isNullable(t) {
    var t1,
      kind = t._kind;
    if (!(t === type$.Null || t === type$.JSNull))
      if (!A.isStrongTopType(t))
        if (kind !== 7)
          if (!(kind === 6 && A.isNullable(t._primary)))
            t1 = kind === 8 && A.isNullable(t._primary);
          else
            t1 = true;
        else
          t1 = true;
      else
        t1 = true;
    else
      t1 = true;
    return t1;
  },
  isTopType(t) {
    var t1;
    if (!A.isStrongTopType(t))
      if (!(t === type$.legacy_Object))
        t1 = false;
      else
        t1 = true;
    else
      t1 = true;
    return t1;
  },
  isStrongTopType(t) {
    var kind = t._kind;
    return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
  },
  _Utils_objectAssign(o, other) {
    var i, key,
      keys = Object.keys(other),
      $length = keys.length;
    for (i = 0; i < $length; ++i) {
      key = keys[i];
      o[key] = other[key];
    }
  },
  _Utils_newArrayOrEmpty($length) {
    return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
  },
  Rti: function Rti(t0, t1) {
    var _ = this;
    _._as = t0;
    _._is = t1;
    _._cachedRuntimeType = _._specializedTestResource = _._precomputed1 = null;
    _._kind = 0;
    _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
  },
  _FunctionParameters: function _FunctionParameters() {
    this._named = this._optionalPositional = this._requiredPositional = null;
  },
  _Type: function _Type(t0) {
    this._rti = t0;
  },
  _Error: function _Error() {
  },
  _TypeError: function _TypeError(t0) {
    this.__rti$_message = t0;
  },
  _IterationMarker_yieldStar(values) {
    return new A._IterationMarker(values, 1);
  },
  _IterationMarker_endOfIteration() {
    return B._IterationMarker_null_2;
  },
  _IterationMarker_uncaughtError(error) {
    return new A._IterationMarker(error, 3);
  },
  _makeSyncStarIterable(body, $T) {
    return new A._SyncStarIterable(body, $T._eval$1("_SyncStarIterable<0>"));
  },
  _IterationMarker: function _IterationMarker(t0, t1) {
    this.value = t0;
    this.state = t1;
  },
  _SyncStarIterator: function _SyncStarIterator(t0, t1) {
    var _ = this;
    _._body = t0;
    _._suspendedBodies = _._nestedIterator = _._async$_current = null;
    _.$ti = t1;
  },
  _SyncStarIterable: function _SyncStarIterable(t0, t1) {
    this._outerHelper = t0;
    this.$ti = t1;
  },
  StreamTransformerBase: function StreamTransformerBase() {
  },
  LinkedHashMap_LinkedHashMap(hashCode, isValidKey, $K, $V) {
    return A._LinkedCustomHashMap$(A.collection___defaultEquals$closure(), hashCode, isValidKey, $K, $V);
  },
  LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
    return $K._eval$1("@<0>")._bind$1($V)._eval$1("LinkedHashMap<1,2>")._as(A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"))));
  },
  LinkedHashMap_LinkedHashMap$_empty($K, $V) {
    return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
  },
  _LinkedCustomHashMap$(_equals, _hashCode, validKey, $K, $V) {
    var t1 = validKey != null ? validKey : new A._LinkedCustomHashMap_closure($K);
    return new A._LinkedCustomHashMap(_equals, _hashCode, t1, $K._eval$1("@<0>")._bind$1($V)._eval$1("_LinkedCustomHashMap<1,2>"));
  },
  _defaultEquals(a, b) {
    return J.$eq$(a, b);
  },
  IterableBase_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
    var parts, t1;
    if (A._isToStringVisiting(iterable)) {
      if (leftDelimiter === "(" && rightDelimiter === ")")
        return "(...)";
      return leftDelimiter + "..." + rightDelimiter;
    }
    parts = A._setArrayType([], type$.JSArray_String);
    B.JSArray_methods.add$1($._toStringVisiting, iterable);
    try {
      A._iterablePartsToStrings(iterable, parts);
    } finally {
      if (0 >= $._toStringVisiting.length)
        return A.ioore($._toStringVisiting, -1);
      $._toStringVisiting.pop();
    }
    t1 = A.StringBuffer__writeAll(leftDelimiter, type$.Iterable_dynamic._as(parts), ", ") + rightDelimiter;
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  },
  IterableBase_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
    var buffer, t1;
    if (A._isToStringVisiting(iterable))
      return leftDelimiter + "..." + rightDelimiter;
    buffer = new A.StringBuffer(leftDelimiter);
    B.JSArray_methods.add$1($._toStringVisiting, iterable);
    try {
      t1 = buffer;
      t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
    } finally {
      if (0 >= $._toStringVisiting.length)
        return A.ioore($._toStringVisiting, -1);
      $._toStringVisiting.pop();
    }
    buffer._contents += rightDelimiter;
    t1 = buffer._contents;
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  },
  _isToStringVisiting(o) {
    var t1, i;
    for (t1 = $._toStringVisiting.length, i = 0; i < t1; ++i)
      if (o === $._toStringVisiting[i])
        return true;
    return false;
  },
  _iterablePartsToStrings(iterable, parts) {
    var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
      it = iterable.get$iterator(iterable),
      $length = 0, count = 0;
    while (true) {
      if (!($length < 80 || count < 3))
        break;
      if (!it.moveNext$0())
        return;
      next = A.S(it.get$current());
      B.JSArray_methods.add$1(parts, next);
      $length += next.length + 2;
      ++count;
    }
    if (!it.moveNext$0()) {
      if (count <= 5)
        return;
      if (0 >= parts.length)
        return A.ioore(parts, -1);
      ultimateString = parts.pop();
      if (0 >= parts.length)
        return A.ioore(parts, -1);
      penultimateString = parts.pop();
    } else {
      penultimate = it.get$current();
      ++count;
      if (!it.moveNext$0()) {
        if (count <= 4) {
          B.JSArray_methods.add$1(parts, A.S(penultimate));
          return;
        }
        ultimateString = A.S(penultimate);
        if (0 >= parts.length)
          return A.ioore(parts, -1);
        penultimateString = parts.pop();
        $length += ultimateString.length + 2;
      } else {
        ultimate = it.get$current();
        ++count;
        for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
          ultimate0 = it.get$current();
          ++count;
          if (count > 100) {
            while (true) {
              if (!($length > 75 && count > 3))
                break;
              if (0 >= parts.length)
                return A.ioore(parts, -1);
              $length -= parts.pop().length + 2;
              --count;
            }
            B.JSArray_methods.add$1(parts, "...");
            return;
          }
        }
        penultimateString = A.S(penultimate);
        ultimateString = A.S(ultimate);
        $length += ultimateString.length + penultimateString.length + 4;
      }
    }
    if (count > parts.length + 2) {
      $length += 5;
      elision = "...";
    } else
      elision = null;
    while (true) {
      if (!($length > 80 && parts.length > 3))
        break;
      if (0 >= parts.length)
        return A.ioore(parts, -1);
      $length -= parts.pop().length + 2;
      if (elision == null) {
        $length += 5;
        elision = "...";
      }
    }
    if (elision != null)
      B.JSArray_methods.add$1(parts, elision);
    B.JSArray_methods.add$1(parts, penultimateString);
    B.JSArray_methods.add$1(parts, ultimateString);
  },
  MapBase_mapToString(m) {
    var result, t1 = {};
    if (A._isToStringVisiting(m))
      return "{...}";
    result = new A.StringBuffer("");
    try {
      B.JSArray_methods.add$1($._toStringVisiting, m);
      result._contents += "{";
      t1.first = true;
      m.forEach$1(0, new A.MapBase_mapToString_closure(t1, result));
      result._contents += "}";
    } finally {
      if (0 >= $._toStringVisiting.length)
        return A.ioore($._toStringVisiting, -1);
      $._toStringVisiting.pop();
    }
    t1 = result._contents;
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  },
  _LinkedCustomHashMap: function _LinkedCustomHashMap(t0, t1, t2, t3) {
    var _ = this;
    _._equals = t0;
    _._hashCode = t1;
    _._validKey = t2;
    _.__js_helper$_length = 0;
    _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
    _._modifications = 0;
    _.$ti = t3;
  },
  _LinkedCustomHashMap_closure: function _LinkedCustomHashMap_closure(t0) {
    this.K = t0;
  },
  IterableBase: function IterableBase() {
  },
  ListBase: function ListBase() {
  },
  ListMixin: function ListMixin() {
  },
  MapBase: function MapBase() {
  },
  MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
    this._box_0 = t0;
    this.result = t1;
  },
  MapMixin: function MapMixin() {
  },
  MapMixin_entries_closure: function MapMixin_entries_closure(t0) {
    this.$this = t0;
  },
  _UnmodifiableMapMixin: function _UnmodifiableMapMixin() {
  },
  MapView: function MapView() {
  },
  UnmodifiableMapView: function UnmodifiableMapView() {
  },
  SetMixin: function SetMixin() {
  },
  _SetBase: function _SetBase() {
  },
  _UnmodifiableSetMixin: function _UnmodifiableSetMixin() {
  },
  _UnmodifiableSet: function _UnmodifiableSet(t0, t1) {
    this._collection$_map = t0;
    this.$ti = t1;
  },
  _ListBase_Object_ListMixin: function _ListBase_Object_ListMixin() {
  },
  _UnmodifiableMapView_MapView__UnmodifiableMapMixin: function _UnmodifiableMapView_MapView__UnmodifiableMapMixin() {
  },
  __SetBase_Object_SetMixin: function __SetBase_Object_SetMixin() {
  },
  __UnmodifiableSet__SetBase__UnmodifiableSetMixin: function __UnmodifiableSet__SetBase__UnmodifiableSetMixin() {
  },
  Utf8Decoder__convertIntercepted(allowMalformed, codeUnits, start, end) {
    var casted, result;
    if (codeUnits instanceof Uint8Array) {
      casted = codeUnits;
      end = casted.length;
      if (end - start < 15)
        return null;
      result = A.Utf8Decoder__convertInterceptedUint8List(allowMalformed, casted, start, end);
      if (result != null && allowMalformed)
        if (result.indexOf("\ufffd") >= 0)
          return null;
      return result;
    }
    return null;
  },
  Utf8Decoder__convertInterceptedUint8List(allowMalformed, codeUnits, start, end) {
    var decoder = allowMalformed ? $.$get$Utf8Decoder__decoderNonfatal() : $.$get$Utf8Decoder__decoder();
    if (decoder == null)
      return null;
    if (0 === start && end === codeUnits.length)
      return A.Utf8Decoder__useTextDecoder(decoder, codeUnits);
    return A.Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, A.RangeError_checkValidRange(start, end, codeUnits.length)));
  },
  Utf8Decoder__useTextDecoder(decoder, codeUnits) {
    var t1, exception;
    try {
      t1 = decoder.decode(codeUnits);
      return t1;
    } catch (exception) {
    }
    return null;
  },
  JsonUnsupportedObjectError$(unsupportedObject, cause, partialResult) {
    return new A.JsonUnsupportedObjectError(unsupportedObject, cause);
  },
  _defaultToEncodable(object) {
    return object.toJson$0();
  },
  _JsonStringStringifier$(_sink, _toEncodable) {
    return new A._JsonStringStringifier(_sink, [], A.convert___defaultToEncodable$closure());
  },
  _JsonStringStringifier_stringify(object, toEncodable, indent) {
    var t1,
      output = new A.StringBuffer(""),
      stringifier = A._JsonStringStringifier$(output, toEncodable);
    stringifier.writeObject$1(object);
    t1 = output._contents;
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  },
  _Utf8Decoder_errorDescription(state) {
    switch (state) {
      case 65:
        return "Missing extension byte";
      case 67:
        return "Unexpected extension byte";
      case 69:
        return "Invalid UTF-8 byte";
      case 71:
        return "Overlong encoding";
      case 73:
        return "Out of unicode range";
      case 75:
        return "Encoded surrogate";
      case 77:
        return "Unfinished UTF-8 octet sequence";
      default:
        return "";
    }
  },
  Utf8Decoder__decoder_closure: function Utf8Decoder__decoder_closure() {
  },
  Utf8Decoder__decoderNonfatal_closure: function Utf8Decoder__decoderNonfatal_closure() {
  },
  Codec: function Codec() {
  },
  Converter: function Converter() {
  },
  Encoding: function Encoding() {
  },
  JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
    this.unsupportedObject = t0;
    this.cause = t1;
  },
  JsonCyclicError: function JsonCyclicError(t0, t1) {
    this.unsupportedObject = t0;
    this.cause = t1;
  },
  JsonCodec: function JsonCodec() {
  },
  JsonEncoder: function JsonEncoder(t0) {
    this._toEncodable = t0;
  },
  _JsonStringifier: function _JsonStringifier() {
  },
  _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
    this._box_0 = t0;
    this.keyValueList = t1;
  },
  _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
    this._sink = t0;
    this._seen = t1;
    this._toEncodable = t2;
  },
  Utf8Codec: function Utf8Codec(t0) {
    this._allowMalformed = t0;
  },
  Utf8Encoder: function Utf8Encoder() {
  },
  _Utf8Encoder: function _Utf8Encoder(t0) {
    this._bufferIndex = 0;
    this._buffer = t0;
  },
  Utf8Decoder: function Utf8Decoder(t0) {
    this._allowMalformed = t0;
  },
  _Utf8Decoder: function _Utf8Decoder(t0) {
    this.allowMalformed = t0;
    this._state = 16;
    this._charOrIndex = 0;
  },
  Error__objectToString(object) {
    if (object instanceof A.Closure)
      return object.toString$0(0);
    return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
  },
  List_List$filled($length, fill, growable, $E) {
    var i,
      result = J.JSArray_JSArray$fixed($length, $E);
    if ($length !== 0 && fill != null)
      for (i = 0; i < $length; ++i)
        result[i] = fill;
    return result;
  },
  List_List$from(elements, growable, $E) {
    var t1,
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
    for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
      B.JSArray_methods.add$1(list, $E._as(t1.get$current()));
    if (growable)
      return list;
    return J.JSArray_markFixedList(list, $E);
  },
  List_List$of(elements, growable, $E) {
    var t1 = A.List_List$_of(elements, $E);
    return t1;
  },
  List_List$_of(elements, $E) {
    var list, t1;
    if (Array.isArray(elements))
      return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
    list = A._setArrayType([], $E._eval$1("JSArray<0>"));
    for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
      B.JSArray_methods.add$1(list, t1.get$current());
    return list;
  },
  List_List$unmodifiable(elements, $E) {
    return J.JSArray_markUnmodifiableList(A.List_List$from(elements, false, $E));
  },
  String_String$fromCharCodes(charCodes, start, end) {
    var t1 = A.Primitives_stringFromNativeUint8List(charCodes, start, A.RangeError_checkValidRange(start, end, charCodes.length));
    return t1;
  },
  RegExp_RegExp(source) {
    return new A.JSSyntaxRegExp(source, A.JSSyntaxRegExp_makeNative(source, false, true, false, false, false));
  },
  StringBuffer__writeAll(string, objects, separator) {
    var iterator = J.get$iterator$ax(objects);
    if (!iterator.moveNext$0())
      return string;
    if (separator.length === 0) {
      do
        string += A.S(iterator.get$current());
      while (iterator.moveNext$0());
    } else {
      string += A.S(iterator.get$current());
      for (; iterator.moveNext$0();)
        string = string + separator + A.S(iterator.get$current());
    }
    return string;
  },
  NoSuchMethodError$(receiver, memberName, positionalArguments, namedArguments) {
    return new A.NoSuchMethodError(receiver, memberName, positionalArguments, namedArguments);
  },
  DateTime__fourDigits(n) {
    var absN = Math.abs(n),
      sign = n < 0 ? "-" : "";
    if (absN >= 1000)
      return "" + n;
    if (absN >= 100)
      return sign + "0" + absN;
    if (absN >= 10)
      return sign + "00" + absN;
    return sign + "000" + absN;
  },
  DateTime__threeDigits(n) {
    if (n >= 100)
      return "" + n;
    if (n >= 10)
      return "0" + n;
    return "00" + n;
  },
  DateTime__twoDigits(n) {
    if (n >= 10)
      return "" + n;
    return "0" + n;
  },
  Error_safeToString(object) {
    if (typeof object == "number" || A._isBool(object) || object == null)
      return J.toString$0$(object);
    if (typeof object == "string")
      return JSON.stringify(object);
    return A.Error__objectToString(object);
  },
  AssertionError$(message) {
    return new A.AssertionError(message);
  },
  ArgumentError$(message) {
    return new A.ArgumentError(false, null, null, message);
  },
  ArgumentError$value(value, $name, message) {
    return new A.ArgumentError(true, value, $name, message);
  },
  ArgumentError_checkNotNull(argument, $name, $T) {
    return argument;
  },
  RangeError$value(value, $name) {
    return new A.RangeError(null, null, true, value, $name, "Value not in range");
  },
  RangeError$range(invalidValue, minValue, maxValue, $name, message) {
    return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
  },
  RangeError_checkValidRange(start, end, $length) {
    if (0 > start || start > $length)
      throw A.wrapException(A.RangeError$range(start, 0, $length, "start", null));
    if (end != null) {
      if (start > end || end > $length)
        throw A.wrapException(A.RangeError$range(end, start, $length, "end", null));
      return end;
    }
    return $length;
  },
  RangeError_checkNotNegative(value, $name) {
    if (value < 0)
      throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
    return value;
  },
  IndexError$(invalidValue, indexable, $name, message, $length) {
    var t1 = A._asInt($length == null ? J.get$length$asx(indexable) : $length);
    return new A.IndexError(t1, true, invalidValue, $name, "Index out of range");
  },
  UnsupportedError$(message) {
    return new A.UnsupportedError(message);
  },
  UnimplementedError$(message) {
    return new A.UnimplementedError(message);
  },
  StateError$(message) {
    return new A.StateError(message);
  },
  ConcurrentModificationError$(modifiedObject) {
    return new A.ConcurrentModificationError(modifiedObject);
  },
  FormatException$(message, source, offset) {
    return new A.FormatException(message, source, offset);
  },
  Object_hashAll(objects) {
    var t1, _i,
      hash = $.$get$_hashSeed();
    for (t1 = objects.length, _i = 0; _i < t1; ++_i) {
      hash = hash + B.JSNumber_methods.get$hashCode(objects[_i]) & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      hash ^= hash >>> 6;
    }
    hash = hash + ((hash & 67108863) << 3) & 536870911;
    hash ^= hash >>> 11;
    return hash + ((hash & 16383) << 15) & 536870911;
  },
  print(object) {
    A.printString(object);
  },
  _combineSurrogatePair(start, end) {
    return 65536 + ((start & 1023) << 10) + (end & 1023);
  },
  NoSuchMethodError_toString_closure: function NoSuchMethodError_toString_closure(t0, t1) {
    this._box_0 = t0;
    this.sb = t1;
  },
  DateTime: function DateTime(t0, t1) {
    this._value = t0;
    this.isUtc = t1;
  },
  _Enum: function _Enum() {
  },
  Error: function Error() {
  },
  AssertionError: function AssertionError(t0) {
    this.message = t0;
  },
  TypeError: function TypeError() {
  },
  NullThrownError: function NullThrownError() {
  },
  ArgumentError: function ArgumentError(t0, t1, t2, t3) {
    var _ = this;
    _._hasValue = t0;
    _.invalidValue = t1;
    _.name = t2;
    _.message = t3;
  },
  RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
    var _ = this;
    _.start = t0;
    _.end = t1;
    _._hasValue = t2;
    _.invalidValue = t3;
    _.name = t4;
    _.message = t5;
  },
  IndexError: function IndexError(t0, t1, t2, t3, t4) {
    var _ = this;
    _.length = t0;
    _._hasValue = t1;
    _.invalidValue = t2;
    _.name = t3;
    _.message = t4;
  },
  NoSuchMethodError: function NoSuchMethodError(t0, t1, t2, t3) {
    var _ = this;
    _._core$_receiver = t0;
    _._core$_memberName = t1;
    _._core$_arguments = t2;
    _._namedArguments = t3;
  },
  UnsupportedError: function UnsupportedError(t0) {
    this.message = t0;
  },
  UnimplementedError: function UnimplementedError(t0) {
    this.message = t0;
  },
  StateError: function StateError(t0) {
    this.message = t0;
  },
  ConcurrentModificationError: function ConcurrentModificationError(t0) {
    this.modifiedObject = t0;
  },
  OutOfMemoryError: function OutOfMemoryError() {
  },
  StackOverflowError: function StackOverflowError() {
  },
  CyclicInitializationError: function CyclicInitializationError(t0) {
    this.variableName = t0;
  },
  FormatException: function FormatException(t0, t1, t2) {
    this.message = t0;
    this.source = t1;
    this.offset = t2;
  },
  Iterable: function Iterable() {
  },
  Iterator: function Iterator() {
  },
  MapEntry: function MapEntry(t0, t1, t2) {
    this.key = t0;
    this.value = t1;
    this.$ti = t2;
  },
  Null: function Null() {
  },
  Object: function Object() {
  },
  Runes: function Runes(t0) {
    this.string = t0;
  },
  RuneIterator: function RuneIterator(t0) {
    var _ = this;
    _.string = t0;
    _._nextPosition = _._position = 0;
    _._currentCodePoint = -1;
  },
  StringBuffer: function StringBuffer(t0) {
    this._contents = t0;
  },
  DomException: function DomException() {
  },
  _DelegatingIterableBase: function _DelegatingIterableBase() {
  },
  DelegatingList: function DelegatingList() {
  },
  Int64_Int64(value) {
    var negative, v2, v1, t1, t2, t3;
    if (value < 0) {
      value = -value;
      negative = true;
    } else
      negative = false;
    v2 = B.JSInt_methods._tdivFast$1(value, 17592186044416);
    value -= v2 * 17592186044416;
    v1 = B.JSInt_methods._tdivFast$1(value, 4194304);
    t1 = value - v1 * 4194304 & 4194303;
    t2 = v1 & 4194303;
    t3 = v2 & 1048575;
    return negative ? A.Int64__sub(0, 0, 0, t1, t2, t3) : new A.Int64(t1, t2, t3);
  },
  Int64_Int64$fromBytes(bytes) {
    if (7 >= bytes.length)
      return A.ioore(bytes, 7);
    return A.Int64_Int64$fromInts(((((bytes[7] & 255) << 8 | bytes[6] & 255) << 8 | bytes[5] & 255) << 8 | bytes[4] & 255) >>> 0, ((((bytes[3] & 255) << 8 | bytes[2] & 255) << 8 | bytes[1] & 255) << 8 | bytes[0] & 255) >>> 0);
  },
  Int64_Int64$fromInts($top, bottom) {
    return new A.Int64(bottom & 4194303, (($top & 4095) << 10 | bottom >>> 22 & 1023) & 4194303, $top >>> 12 & 1048575);
  },
  Int64__promote(value) {
    if (value instanceof A.Int64)
      return value;
    else if (A._isInt(value))
      return A.Int64_Int64(value);
    throw A.wrapException(A.ArgumentError$value(value, null, null));
  },
  Int64__toRadixStringUnsigned(radix, d0, d1, d2, sign) {
    var d4, d3, fatRadix, chunk1, chunk2, chunk3, q, q0, q1, q2, q3, chunk10, residue;
    if (d0 === 0 && d1 === 0 && d2 === 0)
      return "0";
    d4 = (d2 << 4 | d1 >>> 18) >>> 0;
    d3 = d1 >>> 8 & 1023;
    d2 = (d1 << 2 | d0 >>> 20) & 1023;
    d1 = d0 >>> 10 & 1023;
    d0 &= 1023;
    if (!(radix < 37))
      return A.ioore(B.List_WrN, radix);
    fatRadix = B.List_WrN[radix];
    chunk1 = "";
    chunk2 = "";
    chunk3 = "";
    while (true) {
      if (!!(d4 === 0 && d3 === 0))
        break;
      q = B.JSInt_methods.$tdiv(d4, fatRadix);
      d3 += d4 - q * fatRadix << 10 >>> 0;
      q0 = B.JSInt_methods.$tdiv(d3, fatRadix);
      d2 += d3 - q0 * fatRadix << 10 >>> 0;
      q1 = B.JSInt_methods.$tdiv(d2, fatRadix);
      d1 += d2 - q1 * fatRadix << 10 >>> 0;
      q2 = B.JSInt_methods.$tdiv(d1, fatRadix);
      d0 += d1 - q2 * fatRadix << 10 >>> 0;
      q3 = B.JSInt_methods.$tdiv(d0, fatRadix);
      chunk10 = B.JSString_methods.substring$1(B.JSInt_methods.toRadixString$1(fatRadix + (d0 - q3 * fatRadix), radix), 1);
      chunk3 = chunk2;
      chunk2 = chunk1;
      chunk1 = chunk10;
      d3 = q0;
      d4 = q;
      d2 = q1;
      d1 = q2;
      d0 = q3;
    }
    residue = (d2 << 20 >>> 0) + (d1 << 10 >>> 0) + d0;
    return sign + (residue === 0 ? "" : B.JSInt_methods.toRadixString$1(residue, radix)) + chunk1 + chunk2 + chunk3;
  },
  Int64__sub(a0, a1, a2, b0, b1, b2) {
    var diff0 = a0 - b0,
      diff1 = a1 - b1 - (B.JSInt_methods._shrOtherPositive$1(diff0, 22) & 1);
    return new A.Int64(diff0 & 4194303, diff1 & 4194303, a2 - b2 - (B.JSInt_methods._shrOtherPositive$1(diff1, 22) & 1) & 1048575);
  },
  Int64__shiftRight(x, n) {
    var t1 = B.JSInt_methods._shrReceiverPositive$1(x, n);
    return t1;
  },
  Int64: function Int64(t0, t1, t2) {
    this._l = t0;
    this._m = t1;
    this._h = t2;
  },
  BuilderInfo$(messageName, createEmptyInstance, $package) {
    var t1 = A._setArrayType([], type$.JSArray_FieldInfo_dynamic),
      t2 = type$.int,
      t3 = type$.FieldInfo_dynamic,
      t4 = type$.String,
      t5 = $package.name;
    return new A.BuilderInfo((t5 === "" ? "" : t5 + ".") + messageName, t1, A.LinkedHashMap_LinkedHashMap$_empty(t2, t3), A.LinkedHashMap_LinkedHashMap$_empty(t4, t3), A.LinkedHashMap_LinkedHashMap$_empty(t4, t3), A.LinkedHashMap_LinkedHashMap$_empty(t2, t2), createEmptyInstance);
  },
  _mergeFromCodedBufferReader(meta, fs, input, registry) {
    var t1, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, t12, t13, t14, t15, t16, t17, t18, t19, tag, wireType, tagNumber, fi, fieldType, t20, t21, t22, rawValue, i, f, unknown, subBuilderFunc, oldValue, value, data, view, mapEntryMeta, _null = null;
    A.ArgumentError_checkNotNull(registry, _null, type$.ExtensionRegistry);
    for (t1 = type$.MapFieldInfo_dynamic_dynamic, t2 = type$.dynamic, t3 = meta.fieldInfo, t4 = input.get$readSfixed64(), t5 = input.get$readSfixed32(), t6 = input.get$readFixed64(), t7 = input.get$readFixed32(), t8 = input.get$readUint64(), t9 = input.get$readUint32(), t10 = input.get$readSint64(), t11 = input.get$readSint32(), t12 = input.get$readInt64(), t13 = input.get$readInt32(), t14 = input.get$readDouble(), t15 = input.get$readFloat(), t16 = type$.List_int, t17 = input.get$readBool(), t18 = type$.GeneratedMessage, t19 = input._protobuf$_buffer; true;) {
      tag = input.readTag$0();
      if (tag === 0)
        return;
      wireType = tag & 7;
      tagNumber = B.JSInt_methods._shrOtherPositive$1(tag, 3);
      fi = t3.$index(0, tagNumber);
      if (fi == null)
        fi = _null;
      if (fi == null || !A._wireTypeMatches(fi.type, wireType)) {
        if (!fs._ensureUnknownFields$0().mergeFieldFromBuffer$2(tag, input))
          return;
        continue;
      }
      fieldType = fi.type & 4294967290;
      switch (fieldType) {
        case 16:
          fs._setFieldUnchecked$3(meta, fi, input._readRawVarint32$1(true) !== 0);
          break;
        case 32:
          fs._setFieldUnchecked$3(meta, fi, new Uint8Array(A._ensureNativeList(input.readBytes$0())));
          break;
        case 64:
          t20 = t16._as(input.readBytes$0());
          fs._setFieldUnchecked$3(meta, fi, B.Utf8Decoder_true.convert$1(t20));
          break;
        case 256:
          t20 = input._bufferPos += 4;
          if (t20 > input._currentLimit)
            A.throwExpression(A.InvalidProtocolBufferException$truncatedMessage());
          t21 = t19.buffer;
          t22 = t19.byteOffset;
          t20 = new DataView(t21, t22 + t20 - 4, 4);
          fs._setFieldUnchecked$3(meta, fi, B.NativeByteData_methods._getFloat32$2(t20, 0, true));
          break;
        case 128:
          t20 = input._bufferPos += 8;
          if (t20 > input._currentLimit)
            A.throwExpression(A.InvalidProtocolBufferException$truncatedMessage());
          t21 = t19.buffer;
          t22 = t19.byteOffset;
          t20 = new DataView(t21, t22 + t20 - 8, 8);
          fs._setFieldUnchecked$3(meta, fi, B.NativeByteData_methods._getFloat64$2(t20, 0, true));
          break;
        case 512:
          rawValue = input._readRawVarint32$1(true);
          i = t3.$index(0, tagNumber);
          f = i == null ? _null : i.valueOf;
          t20 = (f == null && true ? _null.get$valueOf() : f).call$1(rawValue);
          if (t20 == null) {
            unknown = fs._ensureUnknownFields$0();
            t20 = A.Int64_Int64(rawValue);
            if (unknown._isReadOnly)
              A.defaultFrozenMessageModificationHandler("UnknownFieldSet", "mergeVarintField");
            B.JSArray_methods.add$1(unknown._getField$1(tagNumber)._varints, t20);
          } else
            fs._setFieldUnchecked$3(meta, fi, t20);
          break;
        case 1024:
          i = t3.$index(0, tagNumber);
          subBuilderFunc = i == null ? _null : i.subBuilder;
          t20 = (subBuilderFunc == null && true ? _null.get$subBuilder() : subBuilderFunc).call$0();
          oldValue = fs._getFieldOrNull$1(fi);
          if (oldValue != null)
            t20.mergeFromMessage$1(t18._as(oldValue));
          input.readGroup$3(tagNumber, t20, registry);
          fs._setFieldUnchecked$3(meta, fi, t20);
          break;
        case 2048:
          fs._setFieldUnchecked$3(meta, fi, input._readRawVarint32$1(true));
          break;
        case 4096:
          fs._setFieldUnchecked$3(meta, fi, input._readRawVarint64$0());
          break;
        case 8192:
          fs._setFieldUnchecked$3(meta, fi, A.CodedBufferReader__decodeZigZag32(input._readRawVarint32$1(false)));
          break;
        case 16384:
          value = input._readRawVarint64$0();
          fs._setFieldUnchecked$3(meta, fi, (value.$and(0, 1).$eq(0, 1) ? A.Int64__sub(0, 0, 0, value._l, value._m, value._h) : value).$shr(0, 1));
          break;
        case 32768:
          fs._setFieldUnchecked$3(meta, fi, input._readRawVarint32$1(false));
          break;
        case 65536:
          fs._setFieldUnchecked$3(meta, fi, input._readRawVarint64$0());
          break;
        case 131072:
          t20 = input._bufferPos += 4;
          if (t20 > input._currentLimit)
            A.throwExpression(A.InvalidProtocolBufferException$truncatedMessage());
          t21 = t19.buffer;
          t22 = t19.byteOffset;
          t20 = new DataView(t21, t22 + t20 - 4, 4);
          fs._setFieldUnchecked$3(meta, fi, B.NativeByteData_methods._getUint32$2(t20, 0, true));
          break;
        case 262144:
          t20 = input._bufferPos += 8;
          if (t20 > input._currentLimit)
            A.throwExpression(A.InvalidProtocolBufferException$truncatedMessage());
          t21 = t19.buffer;
          t22 = t19.byteOffset;
          data = new DataView(t21, t22 + t20 - 8, 8);
          t20 = data.buffer;
          t21 = data.byteOffset;
          view = new Uint8Array(t20, t21, 8);
          fs._setFieldUnchecked$3(meta, fi, A.Int64_Int64$fromBytes(view));
          break;
        case 524288:
          t20 = input._bufferPos += 4;
          if (t20 > input._currentLimit)
            A.throwExpression(A.InvalidProtocolBufferException$truncatedMessage());
          t21 = t19.buffer;
          t22 = t19.byteOffset;
          t20 = new DataView(t21, t22 + t20 - 4, 4);
          fs._setFieldUnchecked$3(meta, fi, B.NativeByteData_methods._getInt32$2(t20, 0, true));
          break;
        case 1048576:
          t20 = input._bufferPos += 8;
          if (t20 > input._currentLimit)
            A.throwExpression(A.InvalidProtocolBufferException$truncatedMessage());
          t21 = t19.buffer;
          t22 = t19.byteOffset;
          data = new DataView(t21, t22 + t20 - 8, 8);
          t20 = data.buffer;
          t21 = data.byteOffset;
          view = new Uint8Array(t20, t21, 8);
          fs._setFieldUnchecked$3(meta, fi, A.Int64_Int64$fromBytes(view));
          break;
        case 2097152:
          i = t3.$index(0, tagNumber);
          subBuilderFunc = i == null ? _null : i.subBuilder;
          t20 = (subBuilderFunc == null && true ? _null.get$subBuilder() : subBuilderFunc).call$0();
          oldValue = fs._getFieldOrNull$1(fi);
          if (oldValue != null)
            t20.mergeFromMessage$1(t18._as(oldValue));
          input.readMessage$2(t20, registry);
          fs._setFieldUnchecked$3(meta, fi, t20);
          break;
        case 18:
          A._readPackable(meta, fs, input, wireType, fi, t17);
          break;
        case 34:
          J.add$1$ax(fs._ensureRepeatedField$1$2(meta, fi, t2), new Uint8Array(A._ensureNativeList(input.readBytes$0())));
          break;
        case 66:
          t20 = fs._ensureRepeatedField$1$2(meta, fi, t2);
          t21 = t16._as(input.readBytes$0());
          J.add$1$ax(t20, B.Utf8Decoder_true.convert$1(t21));
          break;
        case 258:
          A._readPackable(meta, fs, input, wireType, fi, t15);
          break;
        case 130:
          A._readPackable(meta, fs, input, wireType, fi, t14);
          break;
        case 514:
          A._readPackableToListEnum(meta, fs, input, wireType, fi, tagNumber, registry);
          break;
        case 1026:
          i = t3.$index(0, tagNumber);
          subBuilderFunc = i == null ? _null : i.subBuilder;
          t20 = (subBuilderFunc == null && true ? _null.get$subBuilder() : subBuilderFunc).call$0();
          input.readGroup$3(tagNumber, t20, registry);
          J.add$1$ax(fs._ensureRepeatedField$1$2(meta, fi, t2), t20);
          break;
        case 2050:
          A._readPackable(meta, fs, input, wireType, fi, t13);
          break;
        case 4098:
          A._readPackable(meta, fs, input, wireType, fi, t12);
          break;
        case 8194:
          A._readPackable(meta, fs, input, wireType, fi, t11);
          break;
        case 16386:
          A._readPackable(meta, fs, input, wireType, fi, t10);
          break;
        case 32770:
          A._readPackable(meta, fs, input, wireType, fi, t9);
          break;
        case 65538:
          A._readPackable(meta, fs, input, wireType, fi, t8);
          break;
        case 131074:
          A._readPackable(meta, fs, input, wireType, fi, t7);
          break;
        case 262146:
          A._readPackable(meta, fs, input, wireType, fi, t6);
          break;
        case 524290:
          A._readPackable(meta, fs, input, wireType, fi, t5);
          break;
        case 1048578:
          A._readPackable(meta, fs, input, wireType, fi, t4);
          break;
        case 2097154:
          i = t3.$index(0, tagNumber);
          subBuilderFunc = i == null ? _null : i.subBuilder;
          t20 = (subBuilderFunc == null && true ? _null.get$subBuilder() : subBuilderFunc).call$0();
          input.readMessage$2(t20, registry);
          J.add$1$ax(fs._ensureRepeatedField$1$2(meta, fi, t2), t20);
          break;
        case 6291456:
          t1._as(fi);
          mapEntryMeta = fi.get$mapEntryBuilderInfo();
          fs._ensureMapField$2$2(meta, fi, t2, t2)._mergeEntry$3(mapEntryMeta, input, registry);
          break;
        default:
          throw A.wrapException("Unknown field type " + fieldType);
      }
    }
  },
  _readPackable(meta, fs, input, wireType, fi, readFunc) {
    A._readPackableToList(meta, fs, input, wireType, fi, new A._readPackable_readToList(readFunc));
  },
  _readPackableToListEnum(meta, fs, input, wireType, fi, tagNumber, registry) {
    A._readPackableToList(meta, fs, input, wireType, fi, new A._readPackableToListEnum_readToList(input, meta, tagNumber, registry, fs));
  },
  _readPackableToList(meta, fs, input, wireType, fi, readToList) {
    var t1, byteLimit, oldLimit,
      list = fs._ensureRepeatedField$1$2(meta, fi, type$.dynamic);
    if (wireType === 2) {
      t1 = input._readRawVarint32$1(true);
      if (t1 < 0)
        A.throwExpression(A.ArgumentError$(string$.CodedB));
      byteLimit = t1 + input._bufferPos;
      oldLimit = input._currentLimit;
      if (oldLimit !== -1 && byteLimit > oldLimit || byteLimit > input._sizeLimit)
        A.throwExpression(A.InvalidProtocolBufferException$truncatedMessage());
      input._currentLimit = byteLimit;
      new A._readPackableToList_closure(input, readToList, list).call$0();
      input._currentLimit = oldLimit;
    } else
      readToList.call$1(list);
  },
  CodedBufferReader__decodeZigZag32(value) {
    if ((value & 1) === 1)
      return -B.JSInt_methods._shrOtherPositive$1(value, 1) - 1;
    else
      return B.JSInt_methods._shrOtherPositive$1(value, 1);
  },
  InvalidProtocolBufferException$invalidEndTag() {
    return new A.InvalidProtocolBufferException("Protocol message end-group tag did not match expected tag.");
  },
  InvalidProtocolBufferException$malformedVarint() {
    return new A.InvalidProtocolBufferException("CodedBufferReader encountered a malformed varint.");
  },
  InvalidProtocolBufferException$recursionLimitExceeded() {
    return new A.InvalidProtocolBufferException("Protocol message had too many levels of nesting.  May be malicious.\nUse CodedBufferReader.setRecursionLimit() to increase the depth limit.\n");
  },
  InvalidProtocolBufferException$truncatedMessage() {
    return new A.InvalidProtocolBufferException("While parsing a protocol message, the input ended unexpectedly\nin the middle of a field.  This could mean either than the\ninput has been truncated or that an embedded message\nmisreported its own length.\n");
  },
  _getFieldError(fieldType, value) {
    var t1, _null = null,
      _s15_ = "not type double",
      _s12_ = "not type int";
    switch (fieldType & 4290772984) {
      case 16:
        if (!A._isBool(value))
          return "not type bool";
        return _null;
      case 32:
        if (!type$.List_dynamic._is(value))
          return "not List";
        return _null;
      case 64:
        if (typeof value != "string")
          return "not type String";
        return _null;
      case 256:
        if (typeof value != "number")
          return _s15_;
        if (!isNaN(value))
          if (!(value == 1 / 0 || value == -1 / 0))
            t1 = -34028234663852886e22 <= value && value <= 34028234663852886e22;
          else
            t1 = true;
        else
          t1 = true;
        if (!t1)
          return "out of range for float";
        return _null;
      case 128:
        if (typeof value != "number")
          return _s15_;
        return _null;
      case 512:
        if (!(value instanceof A.ProtobufEnum))
          return "not type ProtobufEnum";
        return _null;
      case 2048:
      case 8192:
      case 524288:
        if (!A._isInt(value))
          return _s12_;
        if (!(-2147483648 <= value && value <= 2147483647))
          return "out of range for signed 32-bit int";
        return _null;
      case 32768:
      case 131072:
        if (!A._isInt(value))
          return _s12_;
        if (!(0 <= value && value <= 4294967295))
          return "out of range for unsigned 32-bit int";
        return _null;
      case 4096:
      case 16384:
      case 65536:
      case 262144:
      case 1048576:
        if (!(value instanceof A.Int64))
          return "not Int64";
        return _null;
      case 1024:
      case 2097152:
        if (!(value instanceof A.GeneratedMessage))
          return "not a GeneratedMessage";
        return _null;
      default:
        return "field has unknown type " + fieldType;
    }
  },
  _checkNotNull(val) {
    if (val == null)
      throw A.wrapException(A.ArgumentError$("Can't add a null to a repeated field"));
  },
  FieldInfo_findMakeDefault(type, defaultOrMaker) {
    if (defaultOrMaker == null)
      return A.PbFieldType__defaultForType(type);
    if (type$.dynamic_Function._is(defaultOrMaker))
      return defaultOrMaker;
    return new A.FieldInfo_findMakeDefault_closure(defaultOrMaker);
  },
  defaultFrozenMessageModificationHandler(messageName, methodName) {
    if (methodName != null)
      throw A.wrapException(A.UnsupportedError$("Attempted to call " + methodName + " on a read-only message (" + messageName + ")"));
    throw A.wrapException(A.UnsupportedError$("Attempted to change a read-only message (" + messageName + ")"));
  },
  _FieldSet__makeValueList($length) {
    if ($length === 0)
      return $._FieldSet__zeroList;
    return A.List_List$filled($length, null, false, type$.dynamic);
  },
  _FieldSet__hashField(hash, fi, value) {
    var t1, t2;
    if (type$.List_dynamic._is(value) && J.get$isEmpty$asx(value))
      return hash;
    if (type$.Map_dynamic_dynamic._is(value) && value.get$isEmpty(value))
      return hash;
    hash = A._HashUtils__combine(hash, fi.tagNumber);
    t1 = fi.type;
    t2 = t1 & 4290772984;
    if (t2 === 32)
      hash = A._HashUtils__combine(hash, A._HashUtils__hashObjects(type$.Iterable_dynamic._as(value)));
    else if (t2 !== 512)
      hash = A._HashUtils__combine(hash, J.get$hashCode$(value));
    else
      hash = (t1 & 2) !== 0 ? A._HashUtils__combine(hash, A._HashUtils__hashObjects(type$.Iterable_dynamic._as(J.map$1$ax(value, new A._FieldSet__hashField_closure())))) : A._HashUtils__combine(hash, type$.ProtobufEnum._as(value).value);
    return hash;
  },
  PbFieldType__defaultForType(type) {
    switch (type) {
      case 16:
      case 17:
        return A.protobuf_PbFieldType__BOOL_FALSE$closure();
      case 32:
      case 33:
        return A.protobuf_PbFieldType__BYTES_EMPTY$closure();
      case 64:
      case 65:
        return A.protobuf_PbFieldType__STRING_EMPTY$closure();
      case 256:
      case 257:
      case 128:
      case 129:
        return A.protobuf_PbFieldType__DOUBLE_ZERO$closure();
      case 2048:
      case 2049:
      case 4096:
      case 4097:
      case 8192:
      case 8193:
      case 16384:
      case 16385:
      case 32768:
      case 32769:
      case 65536:
      case 65537:
      case 131072:
      case 131073:
      case 262144:
      case 262145:
      case 524288:
      case 524289:
      case 1048576:
      case 1048577:
        return A.protobuf_PbFieldType__INT_ZERO$closure();
      default:
        return null;
    }
  },
  PbFieldType__STRING_EMPTY() {
    return "";
  },
  PbFieldType__BYTES_EMPTY() {
    return A._setArrayType([], type$.JSArray_int);
  },
  PbFieldType__BOOL_FALSE() {
    return false;
  },
  PbFieldType__INT_ZERO() {
    return 0;
  },
  PbFieldType__DOUBLE_ZERO() {
    return 0;
  },
  GeneratedMessage__getSingletonMaker(fun, $T) {
    var t1,
      oldMaker = $.GeneratedMessage__defaultMakers.$index(0, fun);
    if (oldMaker != null)
      return $T._eval$1("_SingletonMaker<0>")._as(oldMaker);
    t1 = new A._SingletonMaker(fun, $T._eval$1("_SingletonMaker<0>"));
    $.GeneratedMessage__defaultMakers.$indexSet(0, fun, t1);
    return t1;
  },
  GeneratedMessageGenericExtensions_deepCopy(_this, $T) {
    var t1 = $T._as(_this.get$info_().createEmptyInstance.call$0());
    t1.mergeFromMessage$1(_this);
    return t1;
  },
  ProtobufEnum_initByValue(byIndex, $T) {
    var _i, v,
      byValue = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, $T);
    for (_i = 0; _i < 5; ++_i) {
      v = byIndex[_i];
      byValue.$indexSet(0, v.value, v);
    }
    return byValue;
  },
  UnknownFieldSet$() {
    return new A.UnknownFieldSet(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.UnknownFieldSetField));
  },
  _deepEquals(lhs, rhs) {
    var t1;
    if (lhs instanceof A.GeneratedMessage)
      return lhs.$eq(0, rhs);
    if (rhs instanceof A.GeneratedMessage)
      return false;
    t1 = type$.List_dynamic;
    if (t1._is(lhs) && t1._is(rhs))
      return A._areListsEqual(lhs, rhs);
    t1 = type$.Map_dynamic_dynamic;
    if (t1._is(lhs) && t1._is(rhs))
      return A._areMapsEqual(lhs, rhs);
    return J.$eq$(lhs, rhs);
  },
  _areListsEqual(lhs, rhs) {
    var i,
      t1 = J.getInterceptor$asx(lhs),
      t2 = J.getInterceptor$asx(rhs);
    if (t1.get$length(lhs) !== t2.get$length(rhs))
      return false;
    for (i = 0; i < t1.get$length(lhs); ++i)
      if (!A._deepEquals(t1.$index(lhs, i), t2.$index(rhs, i)))
        return false;
    return true;
  },
  _areMapsEqual(lhs, rhs) {
    if (lhs.get$length(lhs) !== rhs.get$length(rhs))
      return false;
    return lhs.get$keys().every$1(0, new A._areMapsEqual_closure(lhs, rhs));
  },
  _sorted(list, $T) {
    var t1 = A.List_List$from(list, true, $T);
    B.JSArray_methods.sort$0(t1);
    return t1;
  },
  _HashUtils__combine(hash, value) {
    hash = hash + value & 536870911;
    hash = hash + ((hash & 524287) << 10) & 536870911;
    return hash ^ hash >>> 6;
  },
  _HashUtils__hashObjects(objects) {
    var t1 = J.fold$1$2$ax(objects, 0, new A._HashUtils__hashObjects_closure(), type$.int),
      hash = t1 + ((t1 & 67108863) << 3) & 536870911;
    hash ^= hash >>> 11;
    return hash + ((hash & 16383) << 15) & 536870911;
  },
  _wireTypeMatches(fieldType, wireType) {
    switch (fieldType & 4290772984) {
      case 16:
      case 512:
      case 2048:
      case 4096:
      case 8192:
      case 16384:
      case 32768:
      case 65536:
        return wireType === 0 || wireType === 2;
      case 256:
      case 131072:
      case 524288:
        return wireType === 5 || wireType === 2;
      case 128:
      case 262144:
      case 1048576:
        return wireType === 1 || wireType === 2;
      case 32:
      case 64:
      case 2097152:
        return wireType === 2;
      case 1024:
        return wireType === 3;
      default:
        return false;
    }
  },
  BuilderInfo: function BuilderInfo(t0, t1, t2, t3, t4, t5, t6) {
    var _ = this;
    _.qualifiedMessageName = t0;
    _.byIndex = t1;
    _.fieldInfo = t2;
    _.byTagAsString = t3;
    _.byName = t4;
    _.oneofs = t5;
    _._sortedByTag = null;
    _.createEmptyInstance = t6;
  },
  BuilderInfo__computeSortedByTag_closure: function BuilderInfo__computeSortedByTag_closure() {
  },
  _readPackable_readToList: function _readPackable_readToList(t0) {
    this.readFunc = t0;
  },
  _readPackableToListEnum_readToList: function _readPackableToListEnum_readToList(t0, t1, t2, t3, t4) {
    var _ = this;
    _.input = t0;
    _.meta = t1;
    _.tagNumber = t2;
    _.registry = t3;
    _.fs = t4;
  },
  _readPackableToList_closure: function _readPackableToList_closure(t0, t1, t2) {
    this.input = t0;
    this.readToList = t1;
    this.list = t2;
  },
  CodedBufferReader: function CodedBufferReader(t0, t1) {
    var _ = this;
    _._protobuf$_buffer = t0;
    _._bufferPos = 0;
    _._currentLimit = -1;
    _._recursionDepth = _._lastTag = 0;
    _._sizeLimit = t1;
  },
  InvalidProtocolBufferException: function InvalidProtocolBufferException(t0) {
    this.message = t0;
  },
  _ExtensionFieldSet: function _ExtensionFieldSet(t0, t1, t2) {
    var _ = this;
    _._protobuf$_parent = t0;
    _._info = t1;
    _._values = t2;
    _._isReadOnly = false;
  },
  _EmptyExtensionRegistry: function _EmptyExtensionRegistry() {
  },
  FieldInfo: function FieldInfo(t0, t1, t2, t3, t4, t5, t6, t7) {
    var _ = this;
    _._emptyList = null;
    _.name = t0;
    _.tagNumber = t1;
    _.index = t2;
    _.type = t3;
    _.makeDefault = t4;
    _.subBuilder = t5;
    _.valueOf = t6;
    _.$ti = t7;
  },
  FieldInfo_findMakeDefault_closure: function FieldInfo_findMakeDefault_closure(t0) {
    this.defaultOrMaker = t0;
  },
  _FieldSet: function _FieldSet(t0, t1, t2, t3) {
    var _ = this;
    _._protobuf$_message = t0;
    _._eventPlugin = t1;
    _._values = t2;
    _._unknownFields = _._extensions = null;
    _._frozenState = false;
    _._oneofCases = t3;
  },
  _FieldSet__hashField_closure: function _FieldSet__hashField_closure() {
  },
  _FieldSet_writeString_renderValue: function _FieldSet_writeString_renderValue(t0, t1) {
    this.out = t0;
    this.indent = t1;
  },
  _FieldSet_writeString_writeFieldValue: function _FieldSet_writeString_writeFieldValue(t0) {
    this.renderValue = t0;
  },
  _FieldSet_writeString_closure: function _FieldSet_writeString_closure(t0, t1) {
    this.$this = t0;
    this.writeFieldValue = t1;
  },
  GeneratedMessage: function GeneratedMessage() {
  },
  _SingletonMaker: function _SingletonMaker(t0, t1) {
    var _ = this;
    _._creator = t0;
    _.___SingletonMaker__frozenSingletonCreator_FI = _.___SingletonMaker__frozenSingleton_FI = $;
    _.$ti = t1;
  },
  _SingletonMaker__frozenSingletonCreator_closure: function _SingletonMaker__frozenSingletonCreator_closure(t0) {
    this.$this = t0;
  },
  PackageName: function PackageName(t0) {
    this.name = t0;
  },
  FrozenPbList: function FrozenPbList(t0, t1, t2) {
    this._wrappedList = t0;
    this.check = t1;
    this.$ti = t2;
  },
  PbList: function PbList(t0, t1, t2) {
    this._wrappedList = t0;
    this.check = t1;
    this.$ti = t2;
  },
  PbListBase: function PbListBase() {
  },
  ProtobufEnum: function ProtobufEnum() {
  },
  UnknownFieldSet: function UnknownFieldSet(t0) {
    this._fields = t0;
    this._isReadOnly = false;
  },
  UnknownFieldSet__getField_closure: function UnknownFieldSet__getField_closure() {
  },
  UnknownFieldSet_hashCode_closure: function UnknownFieldSet_hashCode_closure(t0) {
    this._box_0 = t0;
  },
  UnknownFieldSetField: function UnknownFieldSetField(t0, t1, t2, t3, t4) {
    var _ = this;
    _._lengthDelimited = t0;
    _._varints = t1;
    _._fixed32s = t2;
    _._fixed64s = t3;
    _._groups = t4;
    _._isReadOnly = false;
  },
  _areMapsEqual_closure: function _areMapsEqual_closure(t0, t1) {
    this.lhs = t0;
    this.rhs = t1;
  },
  _HashUtils__hashObjects_closure: function _HashUtils__hashObjects_closure() {
  },
  Matrix3: function Matrix3(t0) {
    this._m3storage = t0;
  },
  Vector3: function Vector3(t0) {
    this._v3storage = t0;
  },
  conversionWorker(vtkBytesAsString) {
    var builder, t1, gpxBytes, t2,
      dartTrackpoints = A.vtkRecordsToDartTrackpoints(A.readVtk(new Uint8Array(A._ensureNativeList(new A.CodeUnits(A._asString(vtkBytesAsString)))))),
      csvBytes = A.generateCsvBytes(dartTrackpoints);
    A.print("Converting to GPX...");
    builder = new A.XmlBuilder(A._setArrayType([], type$.JSArray_NodeBuilder));
    builder._reset$0();
    A.buildGpx(builder, dartTrackpoints);
    t1 = type$.Utf8Codec._eval$1("Codec.S")._as(builder.buildDocument$0().toXmlString$1$pretty(true));
    gpxBytes = B.Utf8Codec_false.get$encoder().convert$1(t1);
    t1 = type$.Iterable_int;
    t2 = type$.String;
    return B.C_JsonCodec.encode$2$toEncodable(A.LinkedHashMap_LinkedHashMap$_literal(["csv", A.String_String$fromCharCodes(t1._as(csvBytes), 0, null), "gpx", A.String_String$fromCharCodes(t1._as(gpxBytes), 0, null)], t2, t2), null);
  },
  readVtk(vtkBytes) {
    var records, t1, t2, i, t3, t4, i0, data, r, codedInput;
    A.print("Reading VTK...");
    records = A._setArrayType([], type$.JSArray_Record);
    for (t1 = vtkBytes.length, t2 = type$.List_int, i = 0; i < t1; i = i0) {
      if (!(i >= 0))
        return A.ioore(vtkBytes, i);
      t3 = vtkBytes[i];
      t4 = i + 1;
      if (!(t4 < t1))
        return A.ioore(vtkBytes, t4);
      i += 2;
      i0 = i + (t3 + (vtkBytes[t4] << 8 >>> 0));
      data = new Uint8Array(vtkBytes.subarray(i, A._checkValidRange(i, i0, t1)));
      r = A.Record_create();
      t2._as(data);
      t3 = Math.min(67108864, data.length);
      codedInput = new A.CodedBufferReader(data, t3);
      codedInput._currentLimit = t3;
      t3 = r.__fieldSet._protobuf$_message.get$info_();
      t4 = r.__fieldSet;
      t4.toString;
      A._mergeFromCodedBufferReader(t3, t4, codedInput, B.C__EmptyExtensionRegistry);
      if (codedInput._lastTag !== 0)
        A.throwExpression(A.InvalidProtocolBufferException$invalidEndTag());
      B.JSArray_methods.add$1(records, r);
    }
    return records;
  },
  vtkRecordsToDartTrackpoints(records) {
    var t1, t2, i, t3, t4, t5, t6, t7, cy, ax, ay, az, eulerAngles,
      dartTrackpoints = A._setArrayType([], type$.JSArray_DartTrackpoint);
    for (t1 = type$.double, t2 = type$.Trackpoint, i = 0; i < records.length; ++i)
      if (records[i].__fieldSet._$has$1(0)) {
        if (!(i < records.length))
          return A.ioore(records, i);
        t3 = t2._as(records[i].__fieldSet._$getND$1(0));
        t4 = A.Primitives_valueFromDecomposedDate(1982, 2, 13, 0, 0, 0, 0, true);
        if (!A._isInt(t4))
          A.throwExpression(A.argumentErrorValue(t4));
        t5 = A.List_List$filled(4, 0, false, t1);
        t4 = new A.DartTrackpoint(new A.DateTime(t4, true), t5, A.List_List$filled(3, 0, false, t1));
        t6 = 1000 * t3.__fieldSet._$getIZ$1(0) + 10 * t3.__fieldSet._$getIZ$1(1);
        if (Math.abs(t6) <= 864e13)
          t7 = false;
        else
          t7 = true;
        if (t7)
          A.throwExpression(A.ArgumentError$("DateTime is outside valid range: " + t6));
        t4.time = new A.DateTime(t6, true);
        t4.latitude = t3.__fieldSet._$getIZ$1(2) / 10000000;
        t4.longitude = t3.__fieldSet._$getIZ$1(3) / 10000000;
        t4.sog = t3.__fieldSet._$getIZ$1(4) / 10;
        t4.cog = t3.__fieldSet._$getIZ$1(5);
        B.JSArray_methods.$indexSet(t5, 0, t3.__fieldSet._$getIZ$1(6) / 1000);
        B.JSArray_methods.$indexSet(t5, 1, t3.__fieldSet._$getIZ$1(7) / 1000);
        B.JSArray_methods.$indexSet(t5, 2, t3.__fieldSet._$getIZ$1(8) / 1000);
        B.JSArray_methods.$indexSet(t5, 3, t3.__fieldSet._$getIZ$1(9) / 1000);
        t3 = A.matrixFromQuaternion(t5)._m3storage;
        t5 = t3[0];
        t6 = t3[1];
        cy = Math.sqrt(t5 * t5 + t6 * t6);
        if (cy > 2e-322) {
          ax = Math.atan2(t3[5], t3[8]);
          ay = Math.atan2(-t3[2], cy);
          az = Math.atan2(t3[1], t3[0]);
        } else {
          ax = Math.atan2(-t3[7], t3[4]);
          ay = Math.atan2(-t3[2], cy);
          az = 0;
        }
        eulerAngles = A.List_List$filled(3, 0, false, t1);
        B.JSArray_methods.$indexSet(eulerAngles, 0, ax);
        B.JSArray_methods.$indexSet(eulerAngles, 1, ay);
        B.JSArray_methods.$indexSet(eulerAngles, 2, az);
        t4.set$eulerAngles(eulerAngles);
        t3 = t4.eulerAngles;
        t4.magHeading = B.JSNumber_methods.round$0(B.JSNumber_methods.$mod(-(t3[2] * 57.29577951308232), 360));
        t4.heel = B.JSNumber_methods.round$0(t3[0] * 57.29577951308232);
        t4.pitch = B.JSNumber_methods.round$0(-(t3[1] * 57.29577951308232));
        B.JSArray_methods.add$1(dartTrackpoints, t4);
      }
    return dartTrackpoints;
  },
  matrixFromQuaternion(q) {
    var n, i, t1, qScaled, t2, op, j, t3, t4, t5, t6, t7, t8, t9, t10;
    for (n = 0, i = 0; i < 4; ++i) {
      t1 = q[i];
      n += t1 * t1;
    }
    if (n < 2e-322) {
      t1 = new Float32Array(9);
      t1[0] = 1;
      t1[1] = 0;
      t1[2] = 0;
      t1[3] = 0;
      t1[4] = 1;
      t1[5] = 0;
      t1[6] = 0;
      t1[7] = 0;
      t1[8] = 1;
      return new A.Matrix3(t1);
    }
    t1 = type$.double;
    qScaled = A.List_List$filled(4, 0, false, t1);
    for (t2 = 2 / n, i = 0; i < 4; ++i)
      B.JSArray_methods.$indexSet(qScaled, i, Math.sqrt(t2) * q[i]);
    op = J.JSArray_JSArray$markFixed(new Array(4), type$.List_double);
    for (i = 0; i < 4; ++i)
      op[i] = A.List_List$filled(4, 0, false, t1);
    for (t1 = op.length, i = 0; i < 4; ++i)
      for (j = 0; j < 4; ++j) {
        if (!(i < t1))
          return A.ioore(op, i);
        B.JSArray_methods.$indexSet(op[i], j, qScaled[i] * qScaled[j]);
      }
    if (2 >= t1)
      return A.ioore(op, 2);
    t2 = op[2];
    t3 = t2[2];
    if (3 >= t1)
      return A.ioore(op, 3);
    t1 = op[3];
    t4 = t1[3];
    t5 = op[1];
    t6 = t5[2];
    t1 = t1[0];
    t7 = t5[3];
    t8 = t2[0];
    t9 = 1 - t5[1];
    t2 = t2[3];
    t5 = t5[0];
    t10 = new Float32Array(9);
    t10[8] = t9 - t3;
    t10[7] = t2 - t5;
    t10[6] = t7 + t8;
    t10[5] = t2 + t5;
    t10[4] = t9 - t4;
    t10[3] = t6 - t1;
    t10[2] = t7 - t8;
    t10[1] = t6 + t1;
    t10[0] = 1 - t3 - t4;
    return new A.Matrix3(t10);
  },
  buildGpxTrackpoint(builder, trackpoint) {
    builder.element$2$nest("trkpt", new A.buildGpxTrackpoint_closure(builder, trackpoint));
  },
  buildGpx(builder, dartTrackpoints) {
    B.JSArray_methods.add$1(B.JSArray_methods.get$last(builder._stack).children, new A.XmlProcessing("xml", 'version="1.0"', null));
    builder.element$2$nest("gpx", new A.buildGpx_closure(builder, dartTrackpoints));
  },
  generateCsvBytes(dartTrackpoints) {
    var stringBytes, i, t1, t2, t3;
    A.print("Converting to CSV...");
    for (stringBytes = "time, latitude, longitude, sog, cog,q1, q2, q3, q4, mag_heading, heel, pitch\n", i = 0; i < dartTrackpoints.length; ++i) {
      t1 = dartTrackpoints[i].time.toString$0(0);
      if (!(i < dartTrackpoints.length))
        return A.ioore(dartTrackpoints, i);
      t2 = dartTrackpoints[i];
      t3 = t2.quaternion;
      stringBytes += t1 + ", " + A.S(t2.latitude) + ", " + A.S(t2.longitude) + ", " + A.S(t2.sog) + ", " + t2.cog + ", " + A.S(t3[0]) + ", " + A.S(t3[1]) + ", " + A.S(t3[2]) + ", " + A.S(t3[3]) + ", " + t2.magHeading + ", " + t2.heel + ", " + t2.pitch + "\n";
    }
    type$.Utf8Codec._eval$1("Codec.S")._as(stringBytes);
    return B.Utf8Codec_false.get$encoder().convert$1(stringBytes);
  },
  DartTrackpoint: function DartTrackpoint(t0, t1, t2) {
    var _ = this;
    _.time = t0;
    _.cog = _.sog = _.longitude = _.latitude = 0;
    _.quaternion = t1;
    _.eulerAngles = t2;
    _.pitch = _.heel = _.magHeading = 0;
  },
  buildGpxTrackpoint_closure: function buildGpxTrackpoint_closure(t0, t1) {
    this.builder = t0;
    this.trackpoint = t1;
  },
  buildGpxTrackpoint__closure: function buildGpxTrackpoint__closure(t0, t1) {
    this.builder = t0;
    this.trackpoint = t1;
  },
  buildGpx_closure: function buildGpx_closure(t0, t1) {
    this.builder = t0;
    this.dartTrackpoints = t1;
  },
  buildGpx__closure: function buildGpx__closure(t0, t1) {
    this.builder = t0;
    this.dartTrackpoints = t1;
  },
  buildGpx___closure: function buildGpx___closure(t0, t1) {
    this.dartTrackpoints = t0;
    this.builder = t1;
  },
  Record_create() {
    var t1 = new A.Record();
    t1.GeneratedMessage$0();
    return t1;
  },
  Trackpoint_create() {
    var t1 = new A.Trackpoint();
    t1.GeneratedMessage$0();
    return t1;
  },
  TimerEvent_create() {
    var t1 = new A.TimerEvent();
    t1.GeneratedMessage$0();
    return t1;
  },
  ButtonEvent_create() {
    var t1 = new A.ButtonEvent();
    t1.GeneratedMessage$0();
    return t1;
  },
  HardwareDescription_create() {
    var t1 = new A.HardwareDescription();
    t1.GeneratedMessage$0();
    return t1;
  },
  MagneticDeclination_create() {
    var t1 = new A.MagneticDeclination();
    t1.GeneratedMessage$0();
    return t1;
  },
  Record: function Record() {
    this.__fieldSet = null;
  },
  Trackpoint: function Trackpoint() {
    this.__fieldSet = null;
  },
  TimerEvent: function TimerEvent() {
    this.__fieldSet = null;
  },
  ButtonEvent: function ButtonEvent() {
    this.__fieldSet = null;
  },
  HardwareDescription: function HardwareDescription() {
    this.__fieldSet = null;
  },
  MagneticDeclination: function MagneticDeclination() {
    this.__fieldSet = null;
  },
  TimerEvent_TimerEventType_valueOf(value) {
    return $.$get$TimerEvent_TimerEventType__byValue().$index(0, value);
  },
  ButtonEvent_ButtonEventType_valueOf(value) {
    return $.$get$ButtonEvent_ButtonEventType__byValue().$index(0, value);
  },
  TimerEvent_TimerEventType: function TimerEvent_TimerEventType(t0, t1) {
    this.value = t0;
    this.name = t1;
  },
  ButtonEvent_ButtonEventType: function ButtonEvent_ButtonEventType(t0, t1) {
    this.value = t0;
    this.name = t1;
  },
  NamespaceData$(prefix, used) {
    return new A.NamespaceData(prefix, used);
  },
  NodeBuilder$() {
    return new A.NodeBuilder(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.NamespaceData), A._setArrayType([], type$.JSArray_XmlAttribute), A._setArrayType([], type$.JSArray_XmlNode));
  },
  XmlBuilder: function XmlBuilder(t0) {
    this._stack = t0;
  },
  XmlBuilder_namespace_closure: function XmlBuilder_namespace_closure(t0) {
    this.prefix = t0;
  },
  XmlBuilder_buildDocument_closure: function XmlBuilder_buildDocument_closure() {
  },
  NamespaceData: function NamespaceData(t0, t1) {
    this.prefix = t0;
    this.used = t1;
  },
  NodeBuilder: function NodeBuilder(t0, t1, t2) {
    var _ = this;
    _.namespaces = t0;
    _.attributes = t1;
    _.children = t2;
    _.isSelfClosing = true;
    _.__NodeBuilder_name_F = $;
  },
  _textReplace(match) {
    var t1 = match.group$1(0);
    t1.toString;
    switch (t1) {
      case "<":
        return "&lt;";
      case "&":
        return "&amp;";
      case "]]>":
        return "]]&gt;";
      default:
        return A._asNumericCharacterReferences(t1);
    }
  },
  _singeQuoteAttributeReplace(match) {
    var t1 = match.group$1(0);
    t1.toString;
    switch (t1) {
      case "'":
        return "&apos;";
      case "&":
        return "&amp;";
      case "<":
        return "&lt;";
      default:
        return A._asNumericCharacterReferences(t1);
    }
  },
  _doubleQuoteAttributeReplace(match) {
    var t1 = match.group$1(0);
    t1.toString;
    switch (t1) {
      case '"':
        return "&quot;";
      case "&":
        return "&amp;";
      case "<":
        return "&lt;";
      default:
        return A._asNumericCharacterReferences(t1);
    }
  },
  _asNumericCharacterReferences(toEscape) {
    var t1 = type$.Runes;
    return A.MappedIterable_MappedIterable(new A.Runes(toEscape), t1._eval$1("String(Iterable.E)")._as(new A._asNumericCharacterReferences_closure()), t1._eval$1("Iterable.E"), type$.String).join$0(0);
  },
  XmlDefaultEntityMapping: function XmlDefaultEntityMapping() {
  },
  _asNumericCharacterReferences_closure: function _asNumericCharacterReferences_closure() {
  },
  XmlEntityMapping: function XmlEntityMapping() {
  },
  XmlAttributeType: function XmlAttributeType(t0, t1) {
    this.token = t0;
    this._name = t1;
  },
  XmlNodeType: function XmlNodeType(t0) {
    this._name = t0;
  },
  XmlException: function XmlException() {
  },
  XmlParentException$(message, node, $parent) {
    return new A.XmlParentException(message);
  },
  XmlParentException_checkNoParent(node) {
    if (node.get$parent() != null)
      throw A.wrapException(A.XmlParentException$(string$.Node_a, node, node.get$parent()));
  },
  XmlParentException: function XmlParentException(t0) {
    this.message = t0;
  },
  XmlNodeTypeException$(message, node, types) {
    return new A.XmlNodeTypeException(message);
  },
  XmlNodeTypeException_checkValidType(node, types) {
    if (!types._collection$_map.containsKey$1(node.get$nodeType()))
      throw A.wrapException(new A.XmlNodeTypeException("Got " + node.get$nodeType().toString$0(0) + ", but expected one of " + types.join$1(0, ", ")));
  },
  XmlNodeTypeException: function XmlNodeTypeException(t0) {
    this.message = t0;
  },
  XmlAttributesBase: function XmlAttributesBase() {
  },
  XmlHasAttributes: function XmlHasAttributes() {
  },
  XmlChildrenBase: function XmlChildrenBase() {
  },
  XmlHasChildren: function XmlHasChildren() {
  },
  XmlHasName: function XmlHasName() {
  },
  XmlParentBase: function XmlParentBase() {
  },
  XmlHasParent: function XmlHasParent() {
  },
  XmlHasText: function XmlHasText() {
  },
  XmlHasText_innerText_closure: function XmlHasText_innerText_closure() {
  },
  XmlHasText_innerText_closure0: function XmlHasText_innerText_closure0() {
  },
  XmlHasVisitor: function XmlHasVisitor() {
  },
  XmlHasWriter: function XmlHasWriter() {
  },
  XmlHasXml: function XmlHasXml() {
  },
  XmlDescendantsIterable: function XmlDescendantsIterable(t0) {
    this._descendants$_start = t0;
  },
  XmlDescendantsIterator: function XmlDescendantsIterator(t0) {
    this._todo = t0;
    this.__XmlDescendantsIterator__current_A = $;
  },
  XmlAttribute$($name, value, attributeType) {
    var t1 = new A.XmlAttribute($name, value, attributeType, null);
    A._instanceType($name)._eval$1("XmlHasParent.T")._as(t1);
    A.XmlParentException_checkNoParent($name);
    $name.set$_parent(t1);
    return t1;
  },
  XmlAttribute: function XmlAttribute(t0, t1, t2, t3) {
    var _ = this;
    _.name = t0;
    _.value = t1;
    _.attributeType = t2;
    _.XmlHasParent__parent = t3;
  },
  _XmlAttribute_XmlNode_XmlHasName: function _XmlAttribute_XmlNode_XmlHasName() {
  },
  _XmlAttribute_XmlNode_XmlHasName_XmlHasParent: function _XmlAttribute_XmlNode_XmlHasName_XmlHasParent() {
  },
  XmlData: function XmlData() {
  },
  _XmlData_XmlNode_XmlHasParent: function _XmlData_XmlNode_XmlHasParent() {
  },
  XmlDocument$(childrenIterable) {
    var t1 = A.XmlNodeList$(type$.XmlNode),
      t2 = new A.XmlDocument(t1);
    type$.Set_XmlNodeType._as(B.Set_wEo81);
    t1.__XmlNodeList__parent_F !== $ && A.throwLateFieldAI("_parent");
    t1.__XmlNodeList__parent_F = t2;
    t1.__XmlNodeList__nodeTypes_F !== $ && A.throwLateFieldAI("_nodeTypes");
    t1.set$__XmlNodeList__nodeTypes_F(B.Set_wEo81);
    t1.addAll$1(0, childrenIterable);
    return t2;
  },
  XmlDocument: function XmlDocument(t0) {
    this.XmlHasChildren_children = t0;
  },
  XmlDocument_copy_closure: function XmlDocument_copy_closure() {
  },
  _XmlDocument_XmlNode_XmlHasChildren: function _XmlDocument_XmlNode_XmlHasChildren() {
  },
  XmlElement$($name, attributesIterable, childrenIterable, isSelfClosing) {
    var t4,
      _s10_ = "_nodeTypes",
      t1 = A.XmlNodeList$(type$.XmlNode),
      t2 = A.XmlNodeList$(type$.XmlAttribute),
      t3 = new A.XmlElement(true, $name, t1, t2, null);
    A._instanceType($name)._eval$1("XmlHasParent.T")._as(t3);
    A.XmlParentException_checkNoParent($name);
    $name.set$_parent(t3);
    t4 = type$.Set_XmlNodeType;
    t4._as(B.Set_r7Xh1);
    t2.__XmlNodeList__parent_F !== $ && A.throwLateFieldAI("_parent");
    t2.__XmlNodeList__parent_F = t3;
    t2.__XmlNodeList__nodeTypes_F !== $ && A.throwLateFieldAI(_s10_);
    t2.set$__XmlNodeList__nodeTypes_F(B.Set_r7Xh1);
    t2.addAll$1(0, attributesIterable);
    t4._as(B.Set_EyI1);
    t1.__XmlNodeList__parent_F !== $ && A.throwLateFieldAI("_parent");
    t1.__XmlNodeList__parent_F = t3;
    t1.__XmlNodeList__nodeTypes_F !== $ && A.throwLateFieldAI(_s10_);
    t1.set$__XmlNodeList__nodeTypes_F(B.Set_EyI1);
    t1.addAll$1(0, childrenIterable);
    return t3;
  },
  XmlElement: function XmlElement(t0, t1, t2, t3, t4) {
    var _ = this;
    _.isSelfClosing = t0;
    _.name = t1;
    _.XmlHasChildren_children = t2;
    _.XmlHasAttributes_attributes = t3;
    _.XmlHasParent__parent = t4;
  },
  XmlElement_copy_closure: function XmlElement_copy_closure() {
  },
  XmlElement_copy_closure0: function XmlElement_copy_closure0() {
  },
  _XmlElement_XmlNode_XmlHasName: function _XmlElement_XmlNode_XmlHasName() {
  },
  _XmlElement_XmlNode_XmlHasName_XmlHasParent: function _XmlElement_XmlNode_XmlHasName_XmlHasParent() {
  },
  _XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes: function _XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes() {
  },
  _XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes_XmlHasChildren: function _XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes_XmlHasChildren() {
  },
  XmlNode: function XmlNode() {
  },
  _XmlNode_Object_XmlAttributesBase: function _XmlNode_Object_XmlAttributesBase() {
  },
  _XmlNode_Object_XmlAttributesBase_XmlChildrenBase: function _XmlNode_Object_XmlAttributesBase_XmlChildrenBase() {
  },
  _XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText: function _XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText() {
  },
  _XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor: function _XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor() {
  },
  _XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter: function _XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter() {
  },
  _XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml: function _XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml() {
  },
  _XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml_XmlParentBase: function _XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml_XmlParentBase() {
  },
  XmlProcessing: function XmlProcessing(t0, t1, t2) {
    this.target = t0;
    this.text = t1;
    this.XmlHasParent__parent = t2;
  },
  XmlText: function XmlText(t0, t1) {
    this.text = t0;
    this.XmlHasParent__parent = t1;
  },
  XmlName_XmlName(local, prefix) {
    return prefix == null || prefix.length === 0 ? new A.XmlSimpleName(local, null) : new A.XmlPrefixName(prefix, local, A.S(prefix) + ":" + local, null);
  },
  XmlName_XmlName$fromString(qualified) {
    var index = B.JSString_methods.indexOf$1(qualified, ":");
    if (index > 0)
      return new A.XmlPrefixName(B.JSString_methods.substring$2(qualified, 0, index), B.JSString_methods.substring$1(qualified, index + 1), qualified, null);
    else
      return new A.XmlSimpleName(qualified, null);
  },
  XmlName: function XmlName() {
  },
  _XmlName_Object_XmlHasVisitor: function _XmlName_Object_XmlHasVisitor() {
  },
  _XmlName_Object_XmlHasVisitor_XmlHasWriter: function _XmlName_Object_XmlHasVisitor_XmlHasWriter() {
  },
  _XmlName_Object_XmlHasVisitor_XmlHasWriter_XmlHasParent: function _XmlName_Object_XmlHasVisitor_XmlHasWriter_XmlHasParent() {
  },
  XmlNodeList$($E) {
    return new A.XmlNodeList(A._setArrayType([], $E._eval$1("JSArray<0>")), $E._eval$1("XmlNodeList<0>"));
  },
  XmlNodeList: function XmlNodeList(t0, t1) {
    var _ = this;
    _.__XmlNodeList__nodeTypes_F = _.__XmlNodeList__parent_F = $;
    _._base = t0;
    _.$ti = t1;
  },
  XmlNodeList__expandFragment_closure: function XmlNodeList__expandFragment_closure(t0) {
    this.$this = t0;
  },
  XmlPrefixName: function XmlPrefixName(t0, t1, t2, t3) {
    var _ = this;
    _.prefix = t0;
    _.local = t1;
    _.qualified = t2;
    _.XmlHasParent__parent = t3;
  },
  XmlSimpleName: function XmlSimpleName(t0, t1) {
    this.local = t0;
    this.XmlHasParent__parent = t1;
  },
  XmlPrettyWriter: function XmlPrettyWriter(t0, t1, t2, t3, t4, t5, t6, t7, t8) {
    var _ = this;
    _.level = t0;
    _.pretty = true;
    _.indent = t1;
    _.newLine = t2;
    _.preserveWhitespace = t3;
    _.indentAttribute = t4;
    _.sortAttributes = t5;
    _.spaceBeforeSelfClose = t6;
    _.buffer = t7;
    _.entityMapping = t8;
  },
  XmlPrettyWriter_visitElement_closure: function XmlPrettyWriter_visitElement_closure() {
  },
  XmlVisitor: function XmlVisitor() {
  },
  XmlWriter: function XmlWriter(t0, t1) {
    this.buffer = t0;
    this.entityMapping = t1;
  },
  _XmlWriter_Object_XmlVisitor: function _XmlWriter_Object_XmlVisitor() {
  },
  printString(string) {
    if (typeof dartPrint == "function") {
      dartPrint(string);
      return;
    }
    if (typeof console == "object" && typeof console.log != "undefined") {
      console.log(string);
      return;
    }
    if (typeof window == "object")
      return;
    if (typeof print == "function") {
      print(string);
      return;
    }
    throw "Unable to print message: " + String(string);
  },
  throwLateFieldNI(fieldName) {
    return A.throwExpression(A.LateError$fieldNI(fieldName));
  },
  throwLateFieldAI(fieldName) {
    return A.throwExpression(A.LateError$fieldAI(fieldName));
  },
  throwLateFieldADI(fieldName) {
    return A.throwExpression(A.LateError$fieldADI(fieldName));
  },
  _convertDartFunctionFast(f) {
    var ret,
      existing = f.$dart_jsFunction;
    if (existing != null)
      return existing;
    ret = function(_call, f) {
      return function() {
        return _call(f, Array.prototype.slice.apply(arguments));
      };
    }(A._callDartFunctionFast, f);
    ret[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
    f.$dart_jsFunction = ret;
    return ret;
  },
  _callDartFunctionFast(callback, $arguments) {
    type$.List_dynamic._as($arguments);
    type$.Function._as(callback);
    return A.Primitives_applyFunction(callback, $arguments, null);
  },
  allowInterop(f, $F) {
    if (typeof f == "function")
      return f;
    else
      return $F._as(A._convertDartFunctionFast(f));
  }
},
J = {
  makeDispatchRecord(interceptor, proto, extension, indexability) {
    return {i: interceptor, p: proto, e: extension, x: indexability};
  },
  getNativeInterceptor(object) {
    var proto, objectProto, $constructor, interceptor, t1,
      record = object[init.dispatchPropertyName];
    if (record == null)
      if ($.initNativeDispatchFlag == null) {
        A.initNativeDispatch();
        record = object[init.dispatchPropertyName];
      }
    if (record != null) {
      proto = record.p;
      if (false === proto)
        return record.i;
      if (true === proto)
        return object;
      objectProto = Object.getPrototypeOf(object);
      if (proto === objectProto)
        return record.i;
      if (record.e === objectProto)
        throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
    }
    $constructor = object.constructor;
    if ($constructor == null)
      interceptor = null;
    else {
      t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
      if (t1 == null)
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
      interceptor = $constructor[t1];
    }
    if (interceptor != null)
      return interceptor;
    interceptor = A.lookupAndCacheInterceptor(object);
    if (interceptor != null)
      return interceptor;
    if (typeof object == "function")
      return B.JavaScriptFunction_methods;
    proto = Object.getPrototypeOf(object);
    if (proto == null)
      return B.PlainJavaScriptObject_methods;
    if (proto === Object.prototype)
      return B.PlainJavaScriptObject_methods;
    if (typeof $constructor == "function") {
      t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
      if (t1 == null)
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
      Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
      return B.UnknownJavaScriptObject_methods;
    }
    return B.UnknownJavaScriptObject_methods;
  },
  JSArray_JSArray$fixed($length, $E) {
    if ($length < 0 || $length > 4294967295)
      throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
    return J.JSArray_JSArray$markFixed(new Array($length), $E);
  },
  JSArray_JSArray$markFixed(allocation, $E) {
    return J.JSArray_markFixedList(A._setArrayType(allocation, $E._eval$1("JSArray<0>")), $E);
  },
  JSArray_markFixedList(list, $T) {
    list.fixed$length = Array;
    return list;
  },
  JSArray_markUnmodifiableList(list) {
    list.fixed$length = Array;
    list.immutable$list = Array;
    return list;
  },
  JSArray__compareAny(a, b) {
    var t1 = type$.Comparable_dynamic;
    return J.compareTo$1$ns(t1._as(a), t1._as(b));
  },
  JSString__isWhitespace(codeUnit) {
    if (codeUnit < 256)
      switch (codeUnit) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 32:
        case 133:
        case 160:
          return true;
        default:
          return false;
      }
    switch (codeUnit) {
      case 5760:
      case 8192:
      case 8193:
      case 8194:
      case 8195:
      case 8196:
      case 8197:
      case 8198:
      case 8199:
      case 8200:
      case 8201:
      case 8202:
      case 8232:
      case 8233:
      case 8239:
      case 8287:
      case 12288:
      case 65279:
        return true;
      default:
        return false;
    }
  },
  JSString__skipLeadingWhitespace(string, index) {
    var t1, codeUnit;
    for (t1 = string.length; index < t1;) {
      codeUnit = B.JSString_methods._codeUnitAt$1(string, index);
      if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
        break;
      ++index;
    }
    return index;
  },
  JSString__skipTrailingWhitespace(string, index) {
    var index0, codeUnit;
    for (; index > 0; index = index0) {
      index0 = index - 1;
      codeUnit = B.JSString_methods.codeUnitAt$1(string, index0);
      if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
        break;
    }
    return index;
  },
  getInterceptor$(receiver) {
    if (typeof receiver == "number") {
      if (Math.floor(receiver) == receiver)
        return J.JSInt.prototype;
      return J.JSNumNotInt.prototype;
    }
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return J.JSNull.prototype;
    if (typeof receiver == "boolean")
      return J.JSBool.prototype;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof A.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  },
  getInterceptor$asx(receiver) {
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof A.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  },
  getInterceptor$ax(receiver) {
    if (receiver == null)
      return receiver;
    if (receiver.constructor == Array)
      return J.JSArray.prototype;
    if (typeof receiver != "object") {
      if (typeof receiver == "function")
        return J.JavaScriptFunction.prototype;
      return receiver;
    }
    if (receiver instanceof A.Object)
      return receiver;
    return J.getNativeInterceptor(receiver);
  },
  getInterceptor$ns(receiver) {
    if (typeof receiver == "number")
      return J.JSNumber.prototype;
    if (typeof receiver == "string")
      return J.JSString.prototype;
    if (receiver == null)
      return receiver;
    if (!(receiver instanceof A.Object))
      return J.UnknownJavaScriptObject.prototype;
    return receiver;
  },
  get$hashCode$(receiver) {
    return J.getInterceptor$(receiver).get$hashCode(receiver);
  },
  get$isEmpty$asx(receiver) {
    return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
  },
  get$isNotEmpty$asx(receiver) {
    return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
  },
  get$iterator$ax(receiver) {
    return J.getInterceptor$ax(receiver).get$iterator(receiver);
  },
  get$length$asx(receiver) {
    return J.getInterceptor$asx(receiver).get$length(receiver);
  },
  get$reversed$ax(receiver) {
    return J.getInterceptor$ax(receiver).get$reversed(receiver);
  },
  $eq$(receiver, a0) {
    if (receiver == null)
      return a0 == null;
    if (typeof receiver != "object")
      return a0 != null && receiver === a0;
    return J.getInterceptor$(receiver).$eq(receiver, a0);
  },
  add$1$ax(receiver, a0) {
    return J.getInterceptor$ax(receiver).add$1(receiver, a0);
  },
  addAll$1$ax(receiver, a0) {
    return J.getInterceptor$ax(receiver).addAll$1(receiver, a0);
  },
  compareTo$1$ns(receiver, a0) {
    return J.getInterceptor$ns(receiver).compareTo$1(receiver, a0);
  },
  elementAt$1$ax(receiver, a0) {
    return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
  },
  fold$1$2$ax(receiver, a0, a1, $T1) {
    return J.getInterceptor$ax(receiver).fold$1$2(receiver, a0, a1, $T1);
  },
  forEach$1$ax(receiver, a0) {
    return J.getInterceptor$ax(receiver).forEach$1(receiver, a0);
  },
  map$1$ax(receiver, a0) {
    return J.getInterceptor$ax(receiver).map$1(receiver, a0);
  },
  map$1$1$ax(receiver, a0, $T1) {
    return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
  },
  noSuchMethod$1$(receiver, a0) {
    return J.getInterceptor$(receiver).noSuchMethod$1(receiver, a0);
  },
  toString$0$(receiver) {
    return J.getInterceptor$(receiver).toString$0(receiver);
  },
  Interceptor: function Interceptor() {
  },
  JSBool: function JSBool() {
  },
  JSNull: function JSNull() {
  },
  JavaScriptObject: function JavaScriptObject() {
  },
  LegacyJavaScriptObject: function LegacyJavaScriptObject() {
  },
  PlainJavaScriptObject: function PlainJavaScriptObject() {
  },
  UnknownJavaScriptObject: function UnknownJavaScriptObject() {
  },
  JavaScriptFunction: function JavaScriptFunction() {
  },
  JSArray: function JSArray(t0) {
    this.$ti = t0;
  },
  JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
    this.$ti = t0;
  },
  ArrayIterator: function ArrayIterator(t0, t1, t2) {
    var _ = this;
    _._iterable = t0;
    _._length = t1;
    _._index = 0;
    _._current = null;
    _.$ti = t2;
  },
  JSNumber: function JSNumber() {
  },
  JSInt: function JSInt() {
  },
  JSNumNotInt: function JSNumNotInt() {
  },
  JSString: function JSString() {
  }
},
B = {};
var holders = [A, J, B];
var $ = {};
A.JS_CONST.prototype = {};
J.Interceptor.prototype = {
  $eq(receiver, other) {
    return receiver === other;
  },
  get$hashCode(receiver) {
    return A.Primitives_objectHashCode(receiver);
  },
  toString$0(receiver) {
    return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
  },
  noSuchMethod$1(receiver, invocation) {
    type$.Invocation._as(invocation);
    throw A.wrapException(A.NoSuchMethodError$(receiver, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
  }
};
J.JSBool.prototype = {
  toString$0(receiver) {
    return String(receiver);
  },
  get$hashCode(receiver) {
    return receiver ? 519018 : 218159;
  },
  $isbool: 1
};
J.JSNull.prototype = {
  $eq(receiver, other) {
    return null == other;
  },
  toString$0(receiver) {
    return "null";
  },
  get$hashCode(receiver) {
    return 0;
  },
  $isNull: 1
};
J.JavaScriptObject.prototype = {};
J.LegacyJavaScriptObject.prototype = {
  get$hashCode(receiver) {
    return 0;
  },
  toString$0(receiver) {
    return String(receiver);
  }
};
J.PlainJavaScriptObject.prototype = {};
J.UnknownJavaScriptObject.prototype = {};
J.JavaScriptFunction.prototype = {
  toString$0(receiver) {
    var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
    if (dartClosure == null)
      return this.super$LegacyJavaScriptObject$toString(receiver);
    return "JavaScript function for " + J.toString$0$(dartClosure);
  },
  $isFunction: 1
};
J.JSArray.prototype = {
  add$1(receiver, value) {
    A._arrayInstanceType(receiver)._precomputed1._as(value);
    if (!!receiver.fixed$length)
      A.throwExpression(A.UnsupportedError$("add"));
    receiver.push(value);
  },
  addAll$1(receiver, collection) {
    var t1;
    A._arrayInstanceType(receiver)._eval$1("Iterable<1>")._as(collection);
    if (!!receiver.fixed$length)
      A.throwExpression(A.UnsupportedError$("addAll"));
    if (Array.isArray(collection)) {
      this._addAllFromArray$1(receiver, collection);
      return;
    }
    for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
      receiver.push(t1.get$current());
  },
  _addAllFromArray$1(receiver, array) {
    var len, i;
    type$.JSArray_dynamic._as(array);
    len = array.length;
    if (len === 0)
      return;
    if (receiver === array)
      throw A.wrapException(A.ConcurrentModificationError$(receiver));
    for (i = 0; i < len; ++i)
      receiver.push(array[i]);
  },
  clear$0(receiver) {
    if (!!receiver.fixed$length)
      A.throwExpression(A.UnsupportedError$("clear"));
    receiver.length = 0;
  },
  forEach$1(receiver, f) {
    var end, i;
    A._arrayInstanceType(receiver)._eval$1("~(1)")._as(f);
    end = receiver.length;
    for (i = 0; i < end; ++i) {
      f.call$1(receiver[i]);
      if (receiver.length !== end)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
    }
  },
  map$1$1(receiver, f, $T) {
    var t1 = A._arrayInstanceType(receiver);
    return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
  },
  map$1($receiver, f) {
    return this.map$1$1($receiver, f, type$.dynamic);
  },
  fold$1$2(receiver, initialValue, combine, $T) {
    var $length, value, i;
    $T._as(initialValue);
    A._arrayInstanceType(receiver)._bind$1($T)._eval$1("1(1,2)")._as(combine);
    $length = receiver.length;
    for (value = initialValue, i = 0; i < $length; ++i) {
      value = combine.call$2(value, receiver[i]);
      if (receiver.length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
    }
    return value;
  },
  elementAt$1(receiver, index) {
    if (!(index >= 0 && index < receiver.length))
      return A.ioore(receiver, index);
    return receiver[index];
  },
  get$last(receiver) {
    var t1 = receiver.length;
    if (t1 > 0)
      return receiver[t1 - 1];
    throw A.wrapException(A.IterableElementError_noElement());
  },
  every$1(receiver, test) {
    var end, i;
    A._arrayInstanceType(receiver)._eval$1("bool(1)")._as(test);
    end = receiver.length;
    for (i = 0; i < end; ++i) {
      if (!A.boolConversionCheck(test.call$1(receiver[i])))
        return false;
      if (receiver.length !== end)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
    }
    return true;
  },
  get$reversed(receiver) {
    return new A.ReversedListIterable(receiver, A._arrayInstanceType(receiver)._eval$1("ReversedListIterable<1>"));
  },
  sort$1(receiver, compare) {
    var t2,
      t1 = A._arrayInstanceType(receiver);
    t1._eval$1("int(1,1)?")._as(compare);
    if (!!receiver.immutable$list)
      A.throwExpression(A.UnsupportedError$("sort"));
    t2 = compare == null ? J._interceptors_JSArray__compareAny$closure() : compare;
    A.Sort_sort(receiver, t2, t1._precomputed1);
  },
  sort$0($receiver) {
    return this.sort$1($receiver, null);
  },
  get$isEmpty(receiver) {
    return receiver.length === 0;
  },
  get$isNotEmpty(receiver) {
    return receiver.length !== 0;
  },
  toString$0(receiver) {
    return A.IterableBase_iterableToFullString(receiver, "[", "]");
  },
  get$iterator(receiver) {
    return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
  },
  get$hashCode(receiver) {
    return A.Primitives_objectHashCode(receiver);
  },
  get$length(receiver) {
    return receiver.length;
  },
  set$length(receiver, newLength) {
    if (!!receiver.fixed$length)
      A.throwExpression(A.UnsupportedError$("set length"));
    if (newLength < 0)
      throw A.wrapException(A.RangeError$range(newLength, 0, null, "newLength", null));
    if (newLength > receiver.length)
      A._arrayInstanceType(receiver)._precomputed1._as(null);
    receiver.length = newLength;
  },
  $index(receiver, index) {
    if (!(index >= 0 && index < receiver.length))
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    return receiver[index];
  },
  $indexSet(receiver, index, value) {
    A._arrayInstanceType(receiver)._precomputed1._as(value);
    if (!!receiver.immutable$list)
      A.throwExpression(A.UnsupportedError$("indexed set"));
    if (!(index >= 0 && index < receiver.length))
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    receiver[index] = value;
  },
  set$last(receiver, element) {
    var t1;
    A._arrayInstanceType(receiver)._precomputed1._as(element);
    t1 = receiver.length;
    if (t1 === 0)
      throw A.wrapException(A.IterableElementError_noElement());
    this.$indexSet(receiver, t1 - 1, element);
  },
  $isJSIndexable: 1,
  $isEfficientLengthIterable: 1,
  $isIterable: 1,
  $isList: 1
};
J.JSUnmodifiableArray.prototype = {};
J.ArrayIterator.prototype = {
  get$current() {
    var t1 = this._current;
    return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
  },
  moveNext$0() {
    var t2, _this = this,
      t1 = _this._iterable,
      $length = t1.length;
    if (_this._length !== $length)
      throw A.wrapException(A.throwConcurrentModificationError(t1));
    t2 = _this._index;
    if (t2 >= $length) {
      _this.set$_current(null);
      return false;
    }
    _this.set$_current(t1[t2]);
    ++_this._index;
    return true;
  },
  set$_current(_current) {
    this._current = this.$ti._eval$1("1?")._as(_current);
  },
  $isIterator: 1
};
J.JSNumber.prototype = {
  compareTo$1(receiver, b) {
    var bIsNegative;
    A._asNum(b);
    if (receiver < b)
      return -1;
    else if (receiver > b)
      return 1;
    else if (receiver === b) {
      if (receiver === 0) {
        bIsNegative = this.get$isNegative(b);
        if (this.get$isNegative(receiver) === bIsNegative)
          return 0;
        if (this.get$isNegative(receiver))
          return -1;
        return 1;
      }
      return 0;
    } else if (isNaN(receiver)) {
      if (isNaN(b))
        return 0;
      return 1;
    } else
      return -1;
  },
  get$isNegative(receiver) {
    return receiver === 0 ? 1 / receiver < 0 : receiver < 0;
  },
  round$0(receiver) {
    if (receiver > 0) {
      if (receiver !== 1 / 0)
        return Math.round(receiver);
    } else if (receiver > -1 / 0)
      return 0 - Math.round(0 - receiver);
    throw A.wrapException(A.UnsupportedError$("" + receiver + ".round()"));
  },
  toRadixString$1(receiver, radix) {
    var result, match, t1, exponent;
    if (radix < 2 || radix > 36)
      throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
    result = receiver.toString(radix);
    if (B.JSString_methods.codeUnitAt$1(result, result.length - 1) !== 41)
      return result;
    match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
    if (match == null)
      A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
    t1 = match.length;
    if (1 >= t1)
      return A.ioore(match, 1);
    result = match[1];
    if (3 >= t1)
      return A.ioore(match, 3);
    exponent = +match[3];
    t1 = match[2];
    if (t1 != null) {
      result += t1;
      exponent -= t1.length;
    }
    return result + B.JSString_methods.$mul("0", exponent);
  },
  toString$0(receiver) {
    if (receiver === 0 && 1 / receiver < 0)
      return "-0.0";
    else
      return "" + receiver;
  },
  get$hashCode(receiver) {
    var absolute, floorLog2, factor, scaled,
      intValue = receiver | 0;
    if (receiver === intValue)
      return intValue & 536870911;
    absolute = Math.abs(receiver);
    floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
    factor = Math.pow(2, floorLog2);
    scaled = absolute < 1 ? absolute / factor : factor / absolute;
    return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
  },
  $mod(receiver, other) {
    var result = receiver % other;
    if (result === 0)
      return 0;
    if (result > 0)
      return result;
    return result + other;
  },
  $tdiv(receiver, other) {
    if ((receiver | 0) === receiver)
      if (other >= 1 || false)
        return receiver / other | 0;
    return this._tdivSlow$1(receiver, other);
  },
  _tdivFast$1(receiver, other) {
    return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
  },
  _tdivSlow$1(receiver, other) {
    var quotient = receiver / other;
    if (quotient >= -2147483648 && quotient <= 2147483647)
      return quotient | 0;
    if (quotient > 0) {
      if (quotient !== 1 / 0)
        return Math.floor(quotient);
    } else if (quotient > -1 / 0)
      return Math.ceil(quotient);
    throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + other));
  },
  $shl(receiver, other) {
    if (other < 0)
      throw A.wrapException(A.argumentErrorValue(other));
    return other > 31 ? 0 : receiver << other >>> 0;
  },
  _shlPositive$1(receiver, other) {
    return other > 31 ? 0 : receiver << other >>> 0;
  },
  _shrOtherPositive$1(receiver, other) {
    var t1;
    if (receiver > 0)
      t1 = this._shrBothPositive$1(receiver, other);
    else {
      t1 = other > 31 ? 31 : other;
      t1 = receiver >> t1 >>> 0;
    }
    return t1;
  },
  _shrReceiverPositive$1(receiver, other) {
    if (0 > other)
      throw A.wrapException(A.argumentErrorValue(other));
    return this._shrBothPositive$1(receiver, other);
  },
  _shrBothPositive$1(receiver, other) {
    return other > 31 ? 0 : receiver >>> other;
  },
  $isComparable: 1,
  $isdouble: 1,
  $isnum: 1
};
J.JSInt.prototype = {$isint: 1};
J.JSNumNotInt.prototype = {};
J.JSString.prototype = {
  codeUnitAt$1(receiver, index) {
    if (index < 0)
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    if (index >= receiver.length)
      A.throwExpression(A.diagnoseIndexError(receiver, index));
    return receiver.charCodeAt(index);
  },
  _codeUnitAt$1(receiver, index) {
    if (index >= receiver.length)
      throw A.wrapException(A.diagnoseIndexError(receiver, index));
    return receiver.charCodeAt(index);
  },
  $add(receiver, other) {
    return receiver + other;
  },
  substring$2(receiver, start, end) {
    return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length));
  },
  substring$1($receiver, start) {
    return this.substring$2($receiver, start, null);
  },
  trim$0(receiver) {
    var startIndex, t1, endIndex0,
      result = receiver.trim(),
      endIndex = result.length;
    if (endIndex === 0)
      return result;
    if (this._codeUnitAt$1(result, 0) === 133) {
      startIndex = J.JSString__skipLeadingWhitespace(result, 1);
      if (startIndex === endIndex)
        return "";
    } else
      startIndex = 0;
    t1 = endIndex - 1;
    endIndex0 = this.codeUnitAt$1(result, t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
    if (startIndex === 0 && endIndex0 === endIndex)
      return result;
    return result.substring(startIndex, endIndex0);
  },
  $mul(receiver, times) {
    var s, result;
    if (0 >= times)
      return "";
    if (times === 1 || receiver.length === 0)
      return receiver;
    if (times !== times >>> 0)
      throw A.wrapException(B.C_OutOfMemoryError);
    for (s = receiver, result = ""; true;) {
      if ((times & 1) === 1)
        result = s + result;
      times = times >>> 1;
      if (times === 0)
        break;
      s += s;
    }
    return result;
  },
  indexOf$1(receiver, pattern) {
    var t1 = receiver.indexOf(pattern, 0);
    return t1;
  },
  compareTo$1(receiver, other) {
    var t1;
    A._asString(other);
    if (receiver === other)
      t1 = 0;
    else
      t1 = receiver < other ? -1 : 1;
    return t1;
  },
  toString$0(receiver) {
    return receiver;
  },
  get$hashCode(receiver) {
    var t1, hash, i;
    for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
      hash = hash + receiver.charCodeAt(i) & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      hash ^= hash >> 6;
    }
    hash = hash + ((hash & 67108863) << 3) & 536870911;
    hash ^= hash >> 11;
    return hash + ((hash & 16383) << 15) & 536870911;
  },
  get$length(receiver) {
    return receiver.length;
  },
  $isJSIndexable: 1,
  $isComparable: 1,
  $isPattern: 1,
  $isString: 1
};
A.LateError.prototype = {
  toString$0(_) {
    return "LateInitializationError: " + this._message;
  }
};
A.CodeUnits.prototype = {
  get$length(_) {
    return this._string.length;
  },
  $index(_, i) {
    return B.JSString_methods.codeUnitAt$1(this._string, i);
  }
};
A.EfficientLengthIterable.prototype = {};
A.ListIterable.prototype = {
  get$iterator(_) {
    var _this = this;
    return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
  },
  forEach$1(_, action) {
    var $length, i, _this = this;
    A._instanceType(_this)._eval$1("~(ListIterable.E)")._as(action);
    $length = _this.get$length(_this);
    for (i = 0; i < $length; ++i) {
      action.call$1(_this.elementAt$1(0, i));
      if ($length !== _this.get$length(_this))
        throw A.wrapException(A.ConcurrentModificationError$(_this));
    }
  },
  get$isEmpty(_) {
    return this.get$length(this) === 0;
  },
  every$1(_, test) {
    var $length, i, _this = this;
    A._instanceType(_this)._eval$1("bool(ListIterable.E)")._as(test);
    $length = _this.get$length(_this);
    for (i = 0; i < $length; ++i) {
      if (!A.boolConversionCheck(test.call$1(_this.elementAt$1(0, i))))
        return false;
      if ($length !== _this.get$length(_this))
        throw A.wrapException(A.ConcurrentModificationError$(_this));
    }
    return true;
  },
  map$1$1(_, toElement, $T) {
    var t1 = A._instanceType(this);
    return new A.MappedListIterable(this, t1._bind$1($T)._eval$1("1(ListIterable.E)")._as(toElement), t1._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
  },
  map$1($receiver, toElement) {
    return this.map$1$1($receiver, toElement, type$.dynamic);
  },
  fold$1$2(_, initialValue, combine, $T) {
    var $length, value, i, _this = this;
    $T._as(initialValue);
    A._instanceType(_this)._bind$1($T)._eval$1("1(1,ListIterable.E)")._as(combine);
    $length = _this.get$length(_this);
    for (value = initialValue, i = 0; i < $length; ++i) {
      value = combine.call$2(value, _this.elementAt$1(0, i));
      if ($length !== _this.get$length(_this))
        throw A.wrapException(A.ConcurrentModificationError$(_this));
    }
    return value;
  }
};
A.ListIterator.prototype = {
  get$current() {
    var t1 = this.__internal$_current;
    return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
  },
  moveNext$0() {
    var t3, _this = this,
      t1 = _this.__internal$_iterable,
      t2 = J.getInterceptor$asx(t1),
      $length = t2.get$length(t1);
    if (_this.__internal$_length !== $length)
      throw A.wrapException(A.ConcurrentModificationError$(t1));
    t3 = _this.__internal$_index;
    if (t3 >= $length) {
      _this.set$__internal$_current(null);
      return false;
    }
    _this.set$__internal$_current(t2.elementAt$1(t1, t3));
    ++_this.__internal$_index;
    return true;
  },
  set$__internal$_current(_current) {
    this.__internal$_current = this.$ti._eval$1("1?")._as(_current);
  },
  $isIterator: 1
};
A.MappedIterable.prototype = {
  get$iterator(_) {
    var t1 = A._instanceType(this);
    return new A.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, t1._eval$1("@<1>")._bind$1(t1._rest[1])._eval$1("MappedIterator<1,2>"));
  },
  get$length(_) {
    return J.get$length$asx(this.__internal$_iterable);
  }
};
A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
A.MappedIterator.prototype = {
  moveNext$0() {
    var _this = this,
      t1 = _this._iterator;
    if (t1.moveNext$0()) {
      _this.set$__internal$_current(_this._f.call$1(t1.get$current()));
      return true;
    }
    _this.set$__internal$_current(null);
    return false;
  },
  get$current() {
    var t1 = this.__internal$_current;
    return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
  },
  set$__internal$_current(_current) {
    this.__internal$_current = this.$ti._eval$1("2?")._as(_current);
  }
};
A.MappedListIterable.prototype = {
  get$length(_) {
    return J.get$length$asx(this._source);
  },
  elementAt$1(_, index) {
    return this._f.call$1(J.elementAt$1$ax(this._source, index));
  }
};
A.WhereIterable.prototype = {
  get$iterator(_) {
    var t1 = this.__internal$_iterable;
    return new A.WhereIterator(t1.get$iterator(t1), this._f, this.$ti._eval$1("WhereIterator<1>"));
  },
  map$1$1(_, toElement, $T) {
    var t1 = this.$ti;
    return new A.MappedIterable(this, t1._bind$1($T)._eval$1("1(2)")._as(toElement), t1._eval$1("@<1>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
  },
  map$1($receiver, toElement) {
    return this.map$1$1($receiver, toElement, type$.dynamic);
  }
};
A.WhereIterator.prototype = {
  moveNext$0() {
    var t1, t2;
    for (t1 = this._iterator, t2 = this._f; t1.moveNext$0();)
      if (A.boolConversionCheck(t2.call$1(t1.get$current())))
        return true;
    return false;
  },
  get$current() {
    return this._iterator.get$current();
  }
};
A.FixedLengthListMixin.prototype = {
  set$length(receiver, newLength) {
    throw A.wrapException(A.UnsupportedError$("Cannot change the length of a fixed-length list"));
  },
  add$1(receiver, value) {
    A.instanceType(receiver)._eval$1("FixedLengthListMixin.E")._as(value);
    throw A.wrapException(A.UnsupportedError$("Cannot add to a fixed-length list"));
  },
  addAll$1(receiver, iterable) {
    A.instanceType(receiver)._eval$1("Iterable<FixedLengthListMixin.E>")._as(iterable);
    throw A.wrapException(A.UnsupportedError$("Cannot add to a fixed-length list"));
  }
};
A.UnmodifiableListMixin.prototype = {
  $indexSet(_, index, value) {
    A._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
    throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
  },
  set$length(_, newLength) {
    throw A.wrapException(A.UnsupportedError$("Cannot change the length of an unmodifiable list"));
  },
  add$1(_, value) {
    A._instanceType(this)._eval$1("UnmodifiableListMixin.E")._as(value);
    throw A.wrapException(A.UnsupportedError$("Cannot add to an unmodifiable list"));
  },
  addAll$1(_, iterable) {
    A._instanceType(this)._eval$1("Iterable<UnmodifiableListMixin.E>")._as(iterable);
    throw A.wrapException(A.UnsupportedError$("Cannot add to an unmodifiable list"));
  }
};
A.UnmodifiableListBase.prototype = {};
A.ReversedListIterable.prototype = {
  get$length(_) {
    return J.get$length$asx(this._source);
  },
  elementAt$1(_, index) {
    var t1 = this._source,
      t2 = J.getInterceptor$asx(t1);
    return t2.elementAt$1(t1, t2.get$length(t1) - 1 - index);
  }
};
A.Symbol.prototype = {
  get$hashCode(_) {
    var hash = this._hashCode;
    if (hash != null)
      return hash;
    hash = 664597 * J.get$hashCode$(this.__internal$_name) & 536870911;
    this._hashCode = hash;
    return hash;
  },
  toString$0(_) {
    return 'Symbol("' + A.S(this.__internal$_name) + '")';
  },
  $eq(_, other) {
    if (other == null)
      return false;
    return other instanceof A.Symbol && this.__internal$_name == other.__internal$_name;
  },
  $isSymbol0: 1
};
A.ConstantMapView.prototype = {};
A.ConstantMap.prototype = {
  get$isEmpty(_) {
    return this.get$length(this) === 0;
  },
  toString$0(_) {
    return A.MapBase_mapToString(this);
  },
  get$entries() {
    return this.entries$body$ConstantMap(A._instanceType(this)._eval$1("MapEntry<1,2>"));
  },
  entries$body$ConstantMap($async$type) {
    var $async$self = this;
    return A._makeSyncStarIterable(function() {
      var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, t3, key, t4;
      return function $async$get$entries($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.get$keys(), t1 = t1.get$iterator(t1), t2 = A._instanceType($async$self), t3 = t2._rest[1], t2 = t2._eval$1("@<1>")._bind$1(t3)._eval$1("MapEntry<1,2>");
            case 2:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 3;
                break;
              }
              key = t1.get$current();
              t4 = $async$self.$index(0, key);
              $async$goto = 4;
              return new A.MapEntry(key, t4 == null ? t3._as(t4) : t4, t2);
            case 4:
              // after yield
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return A._IterationMarker_endOfIteration();
            case 1:
              // rethrow
              return A._IterationMarker_uncaughtError($async$currentError);
          }
      };
    }, $async$type);
  },
  map$2$1(_, transform, K2, V2) {
    var result = A.LinkedHashMap_LinkedHashMap$_empty(K2, V2);
    this.forEach$1(0, new A.ConstantMap_map_closure(this, A._instanceType(this)._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(3,4)")._as(transform), result));
    return result;
  },
  map$1($receiver, transform) {
    return this.map$2$1($receiver, transform, type$.dynamic, type$.dynamic);
  },
  $isMap: 1
};
A.ConstantMap_map_closure.prototype = {
  call$2(key, value) {
    var t1 = A._instanceType(this.$this),
      entry = this.transform.call$2(t1._precomputed1._as(key), t1._rest[1]._as(value));
    this.result.$indexSet(0, entry.key, entry.value);
  },
  $signature() {
    return A._instanceType(this.$this)._eval$1("~(1,2)");
  }
};
A.ConstantStringMap.prototype = {
  get$length(_) {
    return this.__js_helper$_length;
  },
  containsKey$1(key) {
    if (typeof key != "string")
      return false;
    if ("__proto__" === key)
      return false;
    return this._jsObject.hasOwnProperty(key);
  },
  $index(_, key) {
    if (!this.containsKey$1(key))
      return null;
    return this._jsObject[A._asString(key)];
  },
  forEach$1(_, f) {
    var keys, t2, t3, i, t4,
      t1 = this.$ti;
    t1._eval$1("~(1,2)")._as(f);
    keys = this._keys;
    for (t2 = keys.length, t3 = this._jsObject, t1 = t1._rest[1], i = 0; i < t2; ++i) {
      t4 = A._asString(keys[i]);
      f.call$2(t4, t1._as(t3[t4]));
    }
  },
  get$keys() {
    return new A._ConstantMapKeyIterable(this, this.$ti._eval$1("_ConstantMapKeyIterable<1>"));
  }
};
A._ConstantMapKeyIterable.prototype = {
  get$iterator(_) {
    var t1 = this._map._keys;
    return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
  },
  get$length(_) {
    return this._map._keys.length;
  }
};
A.GeneralConstantMap.prototype = {
  _getMap$0() {
    var t1, t2, t3, _this = this,
      backingMap = _this.$map;
    if (backingMap == null) {
      t1 = _this.$ti;
      t2 = t1._precomputed1;
      t3 = A.GeneralConstantMap__typeTest(t2);
      backingMap = A.LinkedHashMap_LinkedHashMap(A._js_helper_GeneralConstantMap__constantMapHashCode$closure(), t3, t2, t1._rest[1]);
      A.fillLiteralMap(_this._jsData, backingMap);
      _this.$map = backingMap;
    }
    return backingMap;
  },
  containsKey$1(key) {
    return this._getMap$0().containsKey$1(key);
  },
  $index(_, key) {
    return this._getMap$0().$index(0, key);
  },
  forEach$1(_, f) {
    this.$ti._eval$1("~(1,2)")._as(f);
    this._getMap$0().forEach$1(0, f);
  },
  get$keys() {
    var t1 = this._getMap$0();
    return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
  },
  get$length(_) {
    return this._getMap$0().__js_helper$_length;
  }
};
A.GeneralConstantMap__typeTest_closure.prototype = {
  call$1(o) {
    return this.T._is(o);
  },
  $signature: 16
};
A.JSInvocationMirror.prototype = {
  get$memberName() {
    var t1 = this._memberName;
    return t1;
  },
  get$positionalArguments() {
    var t1, argumentCount, list, index, _this = this;
    if (_this.__js_helper$_kind === 1)
      return B.List_empty1;
    t1 = _this._arguments;
    argumentCount = t1.length - _this._namedArgumentNames.length - _this._typeArgumentCount;
    if (argumentCount === 0)
      return B.List_empty1;
    list = [];
    for (index = 0; index < argumentCount; ++index) {
      if (!(index < t1.length))
        return A.ioore(t1, index);
      list.push(t1[index]);
    }
    return J.JSArray_markUnmodifiableList(list);
  },
  get$namedArguments() {
    var t1, namedArgumentCount, t2, namedArgumentsStartIndex, map, i, t3, t4, _this = this;
    if (_this.__js_helper$_kind !== 0)
      return B.Map_empty1;
    t1 = _this._namedArgumentNames;
    namedArgumentCount = t1.length;
    t2 = _this._arguments;
    namedArgumentsStartIndex = t2.length - namedArgumentCount - _this._typeArgumentCount;
    if (namedArgumentCount === 0)
      return B.Map_empty1;
    map = new A.JsLinkedHashMap(type$.JsLinkedHashMap_Symbol_dynamic);
    for (i = 0; i < namedArgumentCount; ++i) {
      if (!(i < t1.length))
        return A.ioore(t1, i);
      t3 = t1[i];
      t4 = namedArgumentsStartIndex + i;
      if (!(t4 >= 0 && t4 < t2.length))
        return A.ioore(t2, t4);
      map.$indexSet(0, new A.Symbol(t3), t2[t4]);
    }
    return new A.ConstantMapView(map, type$.ConstantMapView_Symbol_dynamic);
  },
  $isInvocation: 1
};
A.Primitives_functionNoSuchMethod_closure.prototype = {
  call$2($name, argument) {
    var t1;
    A._asString($name);
    t1 = this._box_0;
    t1.names = t1.names + "$" + $name;
    B.JSArray_methods.add$1(this.namedArgumentList, $name);
    B.JSArray_methods.add$1(this.$arguments, argument);
    ++t1.argumentCount;
  },
  $signature: 30
};
A.TypeErrorDecoder.prototype = {
  matchTypeError$1(message) {
    var result, t1, _this = this,
      match = new RegExp(_this._pattern).exec(message);
    if (match == null)
      return null;
    result = Object.create(null);
    t1 = _this._arguments;
    if (t1 !== -1)
      result.arguments = match[t1 + 1];
    t1 = _this._argumentsExpr;
    if (t1 !== -1)
      result.argumentsExpr = match[t1 + 1];
    t1 = _this._expr;
    if (t1 !== -1)
      result.expr = match[t1 + 1];
    t1 = _this._method;
    if (t1 !== -1)
      result.method = match[t1 + 1];
    t1 = _this._receiver;
    if (t1 !== -1)
      result.receiver = match[t1 + 1];
    return result;
  }
};
A.NullError.prototype = {
  toString$0(_) {
    var t1 = this._method;
    if (t1 == null)
      return "NoSuchMethodError: " + this.__js_helper$_message;
    return "NoSuchMethodError: method not found: '" + t1 + "' on null";
  }
};
A.JsNoSuchMethodError.prototype = {
  toString$0(_) {
    var t2, _this = this,
      _s38_ = "NoSuchMethodError: method not found: '",
      t1 = _this._method;
    if (t1 == null)
      return "NoSuchMethodError: " + _this.__js_helper$_message;
    t2 = _this._receiver;
    if (t2 == null)
      return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
    return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
  }
};
A.UnknownJsTypeError.prototype = {
  toString$0(_) {
    var t1 = this.__js_helper$_message;
    return t1.length === 0 ? "Error" : "Error: " + t1;
  }
};
A.NullThrownFromJavaScriptException.prototype = {
  toString$0(_) {
    return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
  }
};
A.Closure.prototype = {
  toString$0(_) {
    var $constructor = this.constructor,
      $name = $constructor == null ? null : $constructor.name;
    return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
  },
  $isFunction: 1,
  get$$call() {
    return this;
  },
  "call*": "call$1",
  $requiredArgCount: 1,
  $defaultValues: null
};
A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
A.TearOffClosure.prototype = {};
A.StaticClosure.prototype = {
  toString$0(_) {
    var $name = this.$static_name;
    if ($name == null)
      return "Closure of unknown static method";
    return "Closure '" + A.unminifyOrTag($name) + "'";
  }
};
A.BoundClosure.prototype = {
  $eq(_, other) {
    if (other == null)
      return false;
    if (this === other)
      return true;
    if (!(other instanceof A.BoundClosure))
      return false;
    return this.$_target === other.$_target && this._receiver === other._receiver;
  },
  get$hashCode(_) {
    return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
  },
  toString$0(_) {
    return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
  }
};
A.RuntimeError.prototype = {
  toString$0(_) {
    return "RuntimeError: " + this.message;
  }
};
A._AssertionError.prototype = {
  toString$0(_) {
    return "Assertion failed: " + A.Error_safeToString(this.message);
  }
};
A._Required.prototype = {};
A.JsLinkedHashMap.prototype = {
  get$length(_) {
    return this.__js_helper$_length;
  },
  get$isEmpty(_) {
    return this.__js_helper$_length === 0;
  },
  get$keys() {
    return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
  },
  get$values() {
    var t1 = A._instanceType(this);
    return A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(this, t1._eval$1("LinkedHashMapKeyIterable<1>")), new A.JsLinkedHashMap_values_closure(this), t1._precomputed1, t1._rest[1]);
  },
  containsKey$1(key) {
    var strings, nums;
    if (typeof key == "string") {
      strings = this._strings;
      if (strings == null)
        return false;
      return strings[key] != null;
    } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return false;
      return nums[key] != null;
    } else
      return this.internalContainsKey$1(key);
  },
  internalContainsKey$1(key) {
    var rest = this.__js_helper$_rest;
    if (rest == null)
      return false;
    return this.internalFindBucketIndex$2(rest[this.internalComputeHashCode$1(key)], key) >= 0;
  },
  $index(_, key) {
    var strings, cell, t1, nums, _null = null;
    if (typeof key == "string") {
      strings = this._strings;
      if (strings == null)
        return _null;
      cell = strings[key];
      t1 = cell == null ? _null : cell.hashMapCellValue;
      return t1;
    } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
      nums = this._nums;
      if (nums == null)
        return _null;
      cell = nums[key];
      t1 = cell == null ? _null : cell.hashMapCellValue;
      return t1;
    } else
      return this.internalGet$1(key);
  },
  internalGet$1(key) {
    var bucket, index,
      rest = this.__js_helper$_rest;
    if (rest == null)
      return null;
    bucket = rest[this.internalComputeHashCode$1(key)];
    index = this.internalFindBucketIndex$2(bucket, key);
    if (index < 0)
      return null;
    return bucket[index].hashMapCellValue;
  },
  $indexSet(_, key, value) {
    var strings, nums, _this = this,
      t1 = A._instanceType(_this);
    t1._precomputed1._as(key);
    t1._rest[1]._as(value);
    if (typeof key == "string") {
      strings = _this._strings;
      _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
    } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
      nums = _this._nums;
      _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
    } else
      _this.internalSet$2(key, value);
  },
  internalSet$2(key, value) {
    var rest, hash, bucket, index, _this = this,
      t1 = A._instanceType(_this);
    t1._precomputed1._as(key);
    t1._rest[1]._as(value);
    rest = _this.__js_helper$_rest;
    if (rest == null)
      rest = _this.__js_helper$_rest = _this._newHashTable$0();
    hash = _this.internalComputeHashCode$1(key);
    bucket = rest[hash];
    if (bucket == null)
      rest[hash] = [_this._newLinkedCell$2(key, value)];
    else {
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index >= 0)
        bucket[index].hashMapCellValue = value;
      else
        bucket.push(_this._newLinkedCell$2(key, value));
    }
  },
  putIfAbsent$2(key, ifAbsent) {
    var t2, value, _this = this,
      t1 = A._instanceType(_this);
    t1._precomputed1._as(key);
    t1._eval$1("2()")._as(ifAbsent);
    if (_this.containsKey$1(key)) {
      t2 = _this.$index(0, key);
      return t2 == null ? t1._rest[1]._as(t2) : t2;
    }
    value = ifAbsent.call$0();
    _this.$indexSet(0, key, value);
    return value;
  },
  remove$1(_, key) {
    if (typeof key == "number" && (key & 0x3fffffff) === key)
      return this._removeHashTableEntry$2(this._nums, key);
    else
      return this.internalRemove$1(key);
  },
  internalRemove$1(key) {
    var hash, bucket, index, cell, _this = this,
      rest = _this.__js_helper$_rest;
    if (rest == null)
      return null;
    hash = _this.internalComputeHashCode$1(key);
    bucket = rest[hash];
    index = _this.internalFindBucketIndex$2(bucket, key);
    if (index < 0)
      return null;
    cell = bucket.splice(index, 1)[0];
    _this._unlinkCell$1(cell);
    if (bucket.length === 0)
      delete rest[hash];
    return cell.hashMapCellValue;
  },
  forEach$1(_, action) {
    var cell, modifications, _this = this;
    A._instanceType(_this)._eval$1("~(1,2)")._as(action);
    cell = _this._first;
    modifications = _this._modifications;
    for (; cell != null;) {
      action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
      if (modifications !== _this._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(_this));
      cell = cell._next;
    }
  },
  _addHashTableEntry$3(table, key, value) {
    var cell,
      t1 = A._instanceType(this);
    t1._precomputed1._as(key);
    t1._rest[1]._as(value);
    cell = table[key];
    if (cell == null)
      table[key] = this._newLinkedCell$2(key, value);
    else
      cell.hashMapCellValue = value;
  },
  _removeHashTableEntry$2(table, key) {
    var cell;
    if (table == null)
      return null;
    cell = table[key];
    if (cell == null)
      return null;
    this._unlinkCell$1(cell);
    delete table[key];
    return cell.hashMapCellValue;
  },
  _modified$0() {
    this._modifications = this._modifications + 1 & 1073741823;
  },
  _newLinkedCell$2(key, value) {
    var _this = this,
      t1 = A._instanceType(_this),
      cell = new A.LinkedHashMapCell(t1._precomputed1._as(key), t1._rest[1]._as(value));
    if (_this._first == null)
      _this._first = _this._last = cell;
    else {
      t1 = _this._last;
      t1.toString;
      cell._previous = t1;
      _this._last = t1._next = cell;
    }
    ++_this.__js_helper$_length;
    _this._modified$0();
    return cell;
  },
  _unlinkCell$1(cell) {
    var _this = this,
      previous = cell._previous,
      next = cell._next;
    if (previous == null)
      _this._first = next;
    else
      previous._next = next;
    if (next == null)
      _this._last = previous;
    else
      next._previous = previous;
    --_this.__js_helper$_length;
    _this._modified$0();
  },
  internalComputeHashCode$1(key) {
    return J.get$hashCode$(key) & 0x3fffffff;
  },
  internalFindBucketIndex$2(bucket, key) {
    var $length, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (i = 0; i < $length; ++i)
      if (J.$eq$(bucket[i].hashMapCellKey, key))
        return i;
    return -1;
  },
  toString$0(_) {
    return A.MapBase_mapToString(this);
  },
  _newHashTable$0() {
    var table = Object.create(null);
    table["<non-identifier-key>"] = table;
    delete table["<non-identifier-key>"];
    return table;
  },
  $isLinkedHashMap: 1
};
A.JsLinkedHashMap_values_closure.prototype = {
  call$1(each) {
    var t1 = this.$this,
      t2 = A._instanceType(t1);
    t1 = t1.$index(0, t2._precomputed1._as(each));
    return t1 == null ? t2._rest[1]._as(t1) : t1;
  },
  $signature() {
    return A._instanceType(this.$this)._eval$1("2(1)");
  }
};
A.LinkedHashMapCell.prototype = {};
A.LinkedHashMapKeyIterable.prototype = {
  get$length(_) {
    return this._map.__js_helper$_length;
  },
  get$isEmpty(_) {
    return this._map.__js_helper$_length === 0;
  },
  get$iterator(_) {
    var t1 = this._map,
      t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications, this.$ti._eval$1("LinkedHashMapKeyIterator<1>"));
    t2._cell = t1._first;
    return t2;
  },
  contains$1(_, element) {
    return this._map.containsKey$1(element);
  },
  forEach$1(_, f) {
    var t1, cell, modifications;
    this.$ti._eval$1("~(1)")._as(f);
    t1 = this._map;
    cell = t1._first;
    modifications = t1._modifications;
    for (; cell != null;) {
      f.call$1(cell.hashMapCellKey);
      if (modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = cell._next;
    }
  }
};
A.LinkedHashMapKeyIterator.prototype = {
  get$current() {
    return this.__js_helper$_current;
  },
  moveNext$0() {
    var cell, _this = this,
      t1 = _this._map;
    if (_this._modifications !== t1._modifications)
      throw A.wrapException(A.ConcurrentModificationError$(t1));
    cell = _this._cell;
    if (cell == null) {
      _this.set$__js_helper$_current(null);
      return false;
    } else {
      _this.set$__js_helper$_current(cell.hashMapCellKey);
      _this._cell = cell._next;
      return true;
    }
  },
  set$__js_helper$_current(_current) {
    this.__js_helper$_current = this.$ti._eval$1("1?")._as(_current);
  },
  $isIterator: 1
};
A.initHooks_closure.prototype = {
  call$1(o) {
    return this.getTag(o);
  },
  $signature: 4
};
A.initHooks_closure0.prototype = {
  call$2(o, tag) {
    return this.getUnknownTag(o, tag);
  },
  $signature: 24
};
A.initHooks_closure1.prototype = {
  call$1(tag) {
    return this.prototypeForTag(A._asString(tag));
  },
  $signature: 28
};
A.JSSyntaxRegExp.prototype = {
  toString$0(_) {
    return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
  },
  get$_nativeGlobalVersion() {
    var _this = this,
      t1 = _this._nativeGlobalRegExp;
    if (t1 != null)
      return t1;
    t1 = _this._nativeRegExp;
    return _this._nativeGlobalRegExp = A.JSSyntaxRegExp_makeNative(_this.pattern, t1.multiline, !t1.ignoreCase, t1.unicode, t1.dotAll, true);
  },
  allMatches$1(_, string) {
    return new A._AllMatchesIterable(this, string, 0);
  },
  _execGlobal$2(string, start) {
    var match,
      regexp = this.get$_nativeGlobalVersion();
    if (regexp == null)
      regexp = type$.Object._as(regexp);
    regexp.lastIndex = start;
    match = regexp.exec(string);
    if (match == null)
      return null;
    return new A._MatchImplementation(match);
  },
  $isPattern: 1
};
A._MatchImplementation.prototype = {
  get$end() {
    var t1 = this._match;
    return t1.index + t1[0].length;
  },
  group$1(index) {
    var t1 = this._match;
    if (!(index < t1.length))
      return A.ioore(t1, index);
    return t1[index];
  },
  $isMatch: 1,
  $isRegExpMatch: 1
};
A._AllMatchesIterable.prototype = {
  get$iterator(_) {
    return new A._AllMatchesIterator(this._re, this.__js_helper$_string, this._start);
  }
};
A._AllMatchesIterator.prototype = {
  get$current() {
    var t1 = this.__js_helper$_current;
    return t1 == null ? type$.RegExpMatch._as(t1) : t1;
  },
  moveNext$0() {
    var t1, t2, t3, match, nextIndex, _this = this,
      string = _this.__js_helper$_string;
    if (string == null)
      return false;
    t1 = _this._nextIndex;
    t2 = string.length;
    if (t1 <= t2) {
      t3 = _this._regExp;
      match = t3._execGlobal$2(string, t1);
      if (match != null) {
        _this.__js_helper$_current = match;
        nextIndex = match.get$end();
        if (match._match.index === nextIndex) {
          if (t3._nativeRegExp.unicode) {
            t1 = _this._nextIndex;
            t3 = t1 + 1;
            if (t3 < t2) {
              t1 = B.JSString_methods.codeUnitAt$1(string, t1);
              if (t1 >= 55296 && t1 <= 56319) {
                t1 = B.JSString_methods.codeUnitAt$1(string, t3);
                t1 = t1 >= 56320 && t1 <= 57343;
              } else
                t1 = false;
            } else
              t1 = false;
          } else
            t1 = false;
          nextIndex = (t1 ? nextIndex + 1 : nextIndex) + 1;
        }
        _this._nextIndex = nextIndex;
        return true;
      }
    }
    _this.__js_helper$_string = _this.__js_helper$_current = null;
    return false;
  },
  $isIterator: 1
};
A.NativeTypedData.prototype = {};
A.NativeByteData.prototype = {
  _getFloat32$2(receiver, byteOffset, littleEndian) {
    return receiver.getFloat32(byteOffset, littleEndian);
  },
  _getFloat64$2(receiver, byteOffset, littleEndian) {
    return receiver.getFloat64(byteOffset, littleEndian);
  },
  _getInt32$2(receiver, byteOffset, littleEndian) {
    return receiver.getInt32(byteOffset, littleEndian);
  },
  _getUint32$2(receiver, byteOffset, littleEndian) {
    return receiver.getUint32(byteOffset, littleEndian);
  }
};
A.NativeTypedArray.prototype = {
  get$length(receiver) {
    return receiver.length;
  },
  $isJSIndexable: 1,
  $isJavaScriptIndexingBehavior: 1
};
A.NativeTypedArrayOfDouble.prototype = {
  $index(receiver, index) {
    A._checkValidIndex(index, receiver, receiver.length);
    return receiver[index];
  },
  $indexSet(receiver, index, value) {
    A._asDouble(value);
    A._checkValidIndex(index, receiver, receiver.length);
    receiver[index] = value;
  },
  $isEfficientLengthIterable: 1,
  $isIterable: 1,
  $isList: 1
};
A.NativeTypedArrayOfInt.prototype = {
  $indexSet(receiver, index, value) {
    A._asInt(value);
    A._checkValidIndex(index, receiver, receiver.length);
    receiver[index] = value;
  },
  $isEfficientLengthIterable: 1,
  $isIterable: 1,
  $isList: 1
};
A.NativeFloat32List.prototype = {$isFloat32List: 1};
A.NativeUint8List.prototype = {
  get$length(receiver) {
    return receiver.length;
  },
  $index(receiver, index) {
    A._checkValidIndex(index, receiver, receiver.length);
    return receiver[index];
  },
  sublist$2(receiver, start, end) {
    return new Uint8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
  },
  $isUint8List: 1
};
A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
A.Rti.prototype = {
  _eval$1(recipe) {
    return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
  },
  _bind$1(typeOrTuple) {
    return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
  }
};
A._FunctionParameters.prototype = {};
A._Type.prototype = {
  toString$0(_) {
    return A._rtiToString(this._rti, null);
  },
  $isType: 1
};
A._Error.prototype = {
  toString$0(_) {
    return this.__rti$_message;
  }
};
A._TypeError.prototype = {};
A._IterationMarker.prototype = {
  toString$0(_) {
    return "IterationMarker(" + this.state + ", " + A.S(this.value) + ")";
  },
  get$value() {
    return this.value;
  }
};
A._SyncStarIterator.prototype = {
  get$current() {
    var t1,
      nested = this._nestedIterator;
    if (nested == null) {
      t1 = this._async$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    }
    return nested.get$current();
  },
  moveNext$0() {
    var t1, t2, value, state, suspendedBodies, inner, _this = this;
    for (t1 = _this.$ti._eval$1("Iterator<1>"); true;) {
      t2 = _this._nestedIterator;
      if (t2 != null)
        if (t2.moveNext$0())
          return true;
        else
          _this.set$_nestedIterator(null);
      value = function(body, SUCCESS, ERROR) {
        var errorValue,
          errorCode = SUCCESS;
        while (true)
          try {
            return body(errorCode, errorValue);
          } catch (error) {
            errorValue = error;
            errorCode = ERROR;
          }
      }(_this._body, 0, 1);
      if (value instanceof A._IterationMarker) {
        state = value.state;
        if (state === 2) {
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this.set$_async$_current(null);
            return false;
          }
          if (0 >= suspendedBodies.length)
            return A.ioore(suspendedBodies, -1);
          _this._body = suspendedBodies.pop();
          continue;
        } else {
          t2 = value.value;
          if (state === 3)
            throw t2;
          else {
            inner = t1._as(J.get$iterator$ax(t2));
            if (inner instanceof A._SyncStarIterator) {
              t2 = _this._suspendedBodies;
              if (t2 == null)
                t2 = _this._suspendedBodies = [];
              B.JSArray_methods.add$1(t2, _this._body);
              _this._body = inner._body;
              continue;
            } else {
              _this.set$_nestedIterator(inner);
              continue;
            }
          }
        }
      } else {
        _this.set$_async$_current(value);
        return true;
      }
    }
    return false;
  },
  set$_async$_current(_current) {
    this._async$_current = this.$ti._eval$1("1?")._as(_current);
  },
  set$_nestedIterator(_nestedIterator) {
    this._nestedIterator = this.$ti._eval$1("Iterator<1>?")._as(_nestedIterator);
  },
  $isIterator: 1
};
A._SyncStarIterable.prototype = {
  get$iterator(_) {
    return new A._SyncStarIterator(this._outerHelper(), this.$ti._eval$1("_SyncStarIterator<1>"));
  }
};
A.StreamTransformerBase.prototype = {};
A._LinkedCustomHashMap.prototype = {
  $index(_, key) {
    if (!A.boolConversionCheck(this._validKey.call$1(key)))
      return null;
    return this.super$JsLinkedHashMap$internalGet(key);
  },
  $indexSet(_, key, value) {
    var t1 = this.$ti;
    this.super$JsLinkedHashMap$internalSet(t1._precomputed1._as(key), t1._rest[1]._as(value));
  },
  containsKey$1(key) {
    if (!A.boolConversionCheck(this._validKey.call$1(key)))
      return false;
    return this.super$JsLinkedHashMap$internalContainsKey(key);
  },
  remove$1(_, key) {
    if (!A.boolConversionCheck(this._validKey.call$1(key)))
      return null;
    return this.super$JsLinkedHashMap$internalRemove(key);
  },
  internalComputeHashCode$1(key) {
    return this._hashCode.call$1(this.$ti._precomputed1._as(key)) & 1073741823;
  },
  internalFindBucketIndex$2(bucket, key) {
    var $length, t1, t2, i;
    if (bucket == null)
      return -1;
    $length = bucket.length;
    for (t1 = this.$ti._precomputed1, t2 = this._equals, i = 0; i < $length; ++i)
      if (A.boolConversionCheck(t2.call$2(t1._as(bucket[i].hashMapCellKey), t1._as(key))))
        return i;
    return -1;
  }
};
A._LinkedCustomHashMap_closure.prototype = {
  call$1(v) {
    return this.K._is(v);
  },
  $signature: 10
};
A.IterableBase.prototype = {};
A.ListBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isList: 1};
A.ListMixin.prototype = {
  get$iterator(receiver) {
    return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListMixin.E>"));
  },
  elementAt$1(receiver, index) {
    return this.$index(receiver, index);
  },
  forEach$1(receiver, action) {
    var $length, i;
    A.instanceType(receiver)._eval$1("~(ListMixin.E)")._as(action);
    $length = this.get$length(receiver);
    for (i = 0; i < $length; ++i) {
      action.call$1(this.$index(receiver, i));
      if ($length !== this.get$length(receiver))
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
    }
  },
  get$isEmpty(receiver) {
    return this.get$length(receiver) === 0;
  },
  get$isNotEmpty(receiver) {
    return !this.get$isEmpty(receiver);
  },
  map$1$1(receiver, f, $T) {
    var t1 = A.instanceType(receiver);
    return new A.MappedListIterable(receiver, t1._bind$1($T)._eval$1("1(ListMixin.E)")._as(f), t1._eval$1("@<ListMixin.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
  },
  map$1($receiver, f) {
    return this.map$1$1($receiver, f, type$.dynamic);
  },
  fold$1$2(receiver, initialValue, combine, $T) {
    var $length, value, i;
    $T._as(initialValue);
    A.instanceType(receiver)._bind$1($T)._eval$1("1(1,ListMixin.E)")._as(combine);
    $length = this.get$length(receiver);
    for (value = initialValue, i = 0; i < $length; ++i) {
      value = combine.call$2(value, this.$index(receiver, i));
      if ($length !== this.get$length(receiver))
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
    }
    return value;
  },
  add$1(receiver, element) {
    var t1;
    A.instanceType(receiver)._eval$1("ListMixin.E")._as(element);
    t1 = this.get$length(receiver);
    this.set$length(receiver, t1 + 1);
    this.$indexSet(receiver, t1, element);
  },
  addAll$1(receiver, iterable) {
    var i, t1, t2, element;
    A.instanceType(receiver)._eval$1("Iterable<ListMixin.E>")._as(iterable);
    i = this.get$length(receiver);
    for (t1 = iterable._wrappedList, t2 = A._arrayInstanceType(t1), t1 = new J.ArrayIterator(t1, t1.length, t2._eval$1("ArrayIterator<1>")), t2 = t2._precomputed1; t1.moveNext$0();) {
      element = t1._current;
      this.add$1(receiver, element == null ? t2._as(element) : element);
      ++i;
    }
  },
  toString$0(receiver) {
    return A.IterableBase_iterableToFullString(receiver, "[", "]");
  }
};
A.MapBase.prototype = {};
A.MapBase_mapToString_closure.prototype = {
  call$2(k, v) {
    var t2,
      t1 = this._box_0;
    if (!t1.first)
      this.result._contents += ", ";
    t1.first = false;
    t1 = this.result;
    t2 = t1._contents += A.S(k);
    t1._contents = t2 + ": ";
    t1._contents += A.S(v);
  },
  $signature: 12
};
A.MapMixin.prototype = {
  forEach$1(_, action) {
    var t2, key, t3,
      t1 = A._instanceType(this);
    t1._eval$1("~(MapMixin.K,MapMixin.V)")._as(action);
    for (t2 = this.get$keys(), t2 = t2.get$iterator(t2), t1 = t1._eval$1("MapMixin.V"); t2.moveNext$0();) {
      key = t2.get$current();
      t3 = this.$index(0, key);
      action.call$2(key, t3 == null ? t1._as(t3) : t3);
    }
  },
  get$entries() {
    return this.get$keys().map$1$1(0, new A.MapMixin_entries_closure(this), A._instanceType(this)._eval$1("MapEntry<MapMixin.K,MapMixin.V>"));
  },
  map$2$1(_, transform, K2, V2) {
    var result, t2, key, t3, entry,
      t1 = A._instanceType(this);
    t1._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(MapMixin.K,MapMixin.V)")._as(transform);
    result = A.LinkedHashMap_LinkedHashMap$_empty(K2, V2);
    for (t2 = this.get$keys(), t2 = t2.get$iterator(t2), t1 = t1._eval$1("MapMixin.V"); t2.moveNext$0();) {
      key = t2.get$current();
      t3 = this.$index(0, key);
      entry = transform.call$2(key, t3 == null ? t1._as(t3) : t3);
      result.$indexSet(0, entry.key, entry.value);
    }
    return result;
  },
  map$1($receiver, transform) {
    return this.map$2$1($receiver, transform, type$.dynamic, type$.dynamic);
  },
  containsKey$1(key) {
    return this.get$keys().contains$1(0, key);
  },
  get$length(_) {
    var t1 = this.get$keys();
    return t1.get$length(t1);
  },
  get$isEmpty(_) {
    var t1 = this.get$keys();
    return t1.get$isEmpty(t1);
  },
  toString$0(_) {
    return A.MapBase_mapToString(this);
  },
  $isMap: 1
};
A.MapMixin_entries_closure.prototype = {
  call$1(key) {
    var t1 = this.$this,
      t2 = A._instanceType(t1);
    t2._eval$1("MapMixin.K")._as(key);
    t1 = t1.$index(0, key);
    if (t1 == null)
      t1 = t2._eval$1("MapMixin.V")._as(t1);
    return new A.MapEntry(key, t1, t2._eval$1("@<MapMixin.K>")._bind$1(t2._eval$1("MapMixin.V"))._eval$1("MapEntry<1,2>"));
  },
  $signature() {
    return A._instanceType(this.$this)._eval$1("MapEntry<MapMixin.K,MapMixin.V>(MapMixin.K)");
  }
};
A._UnmodifiableMapMixin.prototype = {};
A.MapView.prototype = {
  $index(_, key) {
    return this._collection$_map.$index(0, key);
  },
  containsKey$1(key) {
    return this._collection$_map.containsKey$1(key);
  },
  forEach$1(_, action) {
    this._collection$_map.forEach$1(0, this.$ti._eval$1("~(1,2)")._as(action));
  },
  get$isEmpty(_) {
    return this._collection$_map.__js_helper$_length === 0;
  },
  get$length(_) {
    return this._collection$_map.__js_helper$_length;
  },
  get$keys() {
    var t1 = this._collection$_map;
    return new A.LinkedHashMapKeyIterable(t1, t1.$ti._eval$1("LinkedHashMapKeyIterable<1>"));
  },
  toString$0(_) {
    return A.MapBase_mapToString(this._collection$_map);
  },
  get$entries() {
    return this._collection$_map.get$entries();
  },
  map$2$1(_, transform, K2, V2) {
    return this._collection$_map.map$2$1(0, this.$ti._bind$1(K2)._bind$1(V2)._eval$1("MapEntry<1,2>(3,4)")._as(transform), K2, V2);
  },
  map$1($receiver, transform) {
    return this.map$2$1($receiver, transform, type$.dynamic, type$.dynamic);
  },
  $isMap: 1
};
A.UnmodifiableMapView.prototype = {};
A.SetMixin.prototype = {
  map$1$1(_, f, $T) {
    var t1 = A._instanceType(this);
    return new A.EfficientLengthMappedIterable(this, t1._bind$1($T)._eval$1("1(2)")._as(f), t1._eval$1("@<1>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
  },
  map$1($receiver, f) {
    return this.map$1$1($receiver, f, type$.dynamic);
  },
  toString$0(_) {
    return A.IterableBase_iterableToFullString(this, "{", "}");
  },
  forEach$1(_, f) {
    var t1;
    A._instanceType(this)._eval$1("~(1)")._as(f);
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      f.call$1(t1.get$current());
  },
  fold$1$2(_, initialValue, combine, $T) {
    var t1, value;
    $T._as(initialValue);
    A._instanceType(this)._bind$1($T)._eval$1("1(1,2)")._as(combine);
    for (t1 = this.get$iterator(this), value = initialValue; t1.moveNext$0();)
      value = combine.call$2(value, t1.get$current());
    return value;
  },
  join$1(_, separator) {
    var t1,
      iterator = this.get$iterator(this);
    if (!iterator.moveNext$0())
      return "";
    if (separator === "") {
      t1 = "";
      do
        t1 += A.S(iterator.get$current());
      while (iterator.moveNext$0());
    } else {
      t1 = "" + A.S(iterator.get$current());
      for (; iterator.moveNext$0();)
        t1 = t1 + separator + A.S(iterator.get$current());
    }
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  }
};
A._SetBase.prototype = {$isEfficientLengthIterable: 1, $isIterable: 1, $isSet: 1};
A._UnmodifiableSetMixin.prototype = {};
A._UnmodifiableSet.prototype = {
  get$iterator(_) {
    var t1 = this._collection$_map.get$keys();
    return t1.get$iterator(t1);
  },
  get$length(_) {
    var t1 = this._collection$_map;
    return t1.get$length(t1);
  }
};
A._ListBase_Object_ListMixin.prototype = {};
A._UnmodifiableMapView_MapView__UnmodifiableMapMixin.prototype = {};
A.__SetBase_Object_SetMixin.prototype = {};
A.__UnmodifiableSet__SetBase__UnmodifiableSetMixin.prototype = {};
A.Utf8Decoder__decoder_closure.prototype = {
  call$0() {
    var t1, exception;
    try {
      t1 = new TextDecoder("utf-8", {fatal: true});
      return t1;
    } catch (exception) {
    }
    return null;
  },
  $signature: 5
};
A.Utf8Decoder__decoderNonfatal_closure.prototype = {
  call$0() {
    var t1, exception;
    try {
      t1 = new TextDecoder("utf-8", {fatal: false});
      return t1;
    } catch (exception) {
    }
    return null;
  },
  $signature: 5
};
A.Codec.prototype = {};
A.Converter.prototype = {};
A.Encoding.prototype = {};
A.JsonUnsupportedObjectError.prototype = {
  toString$0(_) {
    var safeString = A.Error_safeToString(this.unsupportedObject);
    return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
  }
};
A.JsonCyclicError.prototype = {
  toString$0(_) {
    return "Cyclic error in JSON stringify";
  }
};
A.JsonCodec.prototype = {
  encode$2$toEncodable(value, toEncodable) {
    var t1;
    type$.nullable_nullable_Object_Function_dynamic._as(toEncodable);
    t1 = A._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);
    return t1;
  },
  get$encoder() {
    return B.JsonEncoder_null;
  }
};
A.JsonEncoder.prototype = {};
A._JsonStringifier.prototype = {
  writeStringContent$1(s) {
    var t1, offset, i, charCode, t2, t3,
      $length = s.length;
    for (t1 = this._sink, offset = 0, i = 0; i < $length; ++i) {
      charCode = B.JSString_methods._codeUnitAt$1(s, i);
      if (charCode > 92) {
        if (charCode >= 55296) {
          t2 = charCode & 64512;
          if (t2 === 55296) {
            t3 = i + 1;
            t3 = !(t3 < $length && (B.JSString_methods._codeUnitAt$1(s, t3) & 64512) === 56320);
          } else
            t3 = false;
          if (!t3)
            if (t2 === 56320) {
              t2 = i - 1;
              t2 = !(t2 >= 0 && (B.JSString_methods.codeUnitAt$1(s, t2) & 64512) === 55296);
            } else
              t2 = false;
          else
            t2 = true;
          if (t2) {
            if (i > offset)
              t1._contents += B.JSString_methods.substring$2(s, offset, i);
            offset = i + 1;
            t2 = t1._contents += A.Primitives_stringFromCharCode(92);
            t2 += A.Primitives_stringFromCharCode(117);
            t1._contents = t2;
            t2 += A.Primitives_stringFromCharCode(100);
            t1._contents = t2;
            t3 = charCode >>> 8 & 15;
            t2 += A.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
            t1._contents = t2;
            t3 = charCode >>> 4 & 15;
            t2 += A.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
            t1._contents = t2;
            t3 = charCode & 15;
            t1._contents = t2 + A.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
          }
        }
        continue;
      }
      if (charCode < 32) {
        if (i > offset)
          t1._contents += B.JSString_methods.substring$2(s, offset, i);
        offset = i + 1;
        t2 = t1._contents += A.Primitives_stringFromCharCode(92);
        switch (charCode) {
          case 8:
            t1._contents = t2 + A.Primitives_stringFromCharCode(98);
            break;
          case 9:
            t1._contents = t2 + A.Primitives_stringFromCharCode(116);
            break;
          case 10:
            t1._contents = t2 + A.Primitives_stringFromCharCode(110);
            break;
          case 12:
            t1._contents = t2 + A.Primitives_stringFromCharCode(102);
            break;
          case 13:
            t1._contents = t2 + A.Primitives_stringFromCharCode(114);
            break;
          default:
            t2 += A.Primitives_stringFromCharCode(117);
            t1._contents = t2;
            t2 += A.Primitives_stringFromCharCode(48);
            t1._contents = t2;
            t2 += A.Primitives_stringFromCharCode(48);
            t1._contents = t2;
            t3 = charCode >>> 4 & 15;
            t2 += A.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
            t1._contents = t2;
            t3 = charCode & 15;
            t1._contents = t2 + A.Primitives_stringFromCharCode(t3 < 10 ? 48 + t3 : 87 + t3);
            break;
        }
      } else if (charCode === 34 || charCode === 92) {
        if (i > offset)
          t1._contents += B.JSString_methods.substring$2(s, offset, i);
        offset = i + 1;
        t2 = t1._contents += A.Primitives_stringFromCharCode(92);
        t1._contents = t2 + A.Primitives_stringFromCharCode(charCode);
      }
    }
    if (offset === 0)
      t1._contents += s;
    else if (offset < $length)
      t1._contents += B.JSString_methods.substring$2(s, offset, $length);
  },
  _checkCycle$1(object) {
    var t1, t2, i, t3;
    for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
      t3 = t1[i];
      if (object == null ? t3 == null : object === t3)
        throw A.wrapException(new A.JsonCyclicError(object, null));
    }
    B.JSArray_methods.add$1(t1, object);
  },
  writeObject$1(object) {
    var customJson, e, t1, exception, _this = this;
    if (_this.writeJsonValue$1(object))
      return;
    _this._checkCycle$1(object);
    try {
      customJson = _this._toEncodable.call$1(object);
      if (!_this.writeJsonValue$1(customJson)) {
        t1 = A.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
        throw A.wrapException(t1);
      }
      t1 = _this._seen;
      if (0 >= t1.length)
        return A.ioore(t1, -1);
      t1.pop();
    } catch (exception) {
      e = A.unwrapException(exception);
      t1 = A.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
      throw A.wrapException(t1);
    }
  },
  writeJsonValue$1(object) {
    var t1, success, _this = this;
    if (typeof object == "number") {
      if (!isFinite(object))
        return false;
      _this._sink._contents += B.JSNumber_methods.toString$0(object);
      return true;
    } else if (object === true) {
      _this._sink._contents += "true";
      return true;
    } else if (object === false) {
      _this._sink._contents += "false";
      return true;
    } else if (object == null) {
      _this._sink._contents += "null";
      return true;
    } else if (typeof object == "string") {
      t1 = _this._sink;
      t1._contents += '"';
      _this.writeStringContent$1(object);
      t1._contents += '"';
      return true;
    } else if (type$.List_dynamic._is(object)) {
      _this._checkCycle$1(object);
      _this.writeList$1(object);
      t1 = _this._seen;
      if (0 >= t1.length)
        return A.ioore(t1, -1);
      t1.pop();
      return true;
    } else if (type$.Map_dynamic_dynamic._is(object)) {
      _this._checkCycle$1(object);
      success = _this.writeMap$1(object);
      t1 = _this._seen;
      if (0 >= t1.length)
        return A.ioore(t1, -1);
      t1.pop();
      return success;
    } else
      return false;
  },
  writeList$1(list) {
    var t2, i,
      t1 = this._sink;
    t1._contents += "[";
    t2 = J.getInterceptor$asx(list);
    if (t2.get$isNotEmpty(list)) {
      this.writeObject$1(t2.$index(list, 0));
      for (i = 1; i < t2.get$length(list); ++i) {
        t1._contents += ",";
        this.writeObject$1(t2.$index(list, i));
      }
    }
    t1._contents += "]";
  },
  writeMap$1(map) {
    var t1, keyValueList, i, t2, separator, t3, _this = this, _box_0 = {};
    if (map.get$isEmpty(map)) {
      _this._sink._contents += "{}";
      return true;
    }
    t1 = map.get$length(map) * 2;
    keyValueList = A.List_List$filled(t1, null, false, type$.nullable_Object);
    i = _box_0.i = 0;
    _box_0.allStringKeys = true;
    map.forEach$1(0, new A._JsonStringifier_writeMap_closure(_box_0, keyValueList));
    if (!_box_0.allStringKeys)
      return false;
    t2 = _this._sink;
    t2._contents += "{";
    for (separator = '"'; i < t1; i += 2, separator = ',"') {
      t2._contents += separator;
      _this.writeStringContent$1(A._asString(keyValueList[i]));
      t2._contents += '":';
      t3 = i + 1;
      if (!(t3 < t1))
        return A.ioore(keyValueList, t3);
      _this.writeObject$1(keyValueList[t3]);
    }
    t2._contents += "}";
    return true;
  }
};
A._JsonStringifier_writeMap_closure.prototype = {
  call$2(key, value) {
    var t1, t2;
    if (typeof key != "string")
      this._box_0.allStringKeys = false;
    t1 = this.keyValueList;
    t2 = this._box_0;
    B.JSArray_methods.$indexSet(t1, t2.i++, key);
    B.JSArray_methods.$indexSet(t1, t2.i++, value);
  },
  $signature: 12
};
A._JsonStringStringifier.prototype = {
  get$_partialResult() {
    var t1 = this._sink._contents;
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  }
};
A.Utf8Codec.prototype = {
  get$encoder() {
    return B.C_Utf8Encoder;
  }
};
A.Utf8Encoder.prototype = {
  convert$1(string) {
    var t1, encoder,
      end = A.RangeError_checkValidRange(0, null, string.length),
      $length = end - 0;
    if ($length === 0)
      return new Uint8Array(0);
    t1 = new Uint8Array($length * 3);
    encoder = new A._Utf8Encoder(t1);
    if (encoder._fillBuffer$3(string, 0, end) !== end) {
      B.JSString_methods.codeUnitAt$1(string, end - 1);
      encoder._writeReplacementCharacter$0();
    }
    return B.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
  }
};
A._Utf8Encoder.prototype = {
  _writeReplacementCharacter$0() {
    var _this = this,
      t1 = _this._buffer,
      t2 = _this._bufferIndex,
      t3 = _this._bufferIndex = t2 + 1,
      t4 = t1.length;
    if (!(t2 < t4))
      return A.ioore(t1, t2);
    t1[t2] = 239;
    t2 = _this._bufferIndex = t3 + 1;
    if (!(t3 < t4))
      return A.ioore(t1, t3);
    t1[t3] = 191;
    _this._bufferIndex = t2 + 1;
    if (!(t2 < t4))
      return A.ioore(t1, t2);
    t1[t2] = 189;
  },
  _writeSurrogate$2(leadingSurrogate, nextCodeUnit) {
    var rune, t1, t2, t3, t4, _this = this;
    if ((nextCodeUnit & 64512) === 56320) {
      rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
      t1 = _this._buffer;
      t2 = _this._bufferIndex;
      t3 = _this._bufferIndex = t2 + 1;
      t4 = t1.length;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = rune >>> 18 | 240;
      t2 = _this._bufferIndex = t3 + 1;
      if (!(t3 < t4))
        return A.ioore(t1, t3);
      t1[t3] = rune >>> 12 & 63 | 128;
      t3 = _this._bufferIndex = t2 + 1;
      if (!(t2 < t4))
        return A.ioore(t1, t2);
      t1[t2] = rune >>> 6 & 63 | 128;
      _this._bufferIndex = t3 + 1;
      if (!(t3 < t4))
        return A.ioore(t1, t3);
      t1[t3] = rune & 63 | 128;
      return true;
    } else {
      _this._writeReplacementCharacter$0();
      return false;
    }
  },
  _fillBuffer$3(str, start, end) {
    var t1, t2, stringIndex, codeUnit, t3, stringIndex0, t4, _this = this;
    if (start !== end && (B.JSString_methods.codeUnitAt$1(str, end - 1) & 64512) === 55296)
      --end;
    for (t1 = _this._buffer, t2 = t1.length, stringIndex = start; stringIndex < end; ++stringIndex) {
      codeUnit = B.JSString_methods._codeUnitAt$1(str, stringIndex);
      if (codeUnit <= 127) {
        t3 = _this._bufferIndex;
        if (t3 >= t2)
          break;
        _this._bufferIndex = t3 + 1;
        t1[t3] = codeUnit;
      } else {
        t3 = codeUnit & 64512;
        if (t3 === 55296) {
          if (_this._bufferIndex + 4 > t2)
            break;
          stringIndex0 = stringIndex + 1;
          if (_this._writeSurrogate$2(codeUnit, B.JSString_methods._codeUnitAt$1(str, stringIndex0)))
            stringIndex = stringIndex0;
        } else if (t3 === 56320) {
          if (_this._bufferIndex + 3 > t2)
            break;
          _this._writeReplacementCharacter$0();
        } else if (codeUnit <= 2047) {
          t3 = _this._bufferIndex;
          t4 = t3 + 1;
          if (t4 >= t2)
            break;
          _this._bufferIndex = t4;
          if (!(t3 < t2))
            return A.ioore(t1, t3);
          t1[t3] = codeUnit >>> 6 | 192;
          _this._bufferIndex = t4 + 1;
          t1[t4] = codeUnit & 63 | 128;
        } else {
          t3 = _this._bufferIndex;
          if (t3 + 2 >= t2)
            break;
          t4 = _this._bufferIndex = t3 + 1;
          if (!(t3 < t2))
            return A.ioore(t1, t3);
          t1[t3] = codeUnit >>> 12 | 224;
          t3 = _this._bufferIndex = t4 + 1;
          if (!(t4 < t2))
            return A.ioore(t1, t4);
          t1[t4] = codeUnit >>> 6 & 63 | 128;
          _this._bufferIndex = t3 + 1;
          if (!(t3 < t2))
            return A.ioore(t1, t3);
          t1[t3] = codeUnit & 63 | 128;
        }
      }
    }
    return stringIndex;
  }
};
A.Utf8Decoder.prototype = {
  convert$1(codeUnits) {
    var t1, result;
    type$.List_int._as(codeUnits);
    t1 = this._allowMalformed;
    result = A.Utf8Decoder__convertIntercepted(t1, codeUnits, 0, null);
    if (result != null)
      return result;
    return new A._Utf8Decoder(t1).convertGeneral$4(codeUnits, 0, null, true);
  }
};
A._Utf8Decoder.prototype = {
  convertGeneral$4(codeUnits, start, maybeEnd, single) {
    var end, result, t1, message, _this = this;
    type$.List_int._as(codeUnits);
    end = A.RangeError_checkValidRange(start, maybeEnd, codeUnits.length);
    if (start === end)
      return "";
    result = _this._convertRecursive$4(codeUnits, start, end, true);
    t1 = _this._state;
    if ((t1 & 1) !== 0) {
      message = A._Utf8Decoder_errorDescription(t1);
      _this._state = 0;
      throw A.wrapException(A.FormatException$(message, codeUnits, _this._charOrIndex));
    }
    return result;
  },
  _convertRecursive$4(bytes, start, end, single) {
    var mid, s1, _this = this;
    if (end - start > 1000) {
      mid = B.JSInt_methods._tdivFast$1(start + end, 2);
      s1 = _this._convertRecursive$4(bytes, start, mid, false);
      if ((_this._state & 1) !== 0)
        return s1;
      return s1 + _this._convertRecursive$4(bytes, mid, end, single);
    }
    return _this.decodeGeneral$4(bytes, start, end, single);
  },
  decodeGeneral$4(bytes, start, end, single) {
    var byte, t2, type, t3, i0, markEnd, i1, m, _this = this, _65533 = 65533,
      state = _this._state,
      char = _this._charOrIndex,
      buffer = new A.StringBuffer(""),
      i = start + 1,
      t1 = bytes.length;
    if (!(start >= 0 && start < t1))
      return A.ioore(bytes, start);
    byte = bytes[start];
    $label0$0:
      for (t2 = _this.allowMalformed; true;) {
        for (; true; i = i0) {
          type = B.JSString_methods._codeUnitAt$1("AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE", byte) & 31;
          char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;
          state = B.JSString_methods._codeUnitAt$1(" \x000:XECCCCCN:lDb \x000:XECCCCCNvlDb \x000:XECCCCCN:lDb AAAAA\x00\x00\x00\x00\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\x800AAAAA\x00\x00\x00\x00 AAAAA", state + type);
          if (state === 0) {
            buffer._contents += A.Primitives_stringFromCharCode(char);
            if (i === end)
              break $label0$0;
            break;
          } else if ((state & 1) !== 0) {
            if (t2)
              switch (state) {
                case 69:
                case 67:
                  buffer._contents += A.Primitives_stringFromCharCode(_65533);
                  break;
                case 65:
                  buffer._contents += A.Primitives_stringFromCharCode(_65533);
                  --i;
                  break;
                default:
                  t3 = buffer._contents += A.Primitives_stringFromCharCode(_65533);
                  buffer._contents = t3 + A.Primitives_stringFromCharCode(_65533);
                  break;
              }
            else {
              _this._state = state;
              _this._charOrIndex = i - 1;
              return "";
            }
            state = 0;
          }
          if (i === end)
            break $label0$0;
          i0 = i + 1;
          if (!(i >= 0 && i < t1))
            return A.ioore(bytes, i);
          byte = bytes[i];
        }
        i0 = i + 1;
        if (!(i >= 0 && i < t1))
          return A.ioore(bytes, i);
        byte = bytes[i];
        if (byte < 128) {
          while (true) {
            if (!(i0 < end)) {
              markEnd = end;
              break;
            }
            i1 = i0 + 1;
            if (!(i0 >= 0 && i0 < t1))
              return A.ioore(bytes, i0);
            byte = bytes[i0];
            if (byte >= 128) {
              markEnd = i1 - 1;
              i0 = i1;
              break;
            }
            i0 = i1;
          }
          if (markEnd - i < 20)
            for (m = i; m < markEnd; ++m) {
              if (!(m < t1))
                return A.ioore(bytes, m);
              buffer._contents += A.Primitives_stringFromCharCode(bytes[m]);
            }
          else
            buffer._contents += A.String_String$fromCharCodes(bytes, i, markEnd);
          if (markEnd === end)
            break $label0$0;
          i = i0;
        } else
          i = i0;
      }
    if (single && state > 32)
      if (t2)
        buffer._contents += A.Primitives_stringFromCharCode(_65533);
      else {
        _this._state = 77;
        _this._charOrIndex = end;
        return "";
      }
    _this._state = state;
    _this._charOrIndex = char;
    t1 = buffer._contents;
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  }
};
A.NoSuchMethodError_toString_closure.prototype = {
  call$2(key, value) {
    var t1, t2, t3;
    type$.Symbol._as(key);
    t1 = this.sb;
    t2 = this._box_0;
    t3 = t1._contents += t2.comma;
    t3 += key.__internal$_name;
    t1._contents = t3;
    t1._contents = t3 + ": ";
    t1._contents += A.Error_safeToString(value);
    t2.comma = ", ";
  },
  $signature: 20
};
A.DateTime.prototype = {
  $eq(_, other) {
    if (other == null)
      return false;
    return other instanceof A.DateTime && this._value === other._value && true;
  },
  compareTo$1(_, other) {
    return B.JSInt_methods.compareTo$1(this._value, type$.DateTime._as(other)._value);
  },
  get$hashCode(_) {
    var t1 = this._value;
    return (t1 ^ B.JSInt_methods._shrOtherPositive$1(t1, 30)) & 1073741823;
  },
  toString$0(_) {
    var _this = this,
      y = A.DateTime__fourDigits(A.Primitives_getYear(_this)),
      m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
      d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
      h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
      min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
      sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
      ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this));
    return y + "-" + m + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + "Z";
  },
  $isComparable: 1
};
A._Enum.prototype = {};
A.Error.prototype = {};
A.AssertionError.prototype = {
  toString$0(_) {
    var t1 = this.message;
    if (t1 != null)
      return "Assertion failed: " + A.Error_safeToString(t1);
    return "Assertion failed";
  }
};
A.TypeError.prototype = {};
A.NullThrownError.prototype = {
  toString$0(_) {
    return "Throw of null.";
  }
};
A.ArgumentError.prototype = {
  get$_errorName() {
    return "Invalid argument" + (!this._hasValue ? "(s)" : "");
  },
  get$_errorExplanation() {
    return "";
  },
  toString$0(_) {
    var _this = this,
      $name = _this.name,
      nameString = $name == null ? "" : " (" + $name + ")",
      message = _this.message,
      messageString = message == null ? "" : ": " + A.S(message),
      prefix = _this.get$_errorName() + nameString + messageString;
    if (!_this._hasValue)
      return prefix;
    return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.invalidValue);
  }
};
A.RangeError.prototype = {
  get$_errorName() {
    return "RangeError";
  },
  get$_errorExplanation() {
    var explanation,
      start = this.start,
      end = this.end;
    if (start == null)
      explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
    else if (end == null)
      explanation = ": Not greater than or equal to " + A.S(start);
    else if (end > start)
      explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
    else
      explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
    return explanation;
  }
};
A.IndexError.prototype = {
  get$_errorName() {
    return "RangeError";
  },
  get$_errorExplanation() {
    if (A._asInt(this.invalidValue) < 0)
      return ": index must not be negative";
    var t1 = this.length;
    if (t1 === 0)
      return ": no indices are valid";
    return ": index should be less than " + t1;
  },
  get$length(receiver) {
    return this.length;
  }
};
A.NoSuchMethodError.prototype = {
  toString$0(_) {
    var $arguments, t1, _i, t2, t3, argument, receiverText, actualParameters, _this = this, _box_0 = {},
      sb = new A.StringBuffer("");
    _box_0.comma = "";
    $arguments = _this._core$_arguments;
    for (t1 = $arguments.length, _i = 0, t2 = "", t3 = ""; _i < t1; ++_i, t3 = ", ") {
      argument = $arguments[_i];
      sb._contents = t2 + t3;
      t2 = sb._contents += A.Error_safeToString(argument);
      _box_0.comma = ", ";
    }
    _this._namedArguments.forEach$1(0, new A.NoSuchMethodError_toString_closure(_box_0, sb));
    receiverText = A.Error_safeToString(_this._core$_receiver);
    actualParameters = sb.toString$0(0);
    return "NoSuchMethodError: method not found: '" + _this._core$_memberName.__internal$_name + "'\nReceiver: " + receiverText + "\nArguments: [" + actualParameters + "]";
  }
};
A.UnsupportedError.prototype = {
  toString$0(_) {
    return "Unsupported operation: " + this.message;
  }
};
A.UnimplementedError.prototype = {
  toString$0(_) {
    return "UnimplementedError: " + this.message;
  }
};
A.StateError.prototype = {
  toString$0(_) {
    return "Bad state: " + this.message;
  }
};
A.ConcurrentModificationError.prototype = {
  toString$0(_) {
    var t1 = this.modifiedObject;
    if (t1 == null)
      return "Concurrent modification during iteration.";
    return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
  }
};
A.OutOfMemoryError.prototype = {
  toString$0(_) {
    return "Out of Memory";
  },
  $isError: 1
};
A.StackOverflowError.prototype = {
  toString$0(_) {
    return "Stack Overflow";
  },
  $isError: 1
};
A.CyclicInitializationError.prototype = {
  toString$0(_) {
    return "Reading static variable '" + this.variableName + "' during its initialization";
  }
};
A.FormatException.prototype = {
  toString$0(_) {
    var t1, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, end, start, prefix, postfix,
      message = this.message,
      report = "" !== message ? "FormatException: " + message : "FormatException",
      offset = this.offset,
      source = this.source;
    if (typeof source == "string") {
      if (offset != null)
        t1 = offset < 0 || offset > source.length;
      else
        t1 = false;
      if (t1)
        offset = null;
      if (offset == null) {
        if (source.length > 78)
          source = B.JSString_methods.substring$2(source, 0, 75) + "...";
        return report + "\n" + source;
      }
      for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
        char = B.JSString_methods._codeUnitAt$1(source, i);
        if (char === 10) {
          if (lineStart !== i || !previousCharWasCR)
            ++lineNum;
          lineStart = i + 1;
          previousCharWasCR = false;
        } else if (char === 13) {
          ++lineNum;
          lineStart = i + 1;
          previousCharWasCR = true;
        }
      }
      report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
      lineEnd = source.length;
      for (i = offset; i < lineEnd; ++i) {
        char = B.JSString_methods.codeUnitAt$1(source, i);
        if (char === 10 || char === 13) {
          lineEnd = i;
          break;
        }
      }
      if (lineEnd - lineStart > 78)
        if (offset - lineStart < 75) {
          end = lineStart + 75;
          start = lineStart;
          prefix = "";
          postfix = "...";
        } else {
          if (lineEnd - offset < 75) {
            start = lineEnd - 75;
            end = lineEnd;
            postfix = "";
          } else {
            start = offset - 36;
            end = offset + 36;
            postfix = "...";
          }
          prefix = "...";
        }
      else {
        end = lineEnd;
        start = lineStart;
        prefix = "";
        postfix = "";
      }
      return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
    } else
      return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
  }
};
A.Iterable.prototype = {
  map$1$1(_, toElement, $T) {
    var t1 = A._instanceType(this);
    return A.MappedIterable_MappedIterable(this, t1._bind$1($T)._eval$1("1(Iterable.E)")._as(toElement), t1._eval$1("Iterable.E"), $T);
  },
  map$1($receiver, toElement) {
    return this.map$1$1($receiver, toElement, type$.dynamic);
  },
  forEach$1(_, action) {
    var t1;
    A._instanceType(this)._eval$1("~(Iterable.E)")._as(action);
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      action.call$1(t1.get$current());
  },
  fold$1$2(_, initialValue, combine, $T) {
    var t1, value;
    $T._as(initialValue);
    A._instanceType(this)._bind$1($T)._eval$1("1(1,Iterable.E)")._as(combine);
    for (t1 = this.get$iterator(this), value = initialValue; t1.moveNext$0();)
      value = combine.call$2(value, t1.get$current());
    return value;
  },
  every$1(_, test) {
    var t1;
    A._instanceType(this)._eval$1("bool(Iterable.E)")._as(test);
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      if (!A.boolConversionCheck(test.call$1(t1.get$current())))
        return false;
    return true;
  },
  join$1(_, separator) {
    var t1,
      iterator = this.get$iterator(this);
    if (!iterator.moveNext$0())
      return "";
    if (separator === "") {
      t1 = "";
      do
        t1 += J.toString$0$(iterator.get$current());
      while (iterator.moveNext$0());
    } else {
      t1 = "" + J.toString$0$(iterator.get$current());
      for (; iterator.moveNext$0();)
        t1 = t1 + separator + J.toString$0$(iterator.get$current());
    }
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  },
  join$0($receiver) {
    return this.join$1($receiver, "");
  },
  any$1(_, test) {
    var t1;
    A._instanceType(this)._eval$1("bool(Iterable.E)")._as(test);
    for (t1 = this.get$iterator(this); t1.moveNext$0();)
      if (A.boolConversionCheck(test.call$1(t1.get$current())))
        return true;
    return false;
  },
  get$length(_) {
    var count,
      it = this.get$iterator(this);
    for (count = 0; it.moveNext$0();)
      ++count;
    return count;
  },
  elementAt$1(_, index) {
    var t1, elementIndex, element;
    A.RangeError_checkNotNegative(index, "index");
    for (t1 = this.get$iterator(this), elementIndex = 0; t1.moveNext$0();) {
      element = t1.get$current();
      if (index === elementIndex)
        return element;
      ++elementIndex;
    }
    throw A.wrapException(A.IndexError$(index, this, "index", null, elementIndex));
  },
  toString$0(_) {
    return A.IterableBase_iterableToShortString(this, "(", ")");
  }
};
A.Iterator.prototype = {};
A.MapEntry.prototype = {
  toString$0(_) {
    return "MapEntry(" + A.S(this.key) + ": " + A.S(this.value) + ")";
  },
  get$value() {
    return this.value;
  }
};
A.Null.prototype = {
  get$hashCode(_) {
    return A.Object.prototype.get$hashCode.call(this, this);
  },
  toString$0(_) {
    return "null";
  }
};
A.Object.prototype = {$isObject: 1,
  $eq(_, other) {
    return this === other;
  },
  get$hashCode(_) {
    return A.Primitives_objectHashCode(this);
  },
  toString$0(_) {
    return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
  },
  noSuchMethod$1(_, invocation) {
    type$.Invocation._as(invocation);
    throw A.wrapException(A.NoSuchMethodError$(this, invocation.get$memberName(), invocation.get$positionalArguments(), invocation.get$namedArguments()));
  },
  toString() {
    return this.toString$0(this);
  }
};
A.Runes.prototype = {
  get$iterator(_) {
    return new A.RuneIterator(this.string);
  }
};
A.RuneIterator.prototype = {
  get$current() {
    return this._currentCodePoint;
  },
  moveNext$0() {
    var codeUnit, nextPosition, nextCodeUnit, _this = this,
      t1 = _this._position = _this._nextPosition,
      t2 = _this.string,
      t3 = t2.length;
    if (t1 === t3) {
      _this._currentCodePoint = -1;
      return false;
    }
    codeUnit = B.JSString_methods._codeUnitAt$1(t2, t1);
    nextPosition = t1 + 1;
    if ((codeUnit & 64512) === 55296 && nextPosition < t3) {
      nextCodeUnit = B.JSString_methods._codeUnitAt$1(t2, nextPosition);
      if ((nextCodeUnit & 64512) === 56320) {
        _this._nextPosition = nextPosition + 1;
        _this._currentCodePoint = A._combineSurrogatePair(codeUnit, nextCodeUnit);
        return true;
      }
    }
    _this._nextPosition = nextPosition;
    _this._currentCodePoint = codeUnit;
    return true;
  },
  $isIterator: 1
};
A.StringBuffer.prototype = {
  get$length(_) {
    return this._contents.length;
  },
  toString$0(_) {
    var t1 = this._contents;
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  },
  $isStringSink: 1
};
A.DomException.prototype = {
  toString$0(receiver) {
    return String(receiver);
  }
};
A._DelegatingIterableBase.prototype = {
  fold$1$2(_, initialValue, combine, $T) {
    return B.JSArray_methods.fold$1$2(this._base, $T._as(initialValue), this.$ti._bind$1($T)._eval$1("1(1,2)")._as(combine), $T);
  },
  forEach$1(_, f) {
    return B.JSArray_methods.forEach$1(this._base, this.$ti._eval$1("~(1)")._as(f));
  },
  get$isEmpty(_) {
    return this._base.length === 0;
  },
  get$isNotEmpty(_) {
    return this._base.length !== 0;
  },
  get$iterator(_) {
    var t1 = this._base;
    return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
  },
  get$length(_) {
    return this._base.length;
  },
  map$1$1(_, f, $T) {
    var t1 = this._base,
      t2 = A._arrayInstanceType(t1);
    return new A.MappedListIterable(t1, t2._bind$1($T)._eval$1("1(2)")._as(this.$ti._bind$1($T)._eval$1("1(2)")._as(f)), t2._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
  },
  map$1($receiver, f) {
    return this.map$1$1($receiver, f, type$.dynamic);
  },
  toString$0(_) {
    return A.IterableBase_iterableToFullString(this._base, "[", "]");
  },
  $isIterable: 1
};
A.DelegatingList.prototype = {
  $index(_, index) {
    var t1 = this._base;
    if (!(index >= 0 && index < t1.length))
      return A.ioore(t1, index);
    return t1[index];
  },
  add$1(_, value) {
    B.JSArray_methods.add$1(this._base, this.$ti._precomputed1._as(value));
  },
  addAll$1(_, iterable) {
    B.JSArray_methods.addAll$1(this._base, this.$ti._eval$1("Iterable<1>")._as(iterable));
  },
  get$reversed(_) {
    var t1 = this._base;
    return new A.ReversedListIterable(t1, A._arrayInstanceType(t1)._eval$1("ReversedListIterable<1>"));
  },
  $isEfficientLengthIterable: 1,
  $isList: 1
};
A.Int64.prototype = {
  $and(_, other) {
    var o = A.Int64__promote(other);
    return new A.Int64(this._l & o._l & 4194303, this._m & o._m & 4194303, this._h & o._h & 1048575);
  },
  $shr(_, n) {
    var a2, negative, res2, t1, t2, res1, res0, _this = this, _1048575 = 1048575, _4194303 = 4194303;
    if (n >= 64)
      return (_this._h & 524288) !== 0 ? B.Int64_4194303_4194303_1048575 : B.Int64_0_0_0;
    a2 = _this._h;
    negative = (a2 & 524288) !== 0;
    if (negative && true)
      a2 += 3145728;
    if (n < 22) {
      res2 = A.Int64__shiftRight(a2, n);
      if (negative)
        res2 |= ~B.JSInt_methods._shrBothPositive$1(_1048575, n) & 1048575;
      t1 = _this._m;
      t2 = 22 - n;
      res1 = A.Int64__shiftRight(t1, n) | B.JSInt_methods.$shl(a2, t2);
      res0 = A.Int64__shiftRight(_this._l, n) | B.JSInt_methods.$shl(t1, t2);
    } else if (n < 44) {
      res2 = negative ? _1048575 : 0;
      t1 = n - 22;
      res1 = A.Int64__shiftRight(a2, t1);
      if (negative)
        res1 |= ~B.JSInt_methods._shrReceiverPositive$1(_4194303, t1) & 4194303;
      res0 = A.Int64__shiftRight(_this._m, t1) | B.JSInt_methods.$shl(a2, 44 - n);
    } else {
      res2 = negative ? _1048575 : 0;
      res1 = negative ? _4194303 : 0;
      t1 = n - 44;
      res0 = A.Int64__shiftRight(a2, t1);
      if (negative)
        res0 |= ~B.JSInt_methods._shrReceiverPositive$1(_4194303, t1) & 4194303;
    }
    return new A.Int64(res0 & 4194303, res1 & 4194303, res2 & 1048575);
  },
  $eq(_, other) {
    var o, _this = this;
    if (other == null)
      return false;
    if (other instanceof A.Int64)
      o = other;
    else if (A._isInt(other)) {
      if (_this._h === 0 && _this._m === 0)
        return _this._l === other;
      if ((other & 4194303) === other)
        return false;
      o = A.Int64_Int64(other);
    } else
      o = null;
    if (o != null)
      return _this._l === o._l && _this._m === o._m && _this._h === o._h;
    return false;
  },
  compareTo$1(_, other) {
    return this._compareTo$1(other);
  },
  _compareTo$1(other) {
    var o = A.Int64__promote(other),
      t1 = this._h,
      signa = t1 >>> 19,
      t2 = o._h;
    if (signa !== t2 >>> 19)
      return signa === 0 ? 1 : -1;
    if (t1 > t2)
      return 1;
    else if (t1 < t2)
      return -1;
    t1 = this._m;
    t2 = o._m;
    if (t1 > t2)
      return 1;
    else if (t1 < t2)
      return -1;
    t1 = this._l;
    t2 = o._l;
    if (t1 > t2)
      return 1;
    else if (t1 < t2)
      return -1;
    return 0;
  },
  get$hashCode(_) {
    var t1 = this._m;
    return (((t1 & 1023) << 22 | this._l) ^ (this._h << 12 | t1 >>> 10 & 4095)) >>> 0;
  },
  toString$0(_) {
    var d00, d10, sign,
      d0 = this._l,
      d1 = this._m,
      d2 = this._h;
    if ((d2 & 524288) !== 0) {
      d0 = 0 - d0;
      d00 = d0 & 4194303;
      d1 = 0 - d1 - (B.JSInt_methods._shrOtherPositive$1(d0, 22) & 1);
      d10 = d1 & 4194303;
      d2 = 0 - d2 - (B.JSInt_methods._shrOtherPositive$1(d1, 22) & 1) & 1048575;
      d1 = d10;
      d0 = d00;
      sign = "-";
    } else
      sign = "";
    return A.Int64__toRadixStringUnsigned(10, d0, d1, d2, sign);
  },
  $isComparable: 1
};
A.BuilderInfo.prototype = {
  add$1$8$protoName(_, tagNumber, $name, fieldType, defaultOrMaker, subBuilder, $valueOf, enumValues, protoName, $T) {
    var t1, index, fieldInfo, _this = this;
    type$.nullable_GeneratedMessage_Function._as(subBuilder);
    type$.nullable_nullable_ProtobufEnum_Function_int._as($valueOf);
    type$.nullable_List_ProtobufEnum._as(enumValues);
    t1 = _this.byIndex;
    index = t1.length;
    fieldInfo = tagNumber === 0 ? new A.FieldInfo("<removed field>", 0, index, 0, null, null, null, type$.FieldInfo_dynamic) : new A.FieldInfo($name, tagNumber, index, fieldType, A.FieldInfo_findMakeDefault(fieldType, defaultOrMaker), subBuilder, $valueOf, $T._eval$1("FieldInfo<0>"));
    B.JSArray_methods.add$1(t1, fieldInfo);
    t1 = fieldInfo.tagNumber;
    if (t1 !== 0) {
      _this.fieldInfo.$indexSet(0, t1, fieldInfo);
      _this.byTagAsString.$indexSet(0, "" + t1, fieldInfo);
      _this.byName.$indexSet(0, fieldInfo.name, fieldInfo);
    }
  },
  a$1$4$protoName(tagNumber, $name, fieldType, protoName, $T) {
    var _null = null;
    this.add$1$8$protoName(0, tagNumber, $name, fieldType, _null, _null, _null, _null, protoName, $T);
  },
  a$1$3(tagNumber, $name, fieldType, $T) {
    return this.a$1$4$protoName(tagNumber, $name, fieldType, null, $T);
  },
  e$1$6$defaultOrMaker$enumValues$valueOf(tagNumber, $name, fieldType, defaultOrMaker, enumValues, $valueOf, $T) {
    this.add$1$8$protoName(0, tagNumber, $name, fieldType, defaultOrMaker, null, type$.nullable_nullable_ProtobufEnum_Function_int._as($valueOf), type$.nullable_List_ProtobufEnum._as(enumValues), null, $T);
  },
  aOM$1$3$subBuilder(tagNumber, $name, subBuilder, $T) {
    A.checkTypeBound($T, type$.GeneratedMessage, "T", "aOM");
    $T._eval$1("0()?")._as(subBuilder);
    this.add$1$8$protoName(0, tagNumber, $name, 2097152, A.GeneratedMessage__getSingletonMaker(subBuilder, $T).get$_frozenSingletonCreator(), subBuilder, null, null, null, $T);
  },
  oo$2(oneofIndex, tags) {
    var t1, _i;
    type$.List_int._as(tags);
    for (t1 = this.oneofs, _i = 0; _i < 5; ++_i)
      t1.$indexSet(0, tags[_i], oneofIndex);
  },
  get$sortedByTag() {
    var t1 = this._sortedByTag;
    if (t1 == null) {
      t1 = this._computeSortedByTag$0();
      this.set$_sortedByTag(t1);
    }
    return t1;
  },
  _computeSortedByTag$0() {
    var t1 = A.List_List$from(this.fieldInfo.get$values(), false, type$.FieldInfo_dynamic);
    B.JSArray_methods.sort$1(t1, new A.BuilderInfo__computeSortedByTag_closure());
    return t1;
  },
  _decodeEnum$3(tagNumber, registry, rawValue) {
    var i = this.fieldInfo.$index(0, tagNumber),
      f = i == null ? null : i.valueOf;
    return (f == null && true ? null.get$valueOf() : f).call$1(rawValue);
  },
  set$_sortedByTag(_sortedByTag) {
    this._sortedByTag = type$.nullable_List_FieldInfo_dynamic._as(_sortedByTag);
  }
};
A.BuilderInfo__computeSortedByTag_closure.prototype = {
  call$2(a, b) {
    var t1 = type$.FieldInfo_dynamic;
    return B.JSInt_methods.compareTo$1(t1._as(a).tagNumber, t1._as(b).tagNumber);
  },
  $signature: 23
};
A._readPackable_readToList.prototype = {
  call$1(list) {
    return J.add$1$ax(list, this.readFunc.call$0());
  },
  $signature: 9
};
A._readPackableToListEnum_readToList.prototype = {
  call$1(list) {
    var unknown, t2, _this = this,
      rawValue = _this.input._readRawVarint32$1(true),
      t1 = _this.tagNumber,
      value = _this.meta._decodeEnum$3(t1, _this.registry, rawValue);
    if (value == null) {
      unknown = _this.fs._ensureUnknownFields$0();
      t2 = A.Int64_Int64(rawValue);
      if (unknown._isReadOnly)
        A.defaultFrozenMessageModificationHandler("UnknownFieldSet", "mergeVarintField");
      B.JSArray_methods.add$1(unknown._getField$1(t1)._varints, t2);
    } else
      J.add$1$ax(list, value);
  },
  $signature: 9
};
A._readPackableToList_closure.prototype = {
  call$0() {
    var t1, t2, t3;
    for (t1 = this.input, t2 = this.readToList, t3 = this.list; t1._bufferPos < t1._currentLimit;)
      t2.call$1(t3);
  },
  $signature: 0
};
A.CodedBufferReader.prototype = {
  _checkLimit$1(increment) {
    var t1 = this._bufferPos += increment;
    if (t1 > this._currentLimit)
      throw A.wrapException(A.InvalidProtocolBufferException$truncatedMessage());
  },
  readGroup$3(fieldNumber, message, extensionRegistry) {
    var _this = this,
      t1 = _this._recursionDepth;
    if (t1 >= 64)
      throw A.wrapException(A.InvalidProtocolBufferException$recursionLimitExceeded());
    _this._recursionDepth = t1 + 1;
    message.mergeFromCodedBufferReader$2(_this, extensionRegistry);
    if (_this._lastTag !== (fieldNumber << 3 | 4) >>> 0)
      A.throwExpression(A.InvalidProtocolBufferException$invalidEndTag());
    --_this._recursionDepth;
  },
  readMessage$2(message, extensionRegistry) {
    var oldLimit, t2, _this = this,
      $length = _this._readRawVarint32$1(true),
      t1 = _this._recursionDepth;
    if (t1 >= 64)
      throw A.wrapException(A.InvalidProtocolBufferException$recursionLimitExceeded());
    if ($length < 0)
      throw A.wrapException(A.ArgumentError$(string$.CodedB));
    oldLimit = _this._currentLimit;
    t2 = _this._bufferPos + $length;
    _this._currentLimit = t2;
    if (t2 > oldLimit)
      throw A.wrapException(A.InvalidProtocolBufferException$truncatedMessage());
    _this._recursionDepth = t1 + 1;
    message.mergeFromCodedBufferReader$2(_this, extensionRegistry);
    if (_this._lastTag !== 0)
      A.throwExpression(A.InvalidProtocolBufferException$invalidEndTag());
    --_this._recursionDepth;
    _this._currentLimit = oldLimit;
  },
  readInt32$0() {
    return this._readRawVarint32$1(true);
  },
  readInt64$0() {
    return this._readRawVarint64$0();
  },
  readUint32$0() {
    return this._readRawVarint32$1(false);
  },
  readUint64$0() {
    return this._readRawVarint64$0();
  },
  readSint32$0() {
    return A.CodedBufferReader__decodeZigZag32(this._readRawVarint32$1(false));
  },
  readSint64$0() {
    var value = this._readRawVarint64$0(),
      o = A.Int64__promote(1),
      t1 = value._l,
      t2 = value._m,
      t3 = value._h;
    return (new A.Int64(t1 & o._l & 4194303, t2 & o._m & 4194303, t3 & o._h & 1048575).$eq(0, 1) ? A.Int64__sub(0, 0, 0, t1, t2, t3) : value).$shr(0, 1);
  },
  readFixed32$0() {
    return B.NativeByteData_methods._getUint32$2(this._readByteData$1(4), 0, true);
  },
  readFixed64$0() {
    return this.readSfixed64$0();
  },
  readSfixed32$0() {
    return B.NativeByteData_methods._getInt32$2(this._readByteData$1(4), 0, true);
  },
  readSfixed64$0() {
    var data = this._readByteData$1(8),
      view = A.NativeUint8List_NativeUint8List$view(data.buffer, data.byteOffset, 8);
    if (7 >= view.length)
      return A.ioore(view, 7);
    return A.Int64_Int64$fromInts(((((view[7] & 255) << 8 | view[6] & 255) << 8 | view[5] & 255) << 8 | view[4] & 255) >>> 0, ((((view[3] & 255) << 8 | view[2] & 255) << 8 | view[1] & 255) << 8 | view[0] & 255) >>> 0);
  },
  readBool$0() {
    return this._readRawVarint32$1(true) !== 0;
  },
  readBytes$0() {
    var t1, _this = this,
      $length = _this._readRawVarint32$1(true);
    _this._checkLimit$1($length);
    t1 = _this._protobuf$_buffer;
    return A.NativeUint8List_NativeUint8List$view(t1.buffer, t1.byteOffset + _this._bufferPos - $length, $length);
  },
  readFloat$0() {
    return B.NativeByteData_methods._getFloat32$2(this._readByteData$1(4), 0, true);
  },
  readDouble$0() {
    return B.NativeByteData_methods._getFloat64$2(this._readByteData$1(8), 0, true);
  },
  readTag$0() {
    var t1, _this = this;
    if (_this._bufferPos >= _this._currentLimit)
      return _this._lastTag = 0;
    t1 = _this._lastTag = _this._readRawVarint32$1(false);
    if (B.JSInt_methods._shrOtherPositive$1(t1, 3) === 0)
      throw A.wrapException(new A.InvalidProtocolBufferException("Protocol message contained an invalid tag (zero)."));
    return t1;
  },
  _readRawVarintByte$0() {
    var t1, t2;
    this._checkLimit$1(1);
    t1 = this._protobuf$_buffer;
    t2 = this._bufferPos - 1;
    if (!(t2 >= 0 && t2 < t1.length))
      return A.ioore(t1, t2);
    return t1[t2];
  },
  _readRawVarint32$1(signed) {
    var t1, t2, result, i, bufferPos0, byte, _this = this,
      bufferPos = _this._bufferPos,
      bytes = _this._currentLimit - bufferPos;
    if (bytes > 10)
      bytes = 10;
    for (t1 = _this._protobuf$_buffer, t2 = t1.length, result = 0, i = 0; i < bytes; ++i, bufferPos = bufferPos0) {
      bufferPos0 = bufferPos + 1;
      if (!(bufferPos >= 0 && bufferPos < t2))
        return A.ioore(t1, bufferPos);
      byte = t1[bufferPos];
      result = (result | B.JSInt_methods._shlPositive$1(byte & 127, i * 7)) >>> 0;
      if ((byte & 128) === 0) {
        _this._bufferPos = bufferPos0;
        return signed ? result - 2 * ((result & 2147483648) >>> 0) : result;
      }
    }
    _this._bufferPos = bufferPos;
    throw A.wrapException(A.InvalidProtocolBufferException$malformedVarint());
  },
  _readRawVarint64$0() {
    var t1, t2, lo, i, t3, byte, hi, _this = this;
    for (t1 = _this._protobuf$_buffer, t2 = t1.length, lo = 0, i = 0; i < 4; ++i) {
      t3 = ++_this._bufferPos;
      if (t3 > _this._currentLimit)
        A.throwExpression(A.InvalidProtocolBufferException$truncatedMessage());
      --t3;
      if (!(t3 >= 0 && t3 < t2))
        return A.ioore(t1, t3);
      byte = t1[t3];
      lo = (lo | B.JSInt_methods._shlPositive$1(byte & 127, i * 7)) >>> 0;
      if ((byte & 128) === 0)
        return A.Int64_Int64$fromInts(0, lo);
    }
    byte = _this._readRawVarintByte$0();
    lo = (lo | (byte & 15) << 28) >>> 0;
    hi = byte >>> 4 & 7;
    if ((byte & 128) === 0)
      return A.Int64_Int64$fromInts(hi, lo);
    for (i = 0; i < 5; ++i) {
      t3 = ++_this._bufferPos;
      if (t3 > _this._currentLimit)
        A.throwExpression(A.InvalidProtocolBufferException$truncatedMessage());
      --t3;
      if (!(t3 >= 0 && t3 < t2))
        return A.ioore(t1, t3);
      byte = t1[t3];
      hi = (hi | B.JSInt_methods._shlPositive$1(byte & 127, i * 7 + 3)) >>> 0;
      if ((byte & 128) === 0)
        return A.Int64_Int64$fromInts(hi, lo);
    }
    throw A.wrapException(A.InvalidProtocolBufferException$malformedVarint());
  },
  _readByteData$1(sizeInBytes) {
    var t1, t2;
    this._checkLimit$1(sizeInBytes);
    t1 = this._protobuf$_buffer;
    t2 = t1.buffer;
    t1 = t1.byteOffset + this._bufferPos - sizeInBytes;
    A._checkViewArguments(t2, t1, sizeInBytes);
    t1 = new DataView(t2, t1, sizeInBytes);
    return t1;
  }
};
A.InvalidProtocolBufferException.prototype = {
  toString$0(_) {
    return "InvalidProtocolBufferException: " + this.message;
  }
};
A._ExtensionFieldSet.prototype = {
  _validateInfo$1(fi) {
    var t1;
    fi.get$extendee();
    t1 = this._protobuf$_parent;
    t1._protobuf$_message.get$info_();
    t1 = A.ArgumentError$("Extension " + A.S(fi) + " not legal for message " + t1.get$_messageName());
    throw A.wrapException(t1);
  },
  _setFieldUnchecked$2(fi, value) {
    var t1, t2;
    type$.Extension_dynamic._as(fi);
    t1 = this._protobuf$_parent._unknownFields;
    if (t1 != null) {
      t2 = fi.get$tagNumber();
      if (t1._isReadOnly)
        A.defaultFrozenMessageModificationHandler("UnknownFieldSet", "clearField");
      t1._fields.remove$1(0, t2);
    }
    this._values.$indexSet(0, fi.get$tagNumber(), value);
  },
  _markReadOnly$0() {
    var t1, t2, t3, t4, t5, t6, entries, t7, entry, _this = this;
    if (_this._isReadOnly)
      return;
    _this._isReadOnly = true;
    for (t1 = _this._info.get$values(), t2 = A._instanceType(t1), t2 = t2._eval$1("@<1>")._bind$1(t2._rest[1]), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1], t3 = _this._values, t4 = type$.GeneratedMessage, t5 = type$.List_GeneratedMessage; t1.moveNext$0();) {
      t6 = t1.__internal$_current;
      if (t6 == null)
        t6 = t2._as(t6);
      if (t6.get$isRepeated()) {
        entries = t3.$index(0, t6.get$tagNumber());
        if (entries == null)
          continue;
        if (t6.get$isGroupOrMessage())
          for (t7 = J.get$iterator$ax(t5._as(entries)); t7.moveNext$0();)
            t7.get$current().__fieldSet._markReadOnly$0();
        t3.$indexSet(0, t6.get$tagNumber(), entries.toFrozenPbList$0());
      } else if (t6.get$isGroupOrMessage()) {
        entry = t3.$index(0, t6.get$tagNumber());
        if (entry != null)
          t4._as(entry).__fieldSet._markReadOnly$0();
      }
    }
  }
};
A._EmptyExtensionRegistry.prototype = {$isExtensionRegistry: 1};
A.FieldInfo.prototype = {
  get$readonlyDefault() {
    var t1, _this = this;
    if ((_this.type & 2) !== 0) {
      t1 = _this._emptyList;
      if (t1 == null) {
        t1 = _this.$ti;
        t1 = new A.FrozenPbList(A._setArrayType([], t1._eval$1("JSArray<1>")), A.protobuf___checkNotNull$closure(), t1._eval$1("FrozenPbList<1>"));
        _this.set$_emptyList(t1);
      }
      return t1;
    }
    return _this.makeDefault.call$0();
  },
  toString$0(_) {
    return this.name;
  },
  set$_emptyList(_emptyList) {
    this._emptyList = this.$ti._eval$1("FrozenPbList<1>?")._as(_emptyList);
  }
};
A.FieldInfo_findMakeDefault_closure.prototype = {
  call$0() {
    return this.defaultOrMaker;
  },
  $signature: 5
};
A._FieldSet.prototype = {
  get$_messageName() {
    return this._protobuf$_message.get$info_().qualifiedMessageName;
  },
  _ensureExtensions$0() {
    var t1 = this._extensions;
    if (t1 == null) {
      t1 = type$.int;
      t1 = this._extensions = new A._ExtensionFieldSet(this, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.Extension_dynamic), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.dynamic));
    }
    return t1;
  },
  _ensureUnknownFields$0() {
    var t1 = this._unknownFields;
    if (t1 == null) {
      t1 = this._frozenState;
      if (!A._isBool(t1) || t1)
        return $.$get$UnknownFieldSet_emptyUnknownFieldSet();
      t1 = this._unknownFields = new A.UnknownFieldSet(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.UnknownFieldSetField));
    }
    return t1;
  },
  _markReadOnly$0() {
    var t2, t3, t4, t5, t6, _i, field, t7, t8, entries, entry, _this = this,
      t1 = _this._frozenState;
    if (!A._isBool(t1) || t1)
      return;
    _this._frozenState = true;
    for (t1 = _this._protobuf$_message.get$info_().get$sortedByTag(), t2 = t1.length, t3 = _this._values, t4 = type$.GeneratedMessage, t5 = type$.nullable_PbMap_dynamic_dynamic, t6 = type$.List_GeneratedMessage, _i = 0; _i < t2; ++_i) {
      field = t1[_i];
      t7 = field.type;
      if ((t7 & 2) !== 0) {
        t8 = field.index;
        if (!(t8 < t3.length))
          return A.ioore(t3, t8);
        entries = t3[t8];
        if (entries == null)
          continue;
        if ((t7 & 2098176) !== 0)
          for (t7 = J.get$iterator$ax(t6._as(entries)); t7.moveNext$0();)
            t7.get$current().__fieldSet._markReadOnly$0();
        B.JSArray_methods.$indexSet(t3, t8, entries.toFrozenPbList$0());
      } else if ((t7 & 4194304) !== 0) {
        t7 = field.index;
        if (!(t7 < t3.length))
          return A.ioore(t3, t7);
        t5._as(t3[t7]);
        continue;
      } else if ((t7 & 2098176) !== 0) {
        t7 = field.index;
        if (!(t7 < t3.length))
          return A.ioore(t3, t7);
        entry = t3[t7];
        if (entry != null)
          t4._as(entry).__fieldSet._markReadOnly$0();
      }
    }
    if (_this._extensions != null)
      _this._ensureExtensions$0()._markReadOnly$0();
    if (_this._unknownFields != null)
      _this._ensureUnknownFields$0()._markReadOnly$0();
  },
  _getDefault$1(fi) {
    var t1, value;
    if ((fi.type & 2) === 0)
      return fi.makeDefault.call$0();
    t1 = this._frozenState;
    if (!A._isBool(t1) || t1)
      return fi.get$readonlyDefault();
    t1 = this._protobuf$_message;
    value = t1.createRepeatedField$1$2(fi.tagNumber, fi, fi.$ti._precomputed1);
    this._setNonExtensionFieldUnchecked$3(t1.get$info_(), fi, value);
    return value;
  },
  _getFieldOrNull$1(fi) {
    var t1 = this._values,
      t2 = fi.index;
    if (!(t2 < t1.length))
      return A.ioore(t1, t2);
    t2 = t1[t2];
    return t2;
  },
  _clearField$1(tagNumber) {
    var fi, t2, t3, oneofIndex, _this = this,
      t1 = _this._frozenState;
    if (!A._isBool(t1) || t1)
      A.protobuf__defaultFrozenMessageModificationHandler$closure().call$1(_this._protobuf$_message.get$info_().qualifiedMessageName);
    t1 = _this._protobuf$_message.get$info_();
    fi = t1.fieldInfo.$index(0, tagNumber);
    if (fi != null) {
      B.JSArray_methods.$indexSet(_this._values, fi.index, null);
      t1 = t1.oneofs;
      t2 = fi.tagNumber;
      if (t1.containsKey$1(t2)) {
        t3 = _this._oneofCases;
        t3.toString;
        t3.remove$1(0, t1.$index(0, t2));
      }
      oneofIndex = t1.$index(0, t2);
      if (oneofIndex != null)
        _this._oneofCases.$indexSet(0, oneofIndex, 0);
      return;
    }
    t1 = _this._extensions;
    if (t1 != null)
      t1._info.$index(0, tagNumber);
  },
  _setFieldUnchecked$3(meta, fi, value) {
    A.ArgumentError_checkNotNull(fi, "fi", type$.FieldInfo_dynamic);
    this._setNonExtensionFieldUnchecked$3(meta, fi, value);
  },
  _ensureRepeatedField$1$2(meta, fi, $T) {
    var value, newValue;
    $T._eval$1("FieldInfo<0>")._as(fi);
    value = this._getFieldOrNull$1(fi);
    if (value != null)
      return $T._eval$1("List<0>")._as(value);
    newValue = this._protobuf$_message.createRepeatedField$1$2(fi.tagNumber, fi, fi.$ti._precomputed1);
    this._setNonExtensionFieldUnchecked$3(meta, fi, newValue);
    return newValue;
  },
  _ensureMapField$2$2(meta, fi, $K, $V) {
    var value, newValue,
      t1 = $K._eval$1("@<0>")._bind$1($V);
    t1._eval$1("MapFieldInfo<1,2>")._as(fi);
    value = this._getFieldOrNull$1(fi);
    if (value != null)
      return t1._eval$1("PbMap<1,2>")._as(value);
    newValue = fi._createMapField$1(this._protobuf$_message);
    this._setNonExtensionFieldUnchecked$3(meta, fi, newValue);
    return t1._eval$1("PbMap<1,2>")._as(newValue);
  },
  _setNonExtensionFieldUnchecked$3(meta, fi, value) {
    var t1,
      tag = fi.tagNumber,
      oneofIndex = type$.BuilderInfo._as(meta).oneofs.$index(0, tag);
    if (oneofIndex != null) {
      t1 = this._oneofCases;
      this._clearField$1(t1.$index(0, oneofIndex));
      t1.$indexSet(0, oneofIndex, tag);
    }
    B.JSArray_methods.$indexSet(this._values, fi.index, value);
  },
  _$getND$1(index) {
    var value,
      t1 = this._values;
    if (!(index < t1.length))
      return A.ioore(t1, index);
    value = t1[index];
    if (value != null)
      return value;
    t1 = this._protobuf$_message.get$info_().byIndex;
    if (!(index < t1.length))
      return A.ioore(t1, index);
    return this._getDefault$1(t1[index]);
  },
  _$getIZ$1(index) {
    var value,
      t1 = this._values;
    if (!(index < t1.length))
      return A.ioore(t1, index);
    value = t1[index];
    if (value == null)
      return 0;
    return A._asInt(value);
  },
  _$has$1(index) {
    var value,
      t1 = this._values;
    if (!(index < t1.length))
      return A.ioore(t1, index);
    value = t1[index];
    if (value == null)
      return false;
    if (type$.List_dynamic._is(value))
      return J.get$isNotEmpty$asx(value);
    return true;
  },
  _protobuf$_equals$1(o) {
    var t1, t2, i, t3, _this = this;
    if (_this._protobuf$_message.get$info_() !== o._protobuf$_message.get$info_())
      return false;
    for (t1 = _this._values, t2 = o._values, i = 0; i < t1.length; ++i) {
      t3 = t1[i];
      if (!(i < t2.length))
        return A.ioore(t2, i);
      if (!_this._equalFieldValues$2(t3, t2[i]))
        return false;
    }
    t1 = _this._extensions;
    if (t1 == null || t1._values.__js_helper$_length === 0) {
      t1 = o._extensions;
      if (t1 != null && t1._values.__js_helper$_length !== 0)
        return false;
    } else {
      t1.toString;
      t2 = o._extensions;
      if (!(t2 != null && A._areMapsEqual(t1._values, t2._values)))
        return false;
    }
    t1 = _this._unknownFields;
    if (t1 == null || t1._fields.__js_helper$_length === 0) {
      t1 = o._unknownFields;
      if (t1 != null && t1._fields.__js_helper$_length !== 0)
        return false;
    } else if (!J.$eq$(t1, o._unknownFields))
      return false;
    return true;
  },
  _equalFieldValues$2(left, right) {
    var val,
      t1 = left == null;
    if (!t1 && right != null)
      return A._deepEquals(left, right);
    val = t1 ? right : left;
    if (val == null)
      return true;
    if (type$.List_dynamic._is(val) && J.get$isEmpty$asx(val))
      return true;
    if (type$.Map_dynamic_dynamic._is(val) && val.get$isEmpty(val))
      return true;
    return false;
  },
  get$_protobuf$_hashCode() {
    var hash, values, t2, _i, fi, t3, value, sortedByTagNumbers, _this = this,
      t1 = _this._frozenState;
    t1 = (A._isInt(t1) ? t1 : null) != null;
    if (t1) {
      t1 = _this._frozenState;
      t1 = A._isInt(t1) ? t1 : null;
      t1.toString;
      return t1;
    }
    t1 = _this._protobuf$_message;
    hash = A._HashUtils__combine(0, A.Primitives_objectHashCode(t1.get$info_()));
    values = _this._values;
    for (t1 = t1.get$info_().get$sortedByTag(), t2 = t1.length, _i = 0; _i < t2; ++_i) {
      fi = t1[_i];
      t3 = fi.index;
      if (!(t3 < values.length))
        return A.ioore(values, t3);
      value = values[t3];
      if (value == null)
        continue;
      hash = A._FieldSet__hashField(hash, fi, value);
    }
    t1 = _this._extensions;
    if (t1 != null) {
      t2 = t1._values;
      sortedByTagNumbers = A._sorted(new A.LinkedHashMapKeyIterable(t2, A._instanceType(t2)._eval$1("LinkedHashMapKeyIterable<1>")), type$.int);
      for (t3 = sortedByTagNumbers.length, t1 = t1._info, _i = 0; _i < sortedByTagNumbers.length; sortedByTagNumbers.length === t3 || (0, A.throwConcurrentModificationError)(sortedByTagNumbers), ++_i) {
        fi = t1.$index(0, A._asIntQ(sortedByTagNumbers[_i]));
        hash = A._FieldSet__hashField(hash, fi, t2.$index(0, fi.get$tagNumber()));
      }
    }
    t1 = _this._unknownFields;
    t1 = t1 == null ? null : t1.get$hashCode(t1);
    hash = A._HashUtils__combine(hash, t1 == null ? 0 : t1);
    t1 = _this._frozenState;
    if ((!A._isBool(t1) || t1) && true)
      _this._frozenState = hash;
    return hash;
  },
  writeString$2(out, indent) {
    var t1, t2, t3, _i, fi, t4, t5, _this = this,
      writeFieldValue = new A._FieldSet_writeString_writeFieldValue(new A._FieldSet_writeString_renderValue(out, indent));
    for (t1 = _this._protobuf$_message.get$info_().get$sortedByTag(), t2 = t1.length, t3 = _this._values, _i = 0; _i < t2; ++_i) {
      fi = t1[_i];
      t4 = fi.index;
      if (!(t4 < t3.length))
        return A.ioore(t3, t4);
      t4 = t3[t4];
      t5 = fi.name;
      writeFieldValue.call$2(t4, t5 === "" ? B.JSInt_methods.toString$0(fi.tagNumber) : t5);
    }
    t1 = _this._extensions;
    if (t1 != null) {
      t1 = t1._info;
      t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>");
      t2 = A.List_List$of(new A.LinkedHashMapKeyIterable(t1, t2), true, t2._eval$1("Iterable.E"));
      B.JSArray_methods.sort$0(t2);
      B.JSArray_methods.forEach$1(t2, new A._FieldSet_writeString_closure(_this, writeFieldValue));
    }
    t1 = _this._unknownFields;
    if (t1 != null)
      out._contents += t1.toString$0(0);
    else
      out._contents += new A.UnknownFieldSet(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.UnknownFieldSetField))._toString$1("");
  },
  _mergeFromMessage$1(other) {
    var t1, t2, t3, _i, fi, t4, value, extension;
    for (t1 = other._protobuf$_message.get$info_().get$sortedByTag(), t2 = t1.length, t3 = other._values, _i = 0; _i < t2; ++_i) {
      fi = t1[_i];
      t4 = fi.index;
      if (!(t4 < t3.length))
        return A.ioore(t3, t4);
      value = t3[t4];
      if (value != null)
        this._mergeField$3$isExtension(fi, value, false);
    }
    t1 = other._extensions;
    if (t1 != null)
      for (t2 = t1._values, t3 = A.LinkedHashMapKeyIterator$(t2, t2._modifications, A._instanceType(t2)._precomputed1), t1 = t1._info; t3.moveNext$0();) {
        extension = t1.$index(0, t3.__js_helper$_current);
        this._mergeField$3$isExtension(extension, t2.$index(0, extension.get$tagNumber()), true);
      }
    if (other._unknownFields != null) {
      t1 = this._ensureUnknownFields$0();
      t2 = other._unknownFields;
      t2.toString;
      t1.mergeFromUnknownFieldSet$1(t2);
    }
  },
  _mergeField$3$isExtension(otherFi, fieldValue, isExtension) {
    var mustClone, t2, map, t3, entry, t4, t5, repeatedFields, i, currentFi, _this = this,
      t1 = _this._protobuf$_message.get$info_(),
      fi = t1.fieldInfo.$index(0, otherFi.tagNumber);
    if (fi == null && isExtension)
      fi = otherFi;
    mustClone = (otherFi.type & 2098176) !== 0;
    t2 = fi.type;
    if ((t2 & 4194304) !== 0) {
      type$.MapFieldInfo_dynamic_dynamic._as(fi);
      fi.get$valueFieldType().$and(0, 2098176);
      map = fi._ensureMapField$2(t1, _this);
      for (t1 = fieldValue.get$entries(), t1 = t1.get$iterator(t1), t2 = type$.MapEntry_dynamic_dynamic, t3 = type$.GeneratedMessage; t1.moveNext$0();) {
        entry = t2._as(t1.get$current());
        t4 = t3._as(entry.value);
        t5 = t3._as(t4.get$info_().createEmptyInstance.call$0());
        t5.mergeFromMessage$1(t4);
        map.$indexSet(0, entry.key, t5);
      }
      return;
    }
    if ((t2 & 2) !== 0) {
      t2 = A._instanceType(fi)._precomputed1;
      if (mustClone) {
        type$.PbListBase_GeneratedMessage._as(fieldValue);
        repeatedFields = _this._ensureRepeatedField$1$2(t1, fi, t2);
        for (t1 = fieldValue._wrappedList, t2 = type$.GeneratedMessage, t3 = J.getInterceptor$ax(repeatedFields), i = 0; i < t1.length; ++i) {
          t4 = t1[i];
          t5 = t2._as(t4.get$info_().createEmptyInstance.call$0());
          t5.mergeFromMessage$1(t4);
          t3.add$1(repeatedFields, t5);
        }
      } else {
        type$.PbListBase_dynamic._as(fieldValue);
        J.addAll$1$ax(_this._ensureRepeatedField$1$2(t1, fi, t2), fieldValue);
      }
      return;
    }
    if (mustClone) {
      if (isExtension)
        currentFi = _this._ensureExtensions$0()._values.$index(0, type$.Extension_dynamic._as(fi).get$tagNumber());
      else {
        t2 = _this._values;
        t3 = fi.index;
        if (!(t3 < t2.length))
          return A.ioore(t2, t3);
        currentFi = t2[t3];
      }
      if (currentFi == null) {
        t2 = type$.GeneratedMessage;
        fieldValue = A.GeneratedMessageGenericExtensions_deepCopy(t2._as(fieldValue), t2);
      } else {
        currentFi.mergeFromMessage$1(fieldValue);
        fieldValue = currentFi;
      }
    }
    if (isExtension) {
      t1 = _this._ensureExtensions$0();
      type$.Extension_dynamic._as(fi);
      if (t1._isReadOnly)
        A.protobuf__defaultFrozenMessageModificationHandler$closure().call$1(t1._protobuf$_parent._protobuf$_message.get$info_().qualifiedMessageName);
      if (fi.get$isRepeated())
        A.throwExpression(A.ArgumentError$(t1._protobuf$_parent._setFieldFailedMessage$3(fi, fieldValue, "repeating field (use get + .add())")));
      if (t1._isReadOnly)
        A.protobuf__defaultFrozenMessageModificationHandler$closure().call$1(t1._protobuf$_parent._protobuf$_message.get$info_().qualifiedMessageName);
      t1._validateInfo$1(fi);
      t1._protobuf$_parent._validateField$2(fi, fieldValue);
      t1._info.$indexSet(0, fi.get$tagNumber(), fi);
      t1._setFieldUnchecked$2(fi, fieldValue);
    } else {
      _this._validateField$2(fi, fieldValue);
      _this._setNonExtensionFieldUnchecked$3(t1, fi, fieldValue);
    }
  },
  _validateField$2(fi, newValue) {
    var message,
      t1 = this._frozenState;
    if (!A._isBool(t1) || t1)
      A.protobuf__defaultFrozenMessageModificationHandler$closure().call$1(this._protobuf$_message.get$info_().qualifiedMessageName);
    message = A._getFieldError(fi.type, newValue);
    if (message != null)
      throw A.wrapException(A.ArgumentError$(this._setFieldFailedMessage$3(fi, newValue, message)));
  },
  _setFieldFailedMessage$3(fi, value, detail) {
    return "Illegal to set field " + fi.name + " (" + fi.tagNumber + ") of " + this._protobuf$_message.get$info_().qualifiedMessageName + " to value (" + A.S(value) + "): " + detail;
  }
};
A._FieldSet__hashField_closure.prototype = {
  call$1(enm) {
    return enm.get$value();
  },
  $signature: 4
};
A._FieldSet_writeString_renderValue.prototype = {
  call$2(key, value) {
    var t1, t2, _this = this;
    if (value instanceof A.GeneratedMessage) {
      t1 = _this.out;
      t2 = _this.indent;
      t1._contents += t2 + key + ": {\n";
      value.__fieldSet.writeString$2(t1, t2 + "  ");
      t1._contents += t2 + "}\n";
    } else {
      t1 = _this.out;
      t2 = _this.indent + key;
      if (value instanceof A.MapEntry)
        t1._contents += t2 + ": {" + A.S(value.key) + " : " + A.S(value.value) + "} \n";
      else
        t1._contents += t2 + ": " + A.S(value) + "\n";
    }
  },
  $signature: 46
};
A._FieldSet_writeString_writeFieldValue.prototype = {
  call$2(fieldValue, $name) {
    var t1, t2, t3, value;
    if (fieldValue == null)
      return;
    if (fieldValue instanceof A.PbListBase)
      for (t1 = fieldValue._wrappedList, t2 = A._arrayInstanceType(t1), t1 = new J.ArrayIterator(t1, t1.length, t2._eval$1("ArrayIterator<1>")), t3 = this.renderValue, t2 = t2._precomputed1; t1.moveNext$0();) {
        value = t1._current;
        t3.call$2($name, value == null ? t2._as(value) : value);
      }
    else
      this.renderValue.call$2($name, fieldValue);
  },
  $signature: 17
};
A._FieldSet_writeString_closure.prototype = {
  call$1(tagNumber) {
    var t1, t2;
    A._asInt(tagNumber);
    t1 = this.$this;
    t2 = t1._extensions._values.$index(0, tagNumber);
    t1 = t1._extensions._info.$index(0, tagNumber);
    return this.writeFieldValue.call$2(t2, "[" + A.S(t1.get$name(t1)) + "]");
  },
  $signature: 18
};
A.GeneratedMessage.prototype = {
  GeneratedMessage$0() {
    var t1 = this.get$info_(),
      t2 = A._FieldSet__makeValueList(t1.byIndex.length);
    if (t1.oneofs.__js_helper$_length === 0)
      t1 = null;
    else {
      t1 = type$.int;
      t1 = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
    }
    this.__fieldSet = new A._FieldSet(this, null, t2, t1);
  },
  $eq(_, other) {
    var t1, t2;
    if (other == null)
      return false;
    if (this === other)
      return true;
    if (other instanceof A.GeneratedMessage) {
      t1 = this.__fieldSet;
      t1.toString;
      t2 = other.__fieldSet;
      t2.toString;
      t2 = t1._protobuf$_equals$1(t2);
      t1 = t2;
    } else
      t1 = false;
    return t1;
  },
  get$hashCode(_) {
    return this.__fieldSet.get$_protobuf$_hashCode();
  },
  toString$0(_) {
    var t1,
      out = new A.StringBuffer("");
    this.__fieldSet.writeString$2(out, "");
    t1 = out._contents;
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  },
  mergeFromCodedBufferReader$2(input, extensionRegistry) {
    var t1 = this.__fieldSet._protobuf$_message.get$info_(),
      t2 = this.__fieldSet;
    t2.toString;
    A._mergeFromCodedBufferReader(t1, t2, input, extensionRegistry);
  },
  createRepeatedField$1$2(tagNumber, fi, $T) {
    var t1;
    $T._eval$1("FieldInfo<0>")._as(fi);
    $T._eval$1("~(0?)?")._as(null);
    null.toString;
    t1 = A._setArrayType([], $T._eval$1("JSArray<0>"));
    A.ArgumentError_checkNotNull(null, "check", $T._eval$1("~(0?)"));
    return new A.PbList(t1, null, $T._eval$1("PbList<0>"));
  },
  mergeFromMessage$1(other) {
    var t1, t2;
    type$.GeneratedMessage._as(other);
    t1 = this.__fieldSet;
    t1.toString;
    t2 = other.__fieldSet;
    t2.toString;
    return t1._mergeFromMessage$1(t2);
  }
};
A._SingletonMaker.prototype = {
  get$_frozenSingletonCreator() {
    var result,
      value = this.___SingletonMaker__frozenSingletonCreator_FI;
    if (value === $) {
      result = new A._SingletonMaker__frozenSingletonCreator_closure(this);
      value !== $ && A.throwLateFieldADI("_frozenSingletonCreator");
      this.set$___SingletonMaker__frozenSingletonCreator_FI(result);
      value = result;
    }
    return value;
  },
  set$___SingletonMaker__frozenSingleton_FI(___SingletonMaker__frozenSingleton_FI) {
    this.___SingletonMaker__frozenSingleton_FI = this.$ti._precomputed1._as(___SingletonMaker__frozenSingleton_FI);
  },
  set$___SingletonMaker__frozenSingletonCreator_FI(___SingletonMaker__frozenSingletonCreator_FI) {
    this.___SingletonMaker__frozenSingletonCreator_FI = this.$ti._eval$1("1()")._as(___SingletonMaker__frozenSingletonCreator_FI);
  }
};
A._SingletonMaker__frozenSingletonCreator_closure.prototype = {
  call$0() {
    var result,
      t1 = this.$this,
      value = t1.___SingletonMaker__frozenSingleton_FI;
    if (value === $) {
      result = t1._creator.call$0();
      result.__fieldSet._markReadOnly$0();
      t1.___SingletonMaker__frozenSingleton_FI !== $ && A.throwLateFieldADI("_frozenSingleton");
      t1.set$___SingletonMaker__frozenSingleton_FI(result);
      value = result;
    }
    return value;
  },
  $signature() {
    return this.$this.$ti._eval$1("1()");
  }
};
A.PackageName.prototype = {};
A.FrozenPbList.prototype = {
  _unsupported$1(method) {
    return new A.UnsupportedError("Cannot call " + method + " on an unmodifiable list");
  },
  $indexSet(_, index, value) {
    this.$ti._precomputed1._as(value);
    return A.throwExpression(this._unsupported$1("set"));
  },
  set$length(_, newLength) {
    A.throwExpression(this._unsupported$1("set length"));
  },
  add$1(_, element) {
    this.$ti._eval$1("1?")._as(element);
    return A.throwExpression(this._unsupported$1("add"));
  },
  addAll$1(_, iterable) {
    this.$ti._eval$1("Iterable<1>")._as(iterable);
    return A.throwExpression(this._unsupported$1("addAll"));
  }
};
A.PbList.prototype = {
  toFrozenPbList$0() {
    return new A.FrozenPbList(this._wrappedList, A.protobuf___checkNotNull$closure(), this.$ti._eval$1("FrozenPbList<1>"));
  },
  add$1(_, element) {
    this.$ti._precomputed1._as(element);
    this.check.call$1(element);
    B.JSArray_methods.add$1(this._wrappedList, element);
  },
  addAll$1(_, iterable) {
    this.$ti._eval$1("Iterable<1>")._as(iterable);
    B.JSArray_methods.forEach$1(iterable._wrappedList, A._instanceType(iterable)._eval$1("~(1)")._as(this.check));
    B.JSArray_methods.addAll$1(this._wrappedList, iterable);
  }
};
A.PbListBase.prototype = {
  $eq(_, other) {
    if (other == null)
      return false;
    return other instanceof A.PbListBase && A._areListsEqual(other, this);
  },
  get$hashCode(_) {
    return A._HashUtils__hashObjects(this._wrappedList);
  },
  get$iterator(_) {
    var t1 = this._wrappedList;
    return new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
  },
  map$1$1(_, f, $T) {
    var t1 = this._wrappedList,
      t2 = A._arrayInstanceType(t1);
    return new A.MappedListIterable(t1, t2._bind$1($T)._eval$1("1(2)")._as(A._instanceType(this)._bind$1($T)._eval$1("1(2)")._as(f)), t2._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
  },
  map$1($receiver, f) {
    return this.map$1$1($receiver, f, type$.dynamic);
  },
  forEach$1(_, action) {
    B.JSArray_methods.forEach$1(this._wrappedList, A._instanceType(this)._eval$1("~(1)")._as(action));
  },
  fold$1$2(_, initialValue, combine, $T) {
    return B.JSArray_methods.fold$1$2(this._wrappedList, $T._as(initialValue), A._instanceType(this)._bind$1($T)._eval$1("1(1,2)")._as(combine), $T);
  },
  get$isEmpty(_) {
    return this._wrappedList.length === 0;
  },
  get$isNotEmpty(_) {
    return this._wrappedList.length !== 0;
  },
  elementAt$1(_, index) {
    var t1 = this._wrappedList;
    if (!(index >= 0 && index < t1.length))
      return A.ioore(t1, index);
    return t1[index];
  },
  toString$0(_) {
    return A.IterableBase_iterableToFullString(this._wrappedList, "[", "]");
  },
  $index(_, index) {
    var t1 = this._wrappedList;
    if (!(index >= 0 && index < t1.length))
      return A.ioore(t1, index);
    return t1[index];
  },
  get$length(_) {
    return this._wrappedList.length;
  },
  $indexSet(_, index, value) {
    A._instanceType(this)._precomputed1._as(value);
    this.check.call$1(value);
    B.JSArray_methods.$indexSet(this._wrappedList, index, value);
  },
  set$length(_, newLength) {
    var t1 = this._wrappedList;
    if (newLength > t1.length)
      throw A.wrapException(A.UnsupportedError$("Extending protobuf lists is not supported"));
    B.JSArray_methods.set$length(t1, newLength);
  }
};
A.ProtobufEnum.prototype = {
  get$hashCode(_) {
    return this.value;
  },
  toString$0(_) {
    var t1 = this.name;
    return t1 === "" ? B.JSInt_methods.toString$0(this.value) : t1;
  },
  get$value() {
    return this.value;
  }
};
A.UnknownFieldSet.prototype = {
  mergeFieldFromBuffer$2(tag, input) {
    var number, t1, unknownFieldSet, _this = this,
      _s15_ = "UnknownFieldSet";
    if (_this._isReadOnly)
      A.defaultFrozenMessageModificationHandler(_s15_, "mergeFieldFromBuffer");
    number = B.JSInt_methods._shrOtherPositive$1(tag, 3);
    switch (tag & 7) {
      case 0:
        t1 = input._readRawVarint64$0();
        if (_this._isReadOnly)
          A.defaultFrozenMessageModificationHandler(_s15_, "mergeVarintField");
        B.JSArray_methods.add$1(_this._getField$1(number)._varints, t1);
        return true;
      case 1:
        t1 = input.readSfixed64$0();
        if (_this._isReadOnly)
          A.defaultFrozenMessageModificationHandler(_s15_, "mergeFixed64Field");
        B.JSArray_methods.add$1(_this._getField$1(number)._fixed64s, t1);
        return true;
      case 2:
        t1 = type$.List_int._as(input.readBytes$0());
        if (_this._isReadOnly)
          A.defaultFrozenMessageModificationHandler(_s15_, "mergeLengthDelimitedField");
        B.JSArray_methods.add$1(_this._getField$1(number)._lengthDelimited, t1);
        return true;
      case 3:
        t1 = input._recursionDepth;
        if (t1 >= 64)
          A.throwExpression(A.InvalidProtocolBufferException$recursionLimitExceeded());
        input._recursionDepth = t1 + 1;
        unknownFieldSet = new A.UnknownFieldSet(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.UnknownFieldSetField));
        unknownFieldSet.mergeFromCodedBufferReader$1(input);
        if (input._lastTag !== (number << 3 | 4) >>> 0)
          A.throwExpression(A.InvalidProtocolBufferException$invalidEndTag());
        --input._recursionDepth;
        if (_this._isReadOnly)
          A.defaultFrozenMessageModificationHandler(_s15_, "mergeGroupField");
        B.JSArray_methods.add$1(_this._getField$1(number)._groups, unknownFieldSet);
        return true;
      case 4:
        return false;
      case 5:
        t1 = B.NativeByteData_methods._getUint32$2(input._readByteData$1(4), 0, true);
        if (_this._isReadOnly)
          A.defaultFrozenMessageModificationHandler(_s15_, "mergeFixed32Field");
        B.JSArray_methods.add$1(_this._getField$1(number)._fixed32s, t1);
        return true;
      default:
        throw A.wrapException(new A.InvalidProtocolBufferException("Protocol message tag had invalid wire type."));
    }
  },
  mergeFromCodedBufferReader$1(input) {
    var tag;
    if (this._isReadOnly)
      A.defaultFrozenMessageModificationHandler("UnknownFieldSet", "mergeFromCodedBufferReader");
    for (; true;) {
      tag = input.readTag$0();
      if (tag === 0 || !this.mergeFieldFromBuffer$2(tag, input))
        break;
    }
  },
  mergeFromUnknownFieldSet$1(other) {
    var t1, t2, t3, t4, t5,
      _s15_ = "UnknownFieldSet";
    if (this._isReadOnly)
      A.defaultFrozenMessageModificationHandler(_s15_, "mergeFromUnknownFieldSet");
    for (t1 = other._fields, t2 = A.LinkedHashMapKeyIterator$(t1, t1._modifications, A._instanceType(t1)._precomputed1), t3 = type$.UnknownFieldSetField; t2.moveNext$0();) {
      t4 = t2.__js_helper$_current;
      t5 = t1.$index(0, t4);
      t5.toString;
      t3._as(t5);
      if (this._isReadOnly)
        A.defaultFrozenMessageModificationHandler(_s15_, "mergeField");
      t4 = this._getField$1(t4);
      B.JSArray_methods.addAll$1(t4._varints, t5._varints);
      B.JSArray_methods.addAll$1(t4._fixed32s, t5._fixed32s);
      B.JSArray_methods.addAll$1(t4._fixed64s, t5._fixed64s);
      B.JSArray_methods.addAll$1(t4._lengthDelimited, t5._lengthDelimited);
      B.JSArray_methods.addAll$1(t4._groups, t5._groups);
    }
  },
  _getField$1(number) {
    if (number === 0)
      A.throwExpression(A.ArgumentError$("Zero is not a valid field number."));
    return this._fields.putIfAbsent$2(number, new A.UnknownFieldSet__getField_closure());
  },
  $eq(_, other) {
    if (other == null)
      return false;
    if (!(other instanceof A.UnknownFieldSet))
      return false;
    return A._areMapsEqual(other._fields, this._fields);
  },
  get$hashCode(_) {
    var t1 = {};
    t1.hash = 0;
    this._fields.forEach$1(0, new A.UnknownFieldSet_hashCode_closure(t1));
    return t1.hash;
  },
  toString$0(_) {
    return this._toString$1("");
  },
  _toString$1(indent) {
    var t1, t2, t3, t4, t5, _i, tag, t6, t7, _i0, value, t8,
      stringBuffer = new A.StringBuffer("");
    for (t1 = this._fields, t2 = A._sorted(new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>")), type$.int), t3 = t2.length, t4 = indent + "  ", t5 = indent + "}\n", _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
      tag = t2[_i];
      t6 = t1.$index(0, tag);
      t6.toString;
      for (t6 = t6.get$values(), t7 = t6.length, _i0 = 0; _i0 < t6.length; t6.length === t7 || (0, A.throwConcurrentModificationError)(t6), ++_i0) {
        value = t6[_i0];
        if (value instanceof A.UnknownFieldSet) {
          t8 = stringBuffer._contents += indent + A.S(tag) + ": {\n";
          t8 += value._toString$1(t4);
          stringBuffer._contents = t8;
          stringBuffer._contents = t8 + t5;
        } else
          stringBuffer._contents += indent + A.S(tag) + ": " + A.S(value) + "\n";
      }
    }
    t1 = stringBuffer._contents;
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  },
  _markReadOnly$0() {
    var t1, t2, t3;
    if (this._isReadOnly)
      return;
    for (t1 = this._fields.get$values(), t2 = A._instanceType(t1), t2 = t2._eval$1("@<1>")._bind$1(t2._rest[1]), t1 = new A.MappedIterator(J.get$iterator$ax(t1.__internal$_iterable), t1._f, t2._eval$1("MappedIterator<1,2>")), t2 = t2._rest[1]; t1.moveNext$0();) {
      t3 = t1.__internal$_current;
      (t3 == null ? t2._as(t3) : t3)._markReadOnly$0();
    }
    this._isReadOnly = true;
  }
};
A.UnknownFieldSet__getField_closure.prototype = {
  call$0() {
    var t1 = type$.JSArray_Int64;
    return new A.UnknownFieldSetField(A._setArrayType([], type$.JSArray_List_int), A._setArrayType([], t1), A._setArrayType([], type$.JSArray_int), A._setArrayType([], t1), A._setArrayType([], type$.JSArray_UnknownFieldSet));
  },
  $signature: 19
};
A.UnknownFieldSet_hashCode_closure.prototype = {
  call$2(number, value) {
    var t1, hash;
    A._asInt(number);
    type$.Object._as(value);
    t1 = this._box_0;
    hash = 37 * t1.hash + number & 536870911;
    t1.hash = hash;
    t1.hash = 53 * hash + J.get$hashCode$(value) & 536870911;
  },
  $signature: 15
};
A.UnknownFieldSetField.prototype = {
  _markReadOnly$0() {
    var t1, _this = this;
    if (_this._isReadOnly)
      return;
    _this._isReadOnly = true;
    _this.set$_lengthDelimited(A.List_List$unmodifiable(_this._lengthDelimited, type$.List_int));
    t1 = type$.Int64;
    _this.set$_varints(A.List_List$unmodifiable(_this._varints, t1));
    _this.set$_fixed32s(A.List_List$unmodifiable(_this._fixed32s, type$.int));
    _this.set$_fixed64s(A.List_List$unmodifiable(_this._fixed64s, t1));
    _this.set$_groups(A.List_List$unmodifiable(_this._groups, type$.UnknownFieldSet));
  },
  $eq(_, other) {
    var i, t1, t2, _this = this;
    if (other == null)
      return false;
    if (!(other instanceof A.UnknownFieldSetField))
      return false;
    if (_this._lengthDelimited.length !== other._lengthDelimited.length)
      return false;
    for (i = 0; t1 = _this._lengthDelimited, i < t1.length; ++i) {
      t2 = other._lengthDelimited;
      if (!(i < t2.length))
        return A.ioore(t2, i);
      if (!A._areListsEqual(t2[i], t1[i]))
        return false;
    }
    if (!A._areListsEqual(other._varints, _this._varints))
      return false;
    if (!A._areListsEqual(other._fixed32s, _this._fixed32s))
      return false;
    if (!A._areListsEqual(other._fixed64s, _this._fixed64s))
      return false;
    if (!A._areListsEqual(other._groups, _this._groups))
      return false;
    return true;
  },
  get$hashCode(_) {
    var t1, t2, hash, _i, value, t3, i, t4, _this = this;
    for (t1 = _this._lengthDelimited, t2 = t1.length, hash = 0, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
      value = t1[_i];
      for (t3 = J.getInterceptor$asx(value), i = 0; i < t3.get$length(value); ++i) {
        t4 = t3.$index(value, i);
        if (typeof t4 !== "number")
          return A.iae(t4);
        hash = hash + t4 & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >>> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      hash = hash + ((hash & 16383) << 15) & 536870911;
    }
    for (t1 = _this._varints, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
      hash = hash + 7 * J.get$hashCode$(t1[_i]) & 536870911;
    for (t1 = _this._fixed32s, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
      hash = hash + 37 * J.get$hashCode$(t1[_i]) & 536870911;
    for (t1 = _this._fixed64s, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
      hash = hash + 53 * J.get$hashCode$(t1[_i]) & 536870911;
    for (t1 = _this._groups, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
      hash = hash + J.get$hashCode$(t1[_i]) & 536870911;
    return hash;
  },
  get$values() {
    var _this = this,
      t1 = A.List_List$of(_this._lengthDelimited, true, type$.dynamic);
    B.JSArray_methods.addAll$1(t1, _this._varints);
    B.JSArray_methods.addAll$1(t1, _this._fixed32s);
    B.JSArray_methods.addAll$1(t1, _this._fixed64s);
    B.JSArray_methods.addAll$1(t1, _this._groups);
    return t1;
  },
  get$length(_) {
    return this.get$values().length;
  },
  set$_lengthDelimited(_lengthDelimited) {
    this._lengthDelimited = type$.List_List_int._as(_lengthDelimited);
  },
  set$_varints(_varints) {
    this._varints = type$.List_Int64._as(_varints);
  },
  set$_fixed32s(_fixed32s) {
    this._fixed32s = type$.List_int._as(_fixed32s);
  },
  set$_fixed64s(_fixed64s) {
    this._fixed64s = type$.List_Int64._as(_fixed64s);
  },
  set$_groups(_groups) {
    this._groups = type$.List_UnknownFieldSet._as(_groups);
  }
};
A._areMapsEqual_closure.prototype = {
  call$1(key) {
    return A._deepEquals(this.lhs.$index(0, key), this.rhs.$index(0, key));
  },
  $signature: 10
};
A._HashUtils__hashObjects_closure.prototype = {
  call$2(h, i) {
    return A._HashUtils__combine(A._asInt(h), J.get$hashCode$(i));
  },
  $signature: 21
};
A.Matrix3.prototype = {
  toString$0(_) {
    return "[0] " + this.getRow$1(0).toString$0(0) + "\n[1] " + this.getRow$1(1).toString$0(0) + "\n[2] " + this.getRow$1(2).toString$0(0) + "\n";
  },
  $eq(_, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    if (other instanceof A.Matrix3) {
      t1 = this._m3storage;
      t2 = t1[0];
      t3 = other._m3storage;
      t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2] && t1[3] === t3[3] && t1[4] === t3[4] && t1[5] === t3[5] && t1[6] === t3[6] && t1[7] === t3[7] && t1[8] === t3[8];
    } else
      t1 = false;
    return t1;
  },
  get$hashCode(_) {
    return A.Object_hashAll(this._m3storage);
  },
  getRow$1(row) {
    var t3,
      t1 = new Float32Array(3),
      t2 = this._m3storage;
    if (!(row < 9))
      return A.ioore(t2, row);
    t1[0] = t2[row];
    t3 = 3 + row;
    if (!(t3 < 9))
      return A.ioore(t2, t3);
    t1[1] = t2[t3];
    t3 = 6 + row;
    if (!(t3 < 9))
      return A.ioore(t2, t3);
    t1[2] = t2[t3];
    return new A.Vector3(t1);
  }
};
A.Vector3.prototype = {
  toString$0(_) {
    var t1 = this._v3storage;
    return "[" + A.S(t1[0]) + "," + A.S(t1[1]) + "," + A.S(t1[2]) + "]";
  },
  $eq(_, other) {
    var t1, t2, t3;
    if (other == null)
      return false;
    if (other instanceof A.Vector3) {
      t1 = this._v3storage;
      t2 = t1[0];
      t3 = other._v3storage;
      t1 = t2 === t3[0] && t1[1] === t3[1] && t1[2] === t3[2];
    } else
      t1 = false;
    return t1;
  },
  get$hashCode(_) {
    return A.Object_hashAll(this._v3storage);
  },
  get$length(_) {
    var t1 = this._v3storage,
      t2 = t1[0],
      t3 = t1[1];
    t1 = t1[2];
    return Math.sqrt(t2 * t2 + t3 * t3 + t1 * t1);
  }
};
A.DartTrackpoint.prototype = {
  toString$0(_) {
    return "{time: " + this.time.toString$0(0) + ", sog: " + A.S(this.sog) + "}";
  },
  set$eulerAngles(eulerAngles) {
    this.eulerAngles = type$.List_double._as(eulerAngles);
  }
};
A.buildGpxTrackpoint_closure.prototype = {
  call$0() {
    var timestamp,
      t1 = this.builder,
      t2 = this.trackpoint;
    t1.attribute$2("lat", A.S(t2.latitude));
    t1.attribute$2("lon", A.S(t2.longitude));
    timestamp = t2.time.toString$0(0);
    t1.element$2$nest("time", B.JSString_methods.substring$2(timestamp, 0, 10) + "T" + B.JSString_methods.substring$1(timestamp, 11));
    t1.element$2$nest("extensions", new A.buildGpxTrackpoint__closure(t1, t2));
  },
  $signature: 0
};
A.buildGpxTrackpoint__closure.prototype = {
  call$0() {
    var t1 = this.builder,
      t2 = this.trackpoint;
    t1.element$2$nest("vtk:sog", A.S(t2.sog));
    t1.element$2$nest("vtk:cog", "" + t2.cog);
    t1.element$2$nest("vtk:headingMagnetic", "" + t2.magHeading);
    t1.element$2$nest("vtk:heel", "" + t2.heel);
    t1.element$2$nest("vtk:pitch", "" + t2.pitch);
  },
  $signature: 0
};
A.buildGpx_closure.prototype = {
  call$0() {
    var t1 = this.builder;
    t1.attribute$2("xmlns", "http://www.topografix.com/GPX/1/1");
    t1.attribute$2("xmlns:vtk", "http://www.velocitek.com/VelocitekGPX/v1");
    t1.attribute$2("version", "1.1");
    t1.element$2$nest("trk", new A.buildGpx__closure(t1, this.dartTrackpoints));
  },
  $signature: 0
};
A.buildGpx__closure.prototype = {
  call$0() {
    var t1 = this.builder;
    t1.element$2$nest("trkseg", new A.buildGpx___closure(this.dartTrackpoints, t1));
  },
  $signature: 0
};
A.buildGpx___closure.prototype = {
  call$0() {
    var t1, t2, i;
    for (t1 = this.dartTrackpoints, t2 = this.builder, i = 0; i < t1.length; ++i)
      A.buildGpxTrackpoint(t2, t1[i]);
  },
  $signature: 0
};
A.Record.prototype = {
  get$info_() {
    return $.$get$Record__i();
  }
};
A.Trackpoint.prototype = {
  get$info_() {
    return $.$get$Trackpoint__i();
  }
};
A.TimerEvent.prototype = {
  get$info_() {
    return $.$get$TimerEvent__i();
  }
};
A.ButtonEvent.prototype = {
  get$info_() {
    return $.$get$ButtonEvent__i();
  }
};
A.HardwareDescription.prototype = {
  get$info_() {
    return $.$get$HardwareDescription__i();
  }
};
A.MagneticDeclination.prototype = {
  get$info_() {
    return $.$get$MagneticDeclination__i();
  }
};
A.TimerEvent_TimerEventType.prototype = {};
A.ButtonEvent_ButtonEventType.prototype = {};
A.XmlBuilder.prototype = {
  text$1(text) {
    var lastChild,
      children = B.JSArray_methods.get$last(this._stack).children;
    if (children.length !== 0) {
      lastChild = B.JSArray_methods.get$last(children);
      if (lastChild instanceof A.XmlText) {
        lastChild.text += text;
        return;
      }
    }
    B.JSArray_methods.add$1(children, new A.XmlText(text, null));
  },
  element$2$nest($name, nest) {
    var t2, t3, _this = this,
      attributes = B.Map_empty,
      isSelfClosing = true,
      namespace = null,
      namespaces = B.Map_empty0,
      element = A.NodeBuilder$(),
      t1 = _this._stack;
    B.JSArray_methods.add$1(t1, element);
    try {
      J.forEach$1$ax(namespaces, _this.get$namespace());
      J.forEach$1$ax(attributes, _this.get$attribute());
      _this._insert$1(nest);
      t2 = element;
      t3 = _this._buildName$2($name, namespace);
      t2.__NodeBuilder_name_F !== $ && A.throwLateFieldAI("name");
      t2.__NodeBuilder_name_F = t3;
      element.set$isSelfClosing(isSelfClosing);
    } finally {
      if (0 >= t1.length)
        return A.ioore(t1, -1);
      t1.pop();
    }
    t1 = B.JSArray_methods.get$last(t1);
    t2 = element;
    t3 = t2.__NodeBuilder_name_F;
    t3 === $ && A.throwLateFieldNI("name");
    B.JSArray_methods.add$1(t1.children, A.XmlElement$(t3, t2.attributes, t2.children, true));
  },
  attribute$4$attributeType$namespace($name, value, attributeType, namespace) {
    var t1, t2, attribute;
    A._asString($name);
    type$.Object._as(value);
    t1 = this._buildName$2($name, namespace);
    t2 = J.toString$0$(value);
    attribute = A.XmlAttribute$(t1, t2, B.XmlAttributeType_PIp);
    B.JSArray_methods.add$1(B.JSArray_methods.get$last(this._stack).attributes, attribute);
  },
  attribute$2($name, value) {
    return this.attribute$4$attributeType$namespace($name, value, null, null);
  },
  namespace$2(uri, prefix) {
    var t1, meta;
    A._asString(uri);
    A._asStringQ(prefix);
    if (prefix === "xmlns" || prefix === "xml")
      throw A.wrapException(A.ArgumentError$('The "' + A.S(prefix) + '" prefix cannot be bound.'));
    t1 = this._stack;
    if (B.JSArray_methods.get$last(t1).namespaces.get$values().any$1(0, new A.XmlBuilder_namespace_closure(prefix)))
      throw A.wrapException(A.ArgumentError$('The "' + A.S(prefix) + '" prefix conflicts with existing binding.'));
    meta = new A.NamespaceData(prefix, false);
    B.JSArray_methods.add$1(B.JSArray_methods.get$last(t1).attributes, A.XmlAttribute$(meta.get$name(meta), uri, B.XmlAttributeType_PIp));
    B.JSArray_methods.get$last(t1).namespaces.$indexSet(0, uri, meta);
  },
  namespace$1(uri) {
    return this.namespace$2(uri, null);
  },
  buildDocument$0() {
    return this._build$1$1(new A.XmlBuilder_buildDocument_closure(), type$.XmlDocument);
  },
  _build$1$1(builder, $T) {
    var t1;
    A.checkTypeBound($T, type$.XmlNode, "T", "_build");
    $T._eval$1("0(NodeBuilder)")._as(builder);
    t1 = this._stack;
    if (t1.length !== 1)
      throw A.wrapException(A.StateError$("Unable to build an incomplete DOM element."));
    try {
      t1 = builder.call$1(B.JSArray_methods.get$last(t1));
      return t1;
    } finally {
      this._reset$0();
    }
  },
  _reset$0() {
    var node,
      t1 = this._stack;
    B.JSArray_methods.clear$0(t1);
    node = A.NodeBuilder$();
    node.namespaces.$indexSet(0, "http://www.w3.org/XML/1998/namespace", $.$get$NamespaceData_xmlData());
    B.JSArray_methods.add$1(t1, node);
  },
  _buildName$2($name, uri) {
    var t1 = A.XmlName_XmlName$fromString($name);
    return t1;
  },
  _insert$1(value) {
    var t1, _this = this;
    if (type$.void_Function._is(value))
      value.call$0();
    else if (type$.Iterable_dynamic._is(value))
      J.forEach$1$ax(value, _this.get$_insert());
    else if (value instanceof A.XmlNode)
      if (value instanceof A.XmlText)
        _this.text$1(value.text);
      else if (value instanceof A.XmlAttribute)
        B.JSArray_methods.add$1(B.JSArray_methods.get$last(_this._stack).attributes, A.XmlAttribute$(value.name.copy$0(), value.value, value.attributeType));
      else if (value instanceof A.XmlElement || value instanceof A.XmlData)
        B.JSArray_methods.add$1(B.JSArray_methods.get$last(_this._stack).children, value.copy$0());
      else {
        t1 = A.ArgumentError$("Unable to add element of type " + value.get$nodeType().toString$0(0));
        throw A.wrapException(t1);
      }
    else
      _this.text$1(J.toString$0$(value));
  }
};
A.XmlBuilder_namespace_closure.prototype = {
  call$1(meta) {
    return type$.NamespaceData._as(meta).prefix == this.prefix;
  },
  $signature: 25
};
A.XmlBuilder_buildDocument_closure.prototype = {
  call$1(builder) {
    return A.XmlDocument$(builder.children);
  },
  $signature: 26
};
A.NamespaceData.prototype = {
  get$name(_) {
    var t1 = this.prefix;
    if (t1 == null || t1.length === 0)
      t1 = A.XmlName_XmlName("xmlns", null);
    else {
      t1.toString;
      t1 = A.XmlName_XmlName(t1, "xmlns");
    }
    return t1;
  }
};
A.NodeBuilder.prototype = {
  set$isSelfClosing(isSelfClosing) {
    this.isSelfClosing = A._asBool(isSelfClosing);
  }
};
A.XmlDefaultEntityMapping.prototype = {
  encodeAttributeValue$2(input, type) {
    switch (type) {
      case B.XmlAttributeType_fgL:
        return A.stringReplaceAllFuncUnchecked(input, type$.Pattern._as($.$get$_singeQuoteAttributePattern()), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(A.default_mapping___singeQuoteAttributeReplace$closure())), type$.nullable_String_Function_String._as(null));
      case B.XmlAttributeType_PIp:
        return A.stringReplaceAllFuncUnchecked(input, type$.Pattern._as($.$get$_doubleQuoteAttributePattern()), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(A.default_mapping___doubleQuoteAttributeReplace$closure())), type$.nullable_String_Function_String._as(null));
    }
  }
};
A._asNumericCharacterReferences_closure.prototype = {
  call$1(rune) {
    return "&#x" + B.JSInt_methods.toRadixString$1(A._asInt(rune), 16).toUpperCase() + ";";
  },
  $signature: 27
};
A.XmlEntityMapping.prototype = {};
A.XmlAttributeType.prototype = {
  toString$0(_) {
    return "XmlAttributeType." + this._name;
  }
};
A.XmlNodeType.prototype = {
  toString$0(_) {
    return "XmlNodeType." + this._name;
  }
};
A.XmlException.prototype = {};
A.XmlParentException.prototype = {
  toString$0(_) {
    return "XmlParentException: " + this.message;
  }
};
A.XmlNodeTypeException.prototype = {
  toString$0(_) {
    return "XmlNodeTypeException: " + this.message;
  }
};
A.XmlAttributesBase.prototype = {
  get$attributes() {
    return B.List_empty;
  }
};
A.XmlHasAttributes.prototype = {
  get$attributes() {
    return this.XmlHasAttributes_attributes;
  }
};
A.XmlChildrenBase.prototype = {
  get$children() {
    return B.List_empty0;
  }
};
A.XmlHasChildren.prototype = {
  get$children() {
    return this.XmlHasChildren_children;
  }
};
A.XmlHasName.prototype = {};
A.XmlParentBase.prototype = {
  get$parent() {
    return null;
  },
  attachParent$1($parent) {
    return this._throwNoParent$0();
  },
  _throwNoParent$0() {
    return A.throwExpression(A.UnsupportedError$(this.toString$0(0) + " does not have a parent."));
  }
};
A.XmlHasParent.prototype = {
  get$parent() {
    return this.XmlHasParent__parent;
  },
  attachParent$1($parent) {
    A._instanceType(this)._eval$1("XmlHasParent.T")._as($parent);
    A.XmlParentException_checkNoParent(this);
    this.set$_parent($parent);
  },
  set$_parent(_parent) {
    this.XmlHasParent__parent = A._instanceType(this)._eval$1("XmlHasParent.T?")._as(_parent);
  }
};
A.XmlHasText.prototype = {
  get$text() {
    return this.get$innerText();
  },
  get$innerText() {
    var t1 = type$.XmlDescendantsIterable;
    return new A.MappedIterable(new A.WhereIterable(new A.XmlDescendantsIterable(this), t1._eval$1("bool(Iterable.E)")._as(new A.XmlHasText_innerText_closure()), t1._eval$1("WhereIterable<Iterable.E>")), t1._eval$1("String(Iterable.E)")._as(new A.XmlHasText_innerText_closure0()), t1._eval$1("MappedIterable<Iterable.E,String>")).join$0(0);
  }
};
A.XmlHasText_innerText_closure.prototype = {
  call$1(node) {
    return type$.XmlNode._as(node) instanceof A.XmlText || false;
  },
  $signature: 8
};
A.XmlHasText_innerText_closure0.prototype = {
  call$1(node) {
    return type$.XmlNode._as(node).get$text();
  },
  $signature: 29
};
A.XmlHasVisitor.prototype = {};
A.XmlHasWriter.prototype = {
  toXmlString$1$pretty(pretty) {
    var writer, t1, _null = null,
      buffer = new A.StringBuffer("");
    if (pretty)
      writer = new A.XmlPrettyWriter(0, "  ", "\n", _null, _null, _null, _null, buffer, B.C_XmlDefaultEntityMapping);
    else
      writer = new A.XmlWriter(buffer, B.C_XmlDefaultEntityMapping);
    this.accept$1(writer);
    t1 = buffer._contents;
    return t1.charCodeAt(0) == 0 ? t1 : t1;
  },
  toXmlString$0() {
    return this.toXmlString$1$pretty(false);
  },
  toString$0(_) {
    return this.toXmlString$0();
  }
};
A.XmlHasXml.prototype = {};
A.XmlDescendantsIterable.prototype = {
  get$iterator(_) {
    var t1 = new A.XmlDescendantsIterator(A._setArrayType([], type$.JSArray_XmlNode));
    t1.push$1(this._descendants$_start);
    return t1;
  }
};
A.XmlDescendantsIterator.prototype = {
  push$1(node) {
    var t1 = this._todo;
    B.JSArray_methods.addAll$1(t1, J.get$reversed$ax(node.get$children()));
    B.JSArray_methods.addAll$1(t1, J.get$reversed$ax(node.get$attributes()));
  },
  get$current() {
    var t1 = this.__XmlDescendantsIterator__current_A;
    t1 === $ && A.throwLateFieldNI("_current");
    return t1;
  },
  moveNext$0() {
    var t1 = this._todo,
      t2 = t1.length;
    if (t2 === 0)
      return false;
    else {
      if (0 >= t2)
        return A.ioore(t1, -1);
      t1 = type$.XmlNode._as(t1.pop());
      this.__XmlDescendantsIterator__current_A = t1;
      this.push$1(t1);
      return true;
    }
  }
};
A.XmlAttribute.prototype = {
  get$nodeType() {
    return B.XmlNodeType_0;
  },
  copy$0() {
    return A.XmlAttribute$(this.name.copy$0(), this.value, this.attributeType);
  },
  accept$1(visitor) {
    var t1, t2, t3;
    this.name.accept$1(visitor);
    t1 = visitor.buffer;
    t1._contents += "=";
    t2 = this.attributeType;
    t3 = t2.token;
    t1._contents += t3 + A.S(visitor.entityMapping.encodeAttributeValue$2(this.value, t2)) + t3;
    return null;
  },
  get$value() {
    return this.value;
  }
};
A._XmlAttribute_XmlNode_XmlHasName.prototype = {};
A._XmlAttribute_XmlNode_XmlHasName_XmlHasParent.prototype = {
  set$_parent(_parent) {
    this.XmlHasParent__parent = A._instanceType(this)._eval$1("XmlHasParent.T?")._as(_parent);
  }
};
A.XmlData.prototype = {
  get$text() {
    return this.text;
  }
};
A._XmlData_XmlNode_XmlHasParent.prototype = {
  set$_parent(_parent) {
    this.XmlHasParent__parent = A._instanceType(this)._eval$1("XmlHasParent.T?")._as(_parent);
  }
};
A.XmlDocument.prototype = {
  get$nodeType() {
    return B.XmlNodeType_5;
  },
  copy$0() {
    var t1 = this.XmlHasChildren_children,
      t2 = t1._base,
      t3 = A._arrayInstanceType(t2);
    return A.XmlDocument$(new A.MappedListIterable(t2, t3._eval$1("XmlNode(1)")._as(t1.$ti._eval$1("XmlNode(1)")._as(new A.XmlDocument_copy_closure())), t3._eval$1("MappedListIterable<1,XmlNode>")));
  },
  accept$1(visitor) {
    return visitor.visitDocument$1(this);
  }
};
A.XmlDocument_copy_closure.prototype = {
  call$1(each) {
    return type$.XmlNode._as(each).copy$0();
  },
  $signature: 13
};
A._XmlDocument_XmlNode_XmlHasChildren.prototype = {
  get$children() {
    return this.XmlHasChildren_children;
  }
};
A.XmlElement.prototype = {
  get$nodeType() {
    return B.XmlNodeType_7;
  },
  copy$0() {
    var t1 = this.XmlHasAttributes_attributes,
      t2 = t1._base,
      t3 = A._arrayInstanceType(t2),
      t4 = this.XmlHasChildren_children,
      t5 = t4._base,
      t6 = A._arrayInstanceType(t5);
    return A.XmlElement$(this.name.copy$0(), new A.MappedListIterable(t2, t3._eval$1("XmlAttribute(1)")._as(t1.$ti._eval$1("XmlAttribute(1)")._as(new A.XmlElement_copy_closure())), t3._eval$1("MappedListIterable<1,XmlAttribute>")), new A.MappedListIterable(t5, t6._eval$1("XmlNode(1)")._as(t4.$ti._eval$1("XmlNode(1)")._as(new A.XmlElement_copy_closure0())), t6._eval$1("MappedListIterable<1,XmlNode>")), true);
  },
  accept$1(visitor) {
    return visitor.visitElement$1(this);
  }
};
A.XmlElement_copy_closure.prototype = {
  call$1(each) {
    type$.XmlAttribute._as(each);
    return A.XmlAttribute$(each.name.copy$0(), each.value, each.attributeType);
  },
  $signature: 31
};
A.XmlElement_copy_closure0.prototype = {
  call$1(each) {
    return type$.XmlNode._as(each).copy$0();
  },
  $signature: 13
};
A._XmlElement_XmlNode_XmlHasName.prototype = {};
A._XmlElement_XmlNode_XmlHasName_XmlHasParent.prototype = {
  set$_parent(_parent) {
    this.XmlHasParent__parent = A._instanceType(this)._eval$1("XmlHasParent.T?")._as(_parent);
  }
};
A._XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes.prototype = {
  get$attributes() {
    return this.XmlHasAttributes_attributes;
  }
};
A._XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes_XmlHasChildren.prototype = {
  get$children() {
    return this.XmlHasChildren_children;
  }
};
A.XmlNode.prototype = {};
A._XmlNode_Object_XmlAttributesBase.prototype = {};
A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase.prototype = {};
A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText.prototype = {};
A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor.prototype = {};
A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter.prototype = {};
A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml.prototype = {};
A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml_XmlParentBase.prototype = {};
A.XmlProcessing.prototype = {
  get$nodeType() {
    return B.XmlNodeType_8;
  },
  copy$0() {
    return new A.XmlProcessing(this.target, this.text, null);
  },
  accept$1(visitor) {
    var t3,
      t1 = visitor.buffer,
      t2 = t1._contents += "<?";
    t2 = t1._contents = t2 + this.target;
    t3 = this.text;
    if (t3.length !== 0) {
      t2 += " ";
      t1._contents = t2;
      t3 = t1._contents = t2 + t3;
      t2 = t3;
    }
    t1._contents = t2 + "?>";
    return null;
  }
};
A.XmlText.prototype = {
  get$nodeType() {
    return B.XmlNodeType_9;
  },
  copy$0() {
    return new A.XmlText(this.text, null);
  },
  accept$1(visitor) {
    visitor.buffer._contents += A.stringReplaceAllFuncUnchecked(this.text, type$.Pattern._as($.$get$_textPattern()), type$.nullable_String_Function_Match._as(type$.String_Function_Match._as(A.default_mapping___textReplace$closure())), type$.nullable_String_Function_String._as(null));
    return null;
  }
};
A.XmlName.prototype = {
  accept$1(visitor) {
    visitor.buffer._contents += this.get$qualified();
    return null;
  },
  $eq(_, other) {
    if (other == null)
      return false;
    return other instanceof A.XmlName && other.get$qualified() === this.get$qualified();
  },
  get$hashCode(_) {
    return B.JSString_methods.get$hashCode(this.get$qualified());
  },
  $isXmlParentBase: 1
};
A._XmlName_Object_XmlHasVisitor.prototype = {};
A._XmlName_Object_XmlHasVisitor_XmlHasWriter.prototype = {};
A._XmlName_Object_XmlHasVisitor_XmlHasWriter_XmlHasParent.prototype = {
  set$_parent(_parent) {
    this.XmlHasParent__parent = A._instanceType(this)._eval$1("XmlHasParent.T?")._as(_parent);
  }
};
A.XmlNodeList.prototype = {
  add$1(_, value) {
    var t1, _this = this;
    _this.$ti._precomputed1._as(value);
    if (value.get$nodeType() === B.XmlNodeType_6)
      _this.addAll$1(0, _this._expandFragment$1(value));
    else {
      t1 = _this.__XmlNodeList__nodeTypes_F;
      t1 === $ && A.throwLateFieldNI("_nodeTypes");
      A.XmlNodeTypeException_checkValidType(value, t1);
      A.XmlParentException_checkNoParent(value);
      _this.super$DelegatingList$add(0, value);
      t1 = _this.__XmlNodeList__parent_F;
      t1 === $ && A.throwLateFieldNI("_parent");
      value.attachParent$1(t1);
    }
  },
  addAll$1(_, iterable) {
    var t1, _i, node, t2, _this = this,
      expanded = _this._expandNodes$1(_this.$ti._eval$1("Iterable<1>")._as(iterable));
    _this.super$DelegatingList$addAll(0, expanded);
    for (t1 = expanded.length, _i = 0; _i < expanded.length; expanded.length === t1 || (0, A.throwConcurrentModificationError)(expanded), ++_i) {
      node = expanded[_i];
      t2 = _this.__XmlNodeList__parent_F;
      t2 === $ && A.throwLateFieldNI("_parent");
      node.attachParent$1(t2);
    }
  },
  _expandFragment$1(fragment) {
    var t1 = this.$ti._precomputed1;
    return J.map$1$1$ax(t1._as(fragment).get$children(), new A.XmlNodeList__expandFragment_closure(this), t1);
  },
  _expandNodes$1(iterable) {
    var expanded, node, t2,
      t1 = this.$ti;
    t1._eval$1("Iterable<1>")._as(iterable);
    expanded = A._setArrayType([], t1._eval$1("JSArray<1>"));
    for (t1 = J.get$iterator$ax(iterable); t1.moveNext$0();) {
      node = t1.get$current();
      if (node.get$nodeType() === B.XmlNodeType_6)
        B.JSArray_methods.addAll$1(expanded, this._expandFragment$1(node));
      else {
        t2 = this.__XmlNodeList__nodeTypes_F;
        t2 === $ && A.throwLateFieldNI("_nodeTypes");
        if (!t2._collection$_map.containsKey$1(node.get$nodeType()))
          A.throwExpression(A.XmlNodeTypeException$("Got " + node.get$nodeType().toString$0(0) + ", but expected one of " + t2.join$1(0, ", "), node, t2));
        if (node.get$parent() != null)
          A.throwExpression(A.XmlParentException$(string$.Node_a, node, node.get$parent()));
        B.JSArray_methods.add$1(expanded, node);
      }
    }
    return expanded;
  },
  set$__XmlNodeList__nodeTypes_F(__XmlNodeList__nodeTypes_F) {
    this.__XmlNodeList__nodeTypes_F = type$.Set_XmlNodeType._as(__XmlNodeList__nodeTypes_F);
  }
};
A.XmlNodeList__expandFragment_closure.prototype = {
  call$1(node) {
    var t1, t2;
    type$.XmlNode._as(node);
    t1 = this.$this;
    t2 = t1.__XmlNodeList__nodeTypes_F;
    t2 === $ && A.throwLateFieldNI("_nodeTypes");
    A.XmlNodeTypeException_checkValidType(node, t2);
    return t1.$ti._precomputed1._as(node.copy$0());
  },
  $signature() {
    return this.$this.$ti._eval$1("1(XmlNode)");
  }
};
A.XmlPrefixName.prototype = {
  copy$0() {
    return new A.XmlPrefixName(this.prefix, this.local, this.qualified, null);
  },
  get$qualified() {
    return this.qualified;
  }
};
A.XmlSimpleName.prototype = {
  get$qualified() {
    return this.local;
  },
  copy$0() {
    return new A.XmlSimpleName(this.local, null);
  }
};
A.XmlPrettyWriter.prototype = {
  visitDocument$1(node) {
    var _this = this,
      t1 = _this.indent;
    _this.buffer._contents += B.JSString_methods.$mul(t1, _this.level);
    _this.writeIterable$2(_this.normalizeText$1(node.XmlHasChildren_children), _this.newLine + B.JSString_methods.$mul(t1, _this.level));
  },
  visitElement$1(node) {
    var t2, t3, t4, t5, t6, _this = this,
      t1 = _this.buffer;
    t1._contents += "<";
    t2 = node.name;
    t2.accept$1(_this);
    _this.writeAttributes$1(node);
    t3 = node.XmlHasChildren_children;
    t4 = t3._base;
    t5 = t4.length === 0;
    if (t5 && true)
      t1._contents += "/>";
    else {
      t1._contents += ">";
      if (!t5)
        if (_this.pretty)
          if (B.JSArray_methods.every$1(t4, t3.$ti._eval$1("bool(1)")._as(new A.XmlPrettyWriter_visitElement_closure())))
            _this.writeIterable$1(_this.normalizeText$1(t3));
          else {
            t4 = ++_this.level;
            t5 = _this.newLine;
            t1._contents += t5;
            t6 = _this.indent;
            t1._contents += B.JSString_methods.$mul(t6, t4);
            _this.writeIterable$2(_this.normalizeText$1(t3), t5 + B.JSString_methods.$mul(t6, _this.level));
            t3 = --_this.level;
            t1._contents += t5;
            t1._contents += B.JSString_methods.$mul(t6, t3);
          }
        else
          _this.writeIterable$1(t3);
      t1._contents += "</";
      t2.accept$1(_this);
      t1._contents += ">";
    }
  },
  writeAttributes$1(node) {
    var t2, t3, _i, attribute,
      t1 = type$.List_XmlAttribute._as(node.XmlHasAttributes_attributes)._base,
      result = A._setArrayType(t1.slice(0), A._arrayInstanceType(t1));
    t1 = result.length;
    t2 = type$.XmlHasVisitor;
    t3 = this.buffer;
    _i = 0;
    for (; _i < result.length; result.length === t1 || (0, A.throwConcurrentModificationError)(result), ++_i) {
      attribute = result[_i];
      this.pretty;
      t3._contents += " ";
      t2._as(attribute).accept$1(this);
    }
  },
  normalizeText$1(nodes) {
    var result, t1, t2, t3, t4, t5, t6, text;
    type$.List_XmlNode._as(nodes);
    result = A._setArrayType([], type$.JSArray_XmlNode);
    for (t1 = nodes._base, t2 = A._arrayInstanceType(t1), t1 = new J.ArrayIterator(t1, t1.length, t2._eval$1("ArrayIterator<1>")), t2 = t2._precomputed1, t3 = type$.Pattern; t1.moveNext$0();) {
      t4 = t1._current;
      if (t4 == null)
        t4 = t2._as(t4);
      if (t4 instanceof A.XmlText) {
        t5 = B.JSString_methods.trim$0(t4.text);
        t6 = t3._as($.$get$_whitespaceOrLineTerminators());
        text = A.stringReplaceAllUnchecked(t5, t6, " ");
        if (text.length !== 0)
          if (result.length !== 0 && B.JSArray_methods.get$last(result) instanceof A.XmlText)
            B.JSArray_methods.set$last(result, new A.XmlText(B.JSArray_methods.get$last(result).get$text() + " " + text, null));
          else if (t4.text !== text)
            B.JSArray_methods.add$1(result, new A.XmlText(text, null));
          else
            B.JSArray_methods.add$1(result, t4);
      } else
        B.JSArray_methods.add$1(result, t4);
    }
    return result;
  }
};
A.XmlPrettyWriter_visitElement_closure.prototype = {
  call$1(each) {
    return type$.XmlNode._as(each) instanceof A.XmlText;
  },
  $signature: 8
};
A.XmlVisitor.prototype = {};
A.XmlWriter.prototype = {
  visitDocument$1(node) {
    this.writeIterable$1(node.XmlHasChildren_children);
  },
  visitElement$1(node) {
    var t2, t3, t4, t5, _this = this,
      t1 = _this.buffer;
    t1._contents += "<";
    t2 = node.name;
    t2.accept$1(_this);
    _this.writeAttributes$1(node);
    t3 = node.XmlHasChildren_children;
    t4 = t3._base.length === 0 && true;
    t5 = t1._contents;
    if (t4)
      t1._contents = t5 + "/>";
    else {
      t1._contents = t5 + ">";
      _this.writeIterable$1(t3);
      t1._contents += "</";
      t2.accept$1(_this);
      t1._contents += ">";
    }
  },
  writeAttributes$1(node) {
    var t1 = node.XmlHasAttributes_attributes;
    if (t1._base.length !== 0) {
      this.buffer._contents += " ";
      this.writeIterable$2(t1, " ");
    }
  },
  writeIterable$2(nodes, separator) {
    var t1, t2, t3, t4, t5, _this = this,
      iterator = J.get$iterator$ax(type$.Iterable_XmlHasVisitor._as(nodes));
    if (iterator.moveNext$0())
      if (separator == null || separator.length === 0) {
        t1 = type$.XmlHasVisitor;
        t2 = iterator.$ti._precomputed1;
        do {
          t3 = iterator._current;
          t1._as(t3 == null ? t2._as(t3) : t3).accept$1(_this);
        } while (iterator.moveNext$0());
      } else {
        t1 = iterator._current;
        if (t1 == null)
          t1 = iterator.$ti._precomputed1._as(t1);
        t2 = type$.XmlHasVisitor;
        t2._as(t1).accept$1(_this);
        for (t1 = _this.buffer, t3 = A.S(separator), t4 = iterator.$ti._precomputed1; iterator.moveNext$0();) {
          t1._contents += t3;
          t5 = iterator._current;
          t2._as(t5 == null ? t4._as(t5) : t5).accept$1(_this);
        }
      }
  },
  writeIterable$1(nodes) {
    return this.writeIterable$2(nodes, null);
  }
};
A._XmlWriter_Object_XmlVisitor.prototype = {};
(function aliases() {
  var _ = J.LegacyJavaScriptObject.prototype;
  _.super$LegacyJavaScriptObject$toString = _.toString$0;
  _ = A.JsLinkedHashMap.prototype;
  _.super$JsLinkedHashMap$internalContainsKey = _.internalContainsKey$1;
  _.super$JsLinkedHashMap$internalGet = _.internalGet$1;
  _.super$JsLinkedHashMap$internalSet = _.internalSet$2;
  _.super$JsLinkedHashMap$internalRemove = _.internalRemove$1;
  _ = A.DelegatingList.prototype;
  _.super$DelegatingList$add = _.add$1;
  _.super$DelegatingList$addAll = _.addAll$1;
})();
(function installTearOffs() {
  var _static_2 = hunkHelpers._static_2,
    _static_1 = hunkHelpers._static_1,
    _static = hunkHelpers.installStaticTearOff,
    _static_0 = hunkHelpers._static_0,
    _instance_0_u = hunkHelpers._instance_0u,
    _instance = hunkHelpers.installInstanceTearOff,
    _instance_1_u = hunkHelpers._instance_1u;
  _static_2(J, "_interceptors_JSArray__compareAny$closure", "JSArray__compareAny", 45);
  _static_1(A, "_js_helper_GeneralConstantMap__constantMapHashCode$closure", "GeneralConstantMap__constantMapHashCode", 33);
  _static_2(A, "collection___defaultEquals$closure", "_defaultEquals", 34);
  _static_1(A, "convert___defaultToEncodable$closure", "_defaultToEncodable", 4);
  _static_1(A, "protobuf___checkNotNull$closure", "_checkNotNull", 14);
  _static(A, "protobuf__defaultFrozenMessageModificationHandler$closure", 1, null, ["call$2", "call$1"], ["defaultFrozenMessageModificationHandler", function(messageName) {
    return A.defaultFrozenMessageModificationHandler(messageName, null);
  }], 7, 0);
  _static_0(A, "protobuf_PbFieldType__STRING_EMPTY$closure", "PbFieldType__STRING_EMPTY", 35);
  _static_0(A, "protobuf_PbFieldType__BYTES_EMPTY$closure", "PbFieldType__BYTES_EMPTY", 36);
  _static_0(A, "protobuf_PbFieldType__BOOL_FALSE$closure", "PbFieldType__BOOL_FALSE", 11);
  _static_0(A, "protobuf_PbFieldType__INT_ZERO$closure", "PbFieldType__INT_ZERO", 1);
  _static_0(A, "protobuf_PbFieldType__DOUBLE_ZERO$closure", "PbFieldType__DOUBLE_ZERO", 6);
  var _;
  _instance_0_u(_ = A.CodedBufferReader.prototype, "get$readInt32", "readInt32$0", 1);
  _instance_0_u(_, "get$readInt64", "readInt64$0", 2);
  _instance_0_u(_, "get$readUint32", "readUint32$0", 1);
  _instance_0_u(_, "get$readUint64", "readUint64$0", 2);
  _instance_0_u(_, "get$readSint32", "readSint32$0", 1);
  _instance_0_u(_, "get$readSint64", "readSint64$0", 2);
  _instance_0_u(_, "get$readFixed32", "readFixed32$0", 1);
  _instance_0_u(_, "get$readFixed64", "readFixed64$0", 2);
  _instance_0_u(_, "get$readSfixed32", "readSfixed32$0", 1);
  _instance_0_u(_, "get$readSfixed64", "readSfixed64$0", 2);
  _instance_0_u(_, "get$readBool", "readBool$0", 11);
  _instance_0_u(_, "get$readFloat", "readFloat$0", 6);
  _instance_0_u(_, "get$readDouble", "readDouble$0", 6);
  _static_1(A, "converter__conversionWorker$closure", "conversionWorker", 37);
  _static_0(A, "vtk_pb_Record_create$closure", "Record_create", 38);
  _static_0(A, "vtk_pb_Trackpoint_create$closure", "Trackpoint_create", 39);
  _static_0(A, "vtk_pb_TimerEvent_create$closure", "TimerEvent_create", 40);
  _static_0(A, "vtk_pb_ButtonEvent_create$closure", "ButtonEvent_create", 41);
  _static_0(A, "vtk_pb_HardwareDescription_create$closure", "HardwareDescription_create", 42);
  _static_0(A, "vtk_pb_MagneticDeclination_create$closure", "MagneticDeclination_create", 43);
  _static_1(A, "vtk_pbenum_TimerEvent_TimerEventType_valueOf$closure", "TimerEvent_TimerEventType_valueOf", 44);
  _static_1(A, "vtk_pbenum_ButtonEvent_ButtonEventType_valueOf$closure", "ButtonEvent_ButtonEventType_valueOf", 32);
  _instance(_ = A.XmlBuilder.prototype, "get$attribute", 0, 2, null, ["call$4$attributeType$namespace", "call$2"], ["attribute$4$attributeType$namespace", "attribute$2"], 22, 0, 0);
  _instance(_, "get$namespace", 0, 1, null, ["call$2", "call$1"], ["namespace$2", "namespace$1"], 7, 0, 0);
  _instance_1_u(_, "get$_insert", "_insert$1", 14);
  _static_1(A, "default_mapping___textReplace$closure", "_textReplace", 3);
  _static_1(A, "default_mapping___singeQuoteAttributeReplace$closure", "_singeQuoteAttributeReplace", 3);
  _static_1(A, "default_mapping___doubleQuoteAttributeReplace$closure", "_doubleQuoteAttributeReplace", 3);
})();
(function inheritance() {
  var _mixin = hunkHelpers.mixin,
    _mixinHard = hunkHelpers.mixinHard,
    _inherit = hunkHelpers.inherit,
    _inheritMany = hunkHelpers.inheritMany;
  _inherit(A.Object, null);
  _inheritMany(A.Object, [A.JS_CONST, J.Interceptor, J.ArrayIterator, A.Error, A._ListBase_Object_ListMixin, A.Iterable, A.ListIterator, A.Iterator, A.FixedLengthListMixin, A.UnmodifiableListMixin, A.Symbol, A.MapView, A.ConstantMap, A.Closure, A.JSInvocationMirror, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A._Required, A.MapMixin, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.JSSyntaxRegExp, A._MatchImplementation, A._AllMatchesIterator, A.Rti, A._FunctionParameters, A._Type, A._IterationMarker, A._SyncStarIterator, A.StreamTransformerBase, A.ListMixin, A._UnmodifiableMapMixin, A.SetMixin, A.__SetBase_Object_SetMixin, A._UnmodifiableSetMixin, A.Codec, A._JsonStringifier, A._Utf8Encoder, A._Utf8Decoder, A.DateTime, A._Enum, A.OutOfMemoryError, A.StackOverflowError, A.FormatException, A.MapEntry, A.Null, A.RuneIterator, A.StringBuffer, A._DelegatingIterableBase, A.Int64, A.BuilderInfo, A.CodedBufferReader, A.InvalidProtocolBufferException, A._ExtensionFieldSet, A._EmptyExtensionRegistry, A.FieldInfo, A._FieldSet, A.GeneratedMessage, A._SingletonMaker, A.PackageName, A.ProtobufEnum, A.UnknownFieldSet, A.UnknownFieldSetField, A.Matrix3, A.Vector3, A.DartTrackpoint, A.XmlBuilder, A.NamespaceData, A.NodeBuilder, A.XmlEntityMapping, A.XmlException, A.XmlAttributesBase, A.XmlHasAttributes, A.XmlChildrenBase, A.XmlHasChildren, A.XmlHasName, A.XmlParentBase, A.XmlHasParent, A.XmlHasText, A.XmlHasVisitor, A.XmlHasWriter, A.XmlHasXml, A._XmlNode_Object_XmlAttributesBase, A._XmlName_Object_XmlHasVisitor, A._XmlWriter_Object_XmlVisitor, A.XmlVisitor]);
  _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JSArray, J.JSNumber, J.JSString, A.NativeTypedData]);
  _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, A.DomException]);
  _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
  _inherit(J.JSUnmodifiableArray, J.JSArray);
  _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
  _inheritMany(A.Error, [A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A.RuntimeError, A.AssertionError, A._Error, A.JsonUnsupportedObjectError, A.NullThrownError, A.ArgumentError, A.NoSuchMethodError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError, A.CyclicInitializationError]);
  _inherit(A.ListBase, A._ListBase_Object_ListMixin);
  _inheritMany(A.ListBase, [A.UnmodifiableListBase, A.PbListBase]);
  _inherit(A.CodeUnits, A.UnmodifiableListBase);
  _inheritMany(A.Iterable, [A.EfficientLengthIterable, A.MappedIterable, A.WhereIterable, A._ConstantMapKeyIterable, A.IterableBase, A.Runes]);
  _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.LinkedHashMapKeyIterable]);
  _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
  _inheritMany(A.Iterator, [A.MappedIterator, A.WhereIterator, A.XmlDescendantsIterator]);
  _inheritMany(A.ListIterable, [A.MappedListIterable, A.ReversedListIterable]);
  _inherit(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A.MapView);
  _inherit(A.UnmodifiableMapView, A._UnmodifiableMapView_MapView__UnmodifiableMapMixin);
  _inherit(A.ConstantMapView, A.UnmodifiableMapView);
  _inheritMany(A.Closure, [A.Closure2Args, A.GeneralConstantMap__typeTest_closure, A.Closure0Args, A.TearOffClosure, A.JsLinkedHashMap_values_closure, A.initHooks_closure, A.initHooks_closure1, A._LinkedCustomHashMap_closure, A.MapMixin_entries_closure, A._readPackable_readToList, A._readPackableToListEnum_readToList, A._FieldSet__hashField_closure, A._FieldSet_writeString_closure, A._areMapsEqual_closure, A.XmlBuilder_namespace_closure, A.XmlBuilder_buildDocument_closure, A._asNumericCharacterReferences_closure, A.XmlHasText_innerText_closure, A.XmlHasText_innerText_closure0, A.XmlDocument_copy_closure, A.XmlElement_copy_closure, A.XmlElement_copy_closure0, A.XmlNodeList__expandFragment_closure, A.XmlPrettyWriter_visitElement_closure]);
  _inheritMany(A.Closure2Args, [A.ConstantMap_map_closure, A.Primitives_functionNoSuchMethod_closure, A.initHooks_closure0, A.MapBase_mapToString_closure, A._JsonStringifier_writeMap_closure, A.NoSuchMethodError_toString_closure, A.BuilderInfo__computeSortedByTag_closure, A._FieldSet_writeString_renderValue, A._FieldSet_writeString_writeFieldValue, A.UnknownFieldSet_hashCode_closure, A._HashUtils__hashObjects_closure]);
  _inheritMany(A.ConstantMap, [A.ConstantStringMap, A.GeneralConstantMap]);
  _inherit(A.NullError, A.TypeError);
  _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
  _inherit(A._AssertionError, A.AssertionError);
  _inherit(A.MapBase, A.MapMixin);
  _inherit(A.JsLinkedHashMap, A.MapBase);
  _inheritMany(A.IterableBase, [A._AllMatchesIterable, A._SyncStarIterable, A.XmlDescendantsIterable]);
  _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
  _inheritMany(A.NativeTypedArray, [A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
  _inherit(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
  _inherit(A.NativeTypedArrayOfDouble, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
  _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
  _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
  _inherit(A.NativeFloat32List, A.NativeTypedArrayOfDouble);
  _inherit(A.NativeUint8List, A.NativeTypedArrayOfInt);
  _inherit(A._TypeError, A._Error);
  _inherit(A._LinkedCustomHashMap, A.JsLinkedHashMap);
  _inherit(A._SetBase, A.__SetBase_Object_SetMixin);
  _inherit(A.__UnmodifiableSet__SetBase__UnmodifiableSetMixin, A._SetBase);
  _inherit(A._UnmodifiableSet, A.__UnmodifiableSet__SetBase__UnmodifiableSetMixin);
  _inheritMany(A.Closure0Args, [A.Utf8Decoder__decoder_closure, A.Utf8Decoder__decoderNonfatal_closure, A._readPackableToList_closure, A.FieldInfo_findMakeDefault_closure, A._SingletonMaker__frozenSingletonCreator_closure, A.UnknownFieldSet__getField_closure, A.buildGpxTrackpoint_closure, A.buildGpxTrackpoint__closure, A.buildGpx_closure, A.buildGpx__closure, A.buildGpx___closure]);
  _inherit(A.Converter, A.StreamTransformerBase);
  _inheritMany(A.Codec, [A.Encoding, A.JsonCodec]);
  _inherit(A.JsonCyclicError, A.JsonUnsupportedObjectError);
  _inheritMany(A.Converter, [A.JsonEncoder, A.Utf8Encoder, A.Utf8Decoder]);
  _inherit(A._JsonStringStringifier, A._JsonStringifier);
  _inherit(A.Utf8Codec, A.Encoding);
  _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
  _inherit(A.DelegatingList, A._DelegatingIterableBase);
  _inheritMany(A.PbListBase, [A.FrozenPbList, A.PbList]);
  _inheritMany(A.GeneratedMessage, [A.Record, A.Trackpoint, A.TimerEvent, A.ButtonEvent, A.HardwareDescription, A.MagneticDeclination]);
  _inheritMany(A.ProtobufEnum, [A.TimerEvent_TimerEventType, A.ButtonEvent_ButtonEventType]);
  _inherit(A.XmlDefaultEntityMapping, A.XmlEntityMapping);
  _inheritMany(A._Enum, [A.XmlAttributeType, A.XmlNodeType]);
  _inheritMany(A.XmlException, [A.XmlParentException, A.XmlNodeTypeException]);
  _inherit(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase, A._XmlNode_Object_XmlAttributesBase);
  _inherit(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText, A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase);
  _inherit(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor, A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText);
  _inherit(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter, A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor);
  _inherit(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml, A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter);
  _inherit(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml_XmlParentBase, A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml);
  _inherit(A.XmlNode, A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml_XmlParentBase);
  _inheritMany(A.XmlNode, [A._XmlAttribute_XmlNode_XmlHasName, A._XmlData_XmlNode_XmlHasParent, A._XmlDocument_XmlNode_XmlHasChildren, A._XmlElement_XmlNode_XmlHasName]);
  _inherit(A._XmlAttribute_XmlNode_XmlHasName_XmlHasParent, A._XmlAttribute_XmlNode_XmlHasName);
  _inherit(A.XmlAttribute, A._XmlAttribute_XmlNode_XmlHasName_XmlHasParent);
  _inherit(A.XmlData, A._XmlData_XmlNode_XmlHasParent);
  _inherit(A.XmlDocument, A._XmlDocument_XmlNode_XmlHasChildren);
  _inherit(A._XmlElement_XmlNode_XmlHasName_XmlHasParent, A._XmlElement_XmlNode_XmlHasName);
  _inherit(A._XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes, A._XmlElement_XmlNode_XmlHasName_XmlHasParent);
  _inherit(A._XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes_XmlHasChildren, A._XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes);
  _inherit(A.XmlElement, A._XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes_XmlHasChildren);
  _inheritMany(A.XmlData, [A.XmlProcessing, A.XmlText]);
  _inherit(A._XmlName_Object_XmlHasVisitor_XmlHasWriter, A._XmlName_Object_XmlHasVisitor);
  _inherit(A._XmlName_Object_XmlHasVisitor_XmlHasWriter_XmlHasParent, A._XmlName_Object_XmlHasVisitor_XmlHasWriter);
  _inherit(A.XmlName, A._XmlName_Object_XmlHasVisitor_XmlHasWriter_XmlHasParent);
  _inherit(A.XmlNodeList, A.DelegatingList);
  _inheritMany(A.XmlName, [A.XmlPrefixName, A.XmlSimpleName]);
  _inherit(A.XmlWriter, A._XmlWriter_Object_XmlVisitor);
  _inherit(A.XmlPrettyWriter, A.XmlWriter);
  _mixin(A.UnmodifiableListBase, A.UnmodifiableListMixin);
  _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A.ListMixin);
  _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
  _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListMixin);
  _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
  _mixin(A._ListBase_Object_ListMixin, A.ListMixin);
  _mixin(A._UnmodifiableMapView_MapView__UnmodifiableMapMixin, A._UnmodifiableMapMixin);
  _mixin(A.__SetBase_Object_SetMixin, A.SetMixin);
  _mixin(A.__UnmodifiableSet__SetBase__UnmodifiableSetMixin, A._UnmodifiableSetMixin);
  _mixin(A._XmlAttribute_XmlNode_XmlHasName, A.XmlHasName);
  _mixinHard(A._XmlAttribute_XmlNode_XmlHasName_XmlHasParent, A.XmlHasParent);
  _mixinHard(A._XmlData_XmlNode_XmlHasParent, A.XmlHasParent);
  _mixinHard(A._XmlDocument_XmlNode_XmlHasChildren, A.XmlHasChildren);
  _mixin(A._XmlElement_XmlNode_XmlHasName, A.XmlHasName);
  _mixinHard(A._XmlElement_XmlNode_XmlHasName_XmlHasParent, A.XmlHasParent);
  _mixinHard(A._XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes, A.XmlHasAttributes);
  _mixinHard(A._XmlElement_XmlNode_XmlHasName_XmlHasParent_XmlHasAttributes_XmlHasChildren, A.XmlHasChildren);
  _mixin(A._XmlNode_Object_XmlAttributesBase, A.XmlAttributesBase);
  _mixin(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase, A.XmlChildrenBase);
  _mixin(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText, A.XmlHasText);
  _mixin(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor, A.XmlHasVisitor);
  _mixin(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter, A.XmlHasWriter);
  _mixin(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml, A.XmlHasXml);
  _mixin(A._XmlNode_Object_XmlAttributesBase_XmlChildrenBase_XmlHasText_XmlHasVisitor_XmlHasWriter_XmlHasXml_XmlParentBase, A.XmlParentBase);
  _mixin(A._XmlName_Object_XmlHasVisitor, A.XmlHasVisitor);
  _mixin(A._XmlName_Object_XmlHasVisitor_XmlHasWriter, A.XmlHasWriter);
  _mixinHard(A._XmlName_Object_XmlHasVisitor_XmlHasWriter_XmlHasParent, A.XmlHasParent);
  _mixin(A._XmlWriter_Object_XmlVisitor, A.XmlVisitor);
})();
var init = {
  typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
  mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List"},
  mangledNames: {},
  types: ["Null()", "int()", "Int64()", "String(Match)", "@(@)", "@()", "double()", "~(String[String?])", "bool(XmlNode)", "~(List<@>)", "bool(@)", "bool()", "~(Object?,Object?)", "XmlNode(XmlNode)", "~(Object?)", "~(int,Object)", "bool(Object?)", "~(@,String)", "~(int)", "UnknownFieldSetField()", "~(Symbol0,@)", "int(int,@)", "~(String,Object{attributeType:XmlAttributeType?,namespace:String?})", "int(FieldInfo<@>,FieldInfo<@>)", "@(@,String)", "bool(NamespaceData)", "XmlDocument(NodeBuilder)", "String(int)", "@(String)", "String(XmlNode)", "~(String,@)", "XmlAttribute(XmlAttribute)", "ButtonEvent_ButtonEventType?(int)", "int(Object?)", "bool(Object?,Object?)", "String()", "List<int>()", "String(String)", "Record()", "Trackpoint()", "TimerEvent()", "ButtonEvent()", "HardwareDescription()", "MagneticDeclination()", "TimerEvent_TimerEventType?(int)", "int(@,@)", "~(@,@)"],
  interceptorsByTag: null,
  leafTags: null,
  arrayRti: Symbol("$ti")
};
A._Universe_addRules(init.typeUniverse, JSON.parse('{"PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","JavaScriptFunction":"LegacyJavaScriptObject","JSBool":{"bool":[]},"JSNull":{"Null":[]},"JSArray":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"JSIndexable":["1"]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"JSIndexable":["1"]},"ArrayIterator":{"Iterator":["1"]},"JSNumber":{"double":[],"num":[],"Comparable":["num"]},"JSInt":{"double":[],"int":[],"num":[],"Comparable":["num"]},"JSNumNotInt":{"double":[],"num":[],"Comparable":["num"]},"JSString":{"String":[],"Comparable":["String"],"Pattern":[],"JSIndexable":["@"]},"LateError":{"Error":[]},"CodeUnits":{"ListMixin":["int"],"UnmodifiableListMixin":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListMixin.E":"int","UnmodifiableListMixin.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"ListIterator":{"Iterator":["1"]},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedIterator":{"Iterator":["2"]},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListIterable.E":"2"},"WhereIterable":{"Iterable":["1"],"Iterable.E":"1"},"WhereIterator":{"Iterator":["1"]},"UnmodifiableListBase":{"ListMixin":["1"],"UnmodifiableListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ReversedListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"Symbol":{"Symbol0":[]},"ConstantMapView":{"UnmodifiableMapView":["1","2"],"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_ConstantMapKeyIterable":{"Iterable":["1"],"Iterable.E":"1"},"GeneralConstantMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"JSInvocationMirror":{"Invocation":[]},"NullError":{"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"Closure":{"Function":[]},"Closure0Args":{"Function":[]},"Closure2Args":{"Function":[]},"TearOffClosure":{"Function":[]},"StaticClosure":{"Function":[]},"BoundClosure":{"Function":[]},"RuntimeError":{"Error":[]},"_AssertionError":{"Error":[]},"JsLinkedHashMap":{"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"LinkedHashMapKeyIterator":{"Iterator":["1"]},"JSSyntaxRegExp":{"Pattern":[]},"_MatchImplementation":{"RegExpMatch":[],"Match":[]},"_AllMatchesIterable":{"Iterable":["RegExpMatch"],"Iterable.E":"RegExpMatch"},"_AllMatchesIterator":{"Iterator":["RegExpMatch"]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"JSIndexable":["1"]},"NativeTypedArrayOfDouble":{"ListMixin":["double"],"JavaScriptIndexingBehavior":["double"],"List":["double"],"EfficientLengthIterable":["double"],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"]},"NativeTypedArrayOfInt":{"ListMixin":["int"],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"]},"NativeFloat32List":{"ListMixin":["double"],"Float32List":[],"JavaScriptIndexingBehavior":["double"],"List":["double"],"EfficientLengthIterable":["double"],"JSIndexable":["double"],"Iterable":["double"],"FixedLengthListMixin":["double"],"ListMixin.E":"double","FixedLengthListMixin.E":"double"},"NativeUint8List":{"ListMixin":["int"],"Uint8List":[],"JavaScriptIndexingBehavior":["int"],"List":["int"],"EfficientLengthIterable":["int"],"JSIndexable":["int"],"Iterable":["int"],"FixedLengthListMixin":["int"],"ListMixin.E":"int","FixedLengthListMixin.E":"int"},"_Type":{"Type":[]},"_Error":{"Error":[]},"_TypeError":{"Error":[]},"_SyncStarIterator":{"Iterator":["1"]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"_LinkedCustomHashMap":{"JsLinkedHashMap":["1","2"],"MapMixin":["1","2"],"LinkedHashMap":["1","2"],"Map":["1","2"],"MapMixin.K":"1","MapMixin.V":"2"},"IterableBase":{"Iterable":["1"]},"ListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"MapMixin":["1","2"],"Map":["1","2"]},"MapMixin":{"Map":["1","2"]},"MapView":{"Map":["1","2"]},"UnmodifiableMapView":{"_UnmodifiableMapView_MapView__UnmodifiableMapMixin":["1","2"],"MapView":["1","2"],"_UnmodifiableMapMixin":["1","2"],"Map":["1","2"]},"_SetBase":{"SetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_UnmodifiableSet":{"SetMixin":["1"],"_UnmodifiableSetMixin":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"Encoding":{"Codec":["String","List<int>"]},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"JsonCodec":{"Codec":["Object?","String"],"Codec.S":"Object?"},"JsonEncoder":{"Converter":["Object?","String"]},"Utf8Codec":{"Codec":["String","List<int>"],"Codec.S":"String"},"Utf8Encoder":{"Converter":["String","List<int>"]},"Utf8Decoder":{"Converter":["List<int>","String"]},"DateTime":{"Comparable":["DateTime"]},"double":{"num":[],"Comparable":["num"]},"int":{"num":[],"Comparable":["num"]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"num":{"Comparable":["num"]},"RegExpMatch":{"Match":[]},"String":{"Comparable":["String"],"Pattern":[]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"NullThrownError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"NoSuchMethodError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"CyclicInitializationError":{"Error":[]},"Runes":{"Iterable":["int"],"Iterable.E":"int"},"RuneIterator":{"Iterator":["int"]},"StringBuffer":{"StringSink":[]},"_DelegatingIterableBase":{"Iterable":["1"]},"DelegatingList":{"List":["1"],"_DelegatingIterableBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"Int64":{"Comparable":["Object"]},"Extension":{"FieldInfo":["1"]},"_EmptyExtensionRegistry":{"ExtensionRegistry":[]},"FrozenPbList":{"PbListBase":["1"],"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListMixin.E":"1"},"PbList":{"PbListBase":["1"],"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"ListMixin.E":"1"},"PbListBase":{"ListMixin":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"Record":{"GeneratedMessage":[]},"Trackpoint":{"GeneratedMessage":[]},"TimerEvent":{"GeneratedMessage":[]},"ButtonEvent":{"GeneratedMessage":[]},"HardwareDescription":{"GeneratedMessage":[]},"MagneticDeclination":{"GeneratedMessage":[]},"TimerEvent_TimerEventType":{"ProtobufEnum":[]},"ButtonEvent_ButtonEventType":{"ProtobufEnum":[]},"XmlDefaultEntityMapping":{"XmlEntityMapping":[]},"XmlDescendantsIterable":{"Iterable":["XmlNode"],"Iterable.E":"XmlNode"},"XmlDescendantsIterator":{"Iterator":["XmlNode"]},"XmlAttribute":{"XmlNode":[],"XmlHasParent":["XmlNode"],"XmlHasVisitor":[],"XmlParentBase":[],"XmlHasParent.T":"XmlNode"},"XmlData":{"XmlNode":[],"XmlHasParent":["XmlNode"],"XmlHasVisitor":[],"XmlParentBase":[]},"XmlDocument":{"XmlNode":[],"XmlHasChildren":["XmlNode"],"XmlHasVisitor":[],"XmlParentBase":[],"XmlHasChildren.T":"XmlNode"},"XmlElement":{"XmlNode":[],"XmlHasParent":["XmlNode"],"XmlHasAttributes":[],"XmlHasChildren":["XmlNode"],"XmlHasVisitor":[],"XmlParentBase":[],"XmlHasChildren.T":"XmlNode","XmlHasParent.T":"XmlNode"},"XmlNode":{"XmlHasVisitor":[],"XmlParentBase":[]},"XmlProcessing":{"XmlNode":[],"XmlHasParent":["XmlNode"],"XmlHasVisitor":[],"XmlParentBase":[],"XmlHasParent.T":"XmlNode"},"XmlText":{"XmlNode":[],"XmlHasParent":["XmlNode"],"XmlHasVisitor":[],"XmlParentBase":[],"XmlHasParent.T":"XmlNode"},"XmlName":{"XmlHasParent":["XmlNode"],"XmlHasVisitor":[],"XmlParentBase":[]},"XmlNodeList":{"DelegatingList":["1"],"List":["1"],"_DelegatingIterableBase":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"XmlPrefixName":{"XmlName":[],"XmlHasParent":["XmlNode"],"XmlHasVisitor":[],"XmlParentBase":[],"XmlHasParent.T":"XmlNode"},"XmlSimpleName":{"XmlName":[],"XmlHasParent":["XmlNode"],"XmlHasVisitor":[],"XmlParentBase":[],"XmlHasParent.T":"XmlNode"},"XmlPrettyWriter":{"XmlVisitor":[]},"XmlWriter":{"XmlVisitor":[]}}'));
A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"EfficientLengthIterable":1,"UnmodifiableListBase":1,"NativeTypedArray":1,"StreamTransformerBase":2,"IterableBase":1,"ListBase":1,"MapBase":2,"_SetBase":1,"_ListBase_Object_ListMixin":1,"__SetBase_Object_SetMixin":1,"__UnmodifiableSet__SetBase__UnmodifiableSetMixin":1}'));
var string$ = {
  CodedB: "CodedBufferReader encountered an embedded string or message which claimed to have negative size.",
  Node_a: "Node already has a parent, copy or remove it first"
};
var type$ = (function rtii() {
  var findType = A.findType;
  return {
    BuilderInfo: findType("BuilderInfo"),
    Comparable_dynamic: findType("Comparable<@>"),
    ConstantMapView_Symbol_dynamic: findType("ConstantMapView<Symbol0,@>"),
    ConstantStringMap_String_String: findType("ConstantStringMap<String,String>"),
    DateTime: findType("DateTime"),
    EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
    Error: findType("Error"),
    ExtensionRegistry: findType("ExtensionRegistry"),
    Extension_dynamic: findType("Extension<@>"),
    FieldInfo_dynamic: findType("FieldInfo<@>"),
    Function: findType("Function"),
    GeneralConstantMap_XmlNodeType_Null: findType("GeneralConstantMap<XmlNodeType,Null>"),
    GeneratedMessage: findType("GeneratedMessage"),
    Int64: findType("Int64"),
    Invocation: findType("Invocation"),
    Iterable_XmlHasVisitor: findType("Iterable<XmlHasVisitor>"),
    Iterable_dynamic: findType("Iterable<@>"),
    Iterable_int: findType("Iterable<int>"),
    JSArray_DartTrackpoint: findType("JSArray<DartTrackpoint>"),
    JSArray_FieldInfo_dynamic: findType("JSArray<FieldInfo<@>>"),
    JSArray_Int64: findType("JSArray<Int64>"),
    JSArray_List_int: findType("JSArray<List<int>>"),
    JSArray_NodeBuilder: findType("JSArray<NodeBuilder>"),
    JSArray_Record: findType("JSArray<Record>"),
    JSArray_String: findType("JSArray<String>"),
    JSArray_UnknownFieldSet: findType("JSArray<UnknownFieldSet>"),
    JSArray_XmlAttribute: findType("JSArray<XmlAttribute>"),
    JSArray_XmlNode: findType("JSArray<XmlNode>"),
    JSArray_dynamic: findType("JSArray<@>"),
    JSArray_int: findType("JSArray<int>"),
    JSIndexable_dynamic: findType("JSIndexable<@>"),
    JSNull: findType("JSNull"),
    JavaScriptFunction: findType("JavaScriptFunction"),
    JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
    JsLinkedHashMap_Symbol_dynamic: findType("JsLinkedHashMap<Symbol0,@>"),
    List_GeneratedMessage: findType("List<GeneratedMessage>"),
    List_Int64: findType("List<Int64>"),
    List_List_int: findType("List<List<int>>"),
    List_UnknownFieldSet: findType("List<UnknownFieldSet>"),
    List_XmlAttribute: findType("List<XmlAttribute>"),
    List_XmlNode: findType("List<XmlNode>"),
    List_double: findType("List<double>"),
    List_dynamic: findType("List<@>"),
    List_int: findType("List<int>"),
    MapEntry_dynamic_dynamic: findType("MapEntry<@,@>"),
    MapFieldInfo_dynamic_dynamic: findType("MapFieldInfo<@,@>"),
    Map_dynamic_dynamic: findType("Map<@,@>"),
    NamespaceData: findType("NamespaceData"),
    Null: findType("Null"),
    Object: findType("Object"),
    Pattern: findType("Pattern"),
    PbListBase_GeneratedMessage: findType("PbListBase<GeneratedMessage>"),
    PbListBase_dynamic: findType("PbListBase<@>"),
    ProtobufEnum: findType("ProtobufEnum"),
    RegExpMatch: findType("RegExpMatch"),
    Runes: findType("Runes"),
    Set_XmlNodeType: findType("Set<XmlNodeType>"),
    String: findType("String"),
    String_Function_Match: findType("String(Match)"),
    String_Function_String: findType("String(String)"),
    Symbol: findType("Symbol0"),
    Trackpoint: findType("Trackpoint"),
    Type: findType("Type"),
    UnknownFieldSet: findType("UnknownFieldSet"),
    UnknownFieldSetField: findType("UnknownFieldSetField"),
    UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
    Utf8Codec: findType("Utf8Codec"),
    XmlAttribute: findType("XmlAttribute"),
    XmlDescendantsIterable: findType("XmlDescendantsIterable"),
    XmlDocument: findType("XmlDocument"),
    XmlHasVisitor: findType("XmlHasVisitor"),
    XmlNode: findType("XmlNode"),
    _UnmodifiableSet_XmlNodeType: findType("_UnmodifiableSet<XmlNodeType>"),
    bool: findType("bool"),
    double: findType("double"),
    dynamic: findType("@"),
    dynamic_Function: findType("@()"),
    int: findType("int"),
    legacy_Never: findType("0&*"),
    legacy_Object: findType("Object*"),
    nullable_Future_Null: findType("Future<Null>?"),
    nullable_GeneratedMessage_Function: findType("GeneratedMessage()?"),
    nullable_List_FieldInfo_dynamic: findType("List<FieldInfo<@>>?"),
    nullable_List_ProtobufEnum: findType("List<ProtobufEnum>?"),
    nullable_Object: findType("Object?"),
    nullable_PbMap_dynamic_dynamic: findType("PbMap<@,@>?"),
    nullable_String_Function_Match: findType("String(Match)?"),
    nullable_String_Function_String: findType("String(String)?"),
    nullable_nullable_Object_Function_dynamic: findType("Object?(@)?"),
    nullable_nullable_ProtobufEnum_Function_int: findType("ProtobufEnum?(int)?"),
    num: findType("num"),
    void_Function: findType("~()")
  };
})();
(function constants() {
  var makeConstList = hunkHelpers.makeConstList;
  B.Interceptor_methods = J.Interceptor.prototype;
  B.JSArray_methods = J.JSArray.prototype;
  B.JSInt_methods = J.JSInt.prototype;
  B.JSNumber_methods = J.JSNumber.prototype;
  B.JSString_methods = J.JSString.prototype;
  B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
  B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
  B.NativeByteData_methods = A.NativeByteData.prototype;
  B.NativeUint8List_methods = A.NativeUint8List.prototype;
  B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
  B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
  B.ButtonEvent_ButtonEventType_0_BUTTON_NONE = new A.ButtonEvent_ButtonEventType(0, "BUTTON_NONE");
  B.C_JS_CONST = function getTagFallback(o) {
var s = Object.prototype.toString.call(o);
return s.substring(8, s.length - 1);
};
  B.C_JS_CONST0 = function() {
var toStringFunction = Object.prototype.toString;
function getTag(o) {
  var s = toStringFunction.call(o);
  return s.substring(8, s.length - 1);
}
function getUnknownTag(object, tag) {
  if (/^HTML[A-Z].*Element$/.test(tag)) {
    var name = toStringFunction.call(object);
    if (name == "[object Object]") return null;
    return "HTMLElement";
  }
}
function getUnknownTagGenericBrowser(object, tag) {
  if (self.HTMLElement && object instanceof HTMLElement) return "HTMLElement";
  return getUnknownTag(object, tag);
}
function prototypeForTag(tag) {
  if (typeof window == "undefined") return null;
  if (typeof window[tag] == "undefined") return null;
  var constructor = window[tag];
  if (typeof constructor != "function") return null;
  return constructor.prototype;
}
function discriminator(tag) { return null; }
var isBrowser = typeof navigator == "object";
return {
  getTag: getTag,
  getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
  prototypeForTag: prototypeForTag,
  discriminator: discriminator };
};
  B.C_JS_CONST6 = function(getTagFallback) {
return function(hooks) {
  if (typeof navigator != "object") return hooks;
  var ua = navigator.userAgent;
  if (ua.indexOf("DumpRenderTree") >= 0) return hooks;
  if (ua.indexOf("Chrome") >= 0) {
    function confirm(p) {
      return typeof window == "object" && window[p] && window[p].name == p;
    }
    if (confirm("Window") && confirm("HTMLElement")) return hooks;
  }
  hooks.getTag = getTagFallback;
};
};
  B.C_JS_CONST1 = function(hooks) {
if (typeof dartExperimentalFixupGetTag != "function") return hooks;
hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
  B.C_JS_CONST2 = function(hooks) {
var getTag = hooks.getTag;
var prototypeForTag = hooks.prototypeForTag;
function getTagFixed(o) {
  var tag = getTag(o);
  if (tag == "Document") {
    if (!!o.xmlVersion) return "!Document";
    return "!HTMLDocument";
  }
  return tag;
}
function prototypeForTagFixed(tag) {
  if (tag == "Document") return null;
  return prototypeForTag(tag);
}
hooks.getTag = getTagFixed;
hooks.prototypeForTag = prototypeForTagFixed;
};
  B.C_JS_CONST5 = function(hooks) {
var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
if (userAgent.indexOf("Firefox") == -1) return hooks;
var getTag = hooks.getTag;
var quickMap = {
  "BeforeUnloadEvent": "Event",
  "DataTransfer": "Clipboard",
  "GeoGeolocation": "Geolocation",
  "Location": "!Location",
  "WorkerMessageEvent": "MessageEvent",
  "XMLDocument": "!Document"};
function getTagFirefox(o) {
  var tag = getTag(o);
  return quickMap[tag] || tag;
}
hooks.getTag = getTagFirefox;
};
  B.C_JS_CONST4 = function(hooks) {
var userAgent = typeof navigator == "object" ? navigator.userAgent : "";
if (userAgent.indexOf("Trident/") == -1) return hooks;
var getTag = hooks.getTag;
var quickMap = {
  "BeforeUnloadEvent": "Event",
  "DataTransfer": "Clipboard",
  "HTMLDDElement": "HTMLElement",
  "HTMLDTElement": "HTMLElement",
  "HTMLPhraseElement": "HTMLElement",
  "Position": "Geoposition"
};
function getTagIE(o) {
  var tag = getTag(o);
  var newTag = quickMap[tag];
  if (newTag) return newTag;
  if (tag == "Object") {
    if (window.DataView && (o instanceof window.DataView)) return "DataView";
  }
  return tag;
}
function prototypeForTagIE(tag) {
  var constructor = window[tag];
  if (constructor == null) return null;
  return constructor.prototype;
}
hooks.getTag = getTagIE;
hooks.prototypeForTag = prototypeForTagIE;
};
  B.C_JS_CONST3 = function(hooks) { return hooks; }
;
  B.C_JsonCodec = new A.JsonCodec();
  B.C_OutOfMemoryError = new A.OutOfMemoryError();
  B.C_Utf8Encoder = new A.Utf8Encoder();
  B.List_2EQ = A._setArrayType(makeConstList(["amp", "apos", "gt", "lt", "quot"]), type$.JSArray_String);
  B.Map_2EUwe = new A.ConstantStringMap(5, {amp: "&", apos: "'", gt: ">", lt: "<", quot: '"'}, B.List_2EQ, type$.ConstantStringMap_String_String);
  B.C_XmlDefaultEntityMapping = new A.XmlDefaultEntityMapping();
  B.C__EmptyExtensionRegistry = new A._EmptyExtensionRegistry();
  B.C__Required = new A._Required();
  B.Int64_0_0_0 = new A.Int64(0, 0, 0);
  B.Int64_4194303_4194303_1048575 = new A.Int64(4194303, 4194303, 1048575);
  B.JsonEncoder_null = new A.JsonEncoder(null);
  B.ButtonEvent_ButtonEventType_1_BUTTON_RC = new A.ButtonEvent_ButtonEventType(1, "BUTTON_RC");
  B.ButtonEvent_ButtonEventType_2_BUTTON_PIN = new A.ButtonEvent_ButtonEventType(2, "BUTTON_PIN");
  B.ButtonEvent_ButtonEventType_3_BUTTON_LINE_CLEARED = new A.ButtonEvent_ButtonEventType(3, "BUTTON_LINE_CLEARED");
  B.ButtonEvent_ButtonEventType_4_BUTTON_MAX = new A.ButtonEvent_ButtonEventType(4, "BUTTON_MAX");
  B.List_IJ0 = A._setArrayType(makeConstList([B.ButtonEvent_ButtonEventType_0_BUTTON_NONE, B.ButtonEvent_ButtonEventType_1_BUTTON_RC, B.ButtonEvent_ButtonEventType_2_BUTTON_PIN, B.ButtonEvent_ButtonEventType_3_BUTTON_LINE_CLEARED, B.ButtonEvent_ButtonEventType_4_BUTTON_MAX]), A.findType("JSArray<ButtonEvent_ButtonEventType>"));
  B.List_WrN = A._setArrayType(makeConstList([0, 0, 1048576, 531441, 1048576, 390625, 279936, 823543, 262144, 531441, 1000000, 161051, 248832, 371293, 537824, 759375, 1048576, 83521, 104976, 130321, 160000, 194481, 234256, 279841, 331776, 390625, 456976, 531441, 614656, 707281, 810000, 923521, 1048576, 35937, 39304, 42875, 46656]), type$.JSArray_int);
  B.List_empty = A._setArrayType(makeConstList([]), type$.JSArray_XmlAttribute);
  B.List_empty0 = A._setArrayType(makeConstList([]), type$.JSArray_XmlNode);
  B.List_empty1 = A._setArrayType(makeConstList([]), type$.JSArray_dynamic);
  B.TimerEvent_TimerEventType_0_TIMER_NONE = new A.TimerEvent_TimerEventType(0, "TIMER_NONE");
  B.TimerEvent_TimerEventType_1_TIMER_STARTED = new A.TimerEvent_TimerEventType(1, "TIMER_STARTED");
  B.TimerEvent_TimerEventType_2_TIMER_STOPPED = new A.TimerEvent_TimerEventType(2, "TIMER_STOPPED");
  B.TimerEvent_TimerEventType_3_TIMER_EXPIRED = new A.TimerEvent_TimerEventType(3, "TIMER_EXPIRED");
  B.TimerEvent_TimerEventType_4_TIMER_TICK = new A.TimerEvent_TimerEventType(4, "TIMER_TICK");
  B.List_ivD = A._setArrayType(makeConstList([B.TimerEvent_TimerEventType_0_TIMER_NONE, B.TimerEvent_TimerEventType_1_TIMER_STARTED, B.TimerEvent_TimerEventType_2_TIMER_STOPPED, B.TimerEvent_TimerEventType_3_TIMER_EXPIRED, B.TimerEvent_TimerEventType_4_TIMER_TICK]), A.findType("JSArray<TimerEvent_TimerEventType>"));
  B.List_empty2 = A._setArrayType(makeConstList([]), type$.JSArray_String);
  B.Map_empty = new A.ConstantStringMap(0, {}, B.List_empty2, type$.ConstantStringMap_String_String);
  B.Map_empty0 = new A.ConstantStringMap(0, {}, B.List_empty2, A.findType("ConstantStringMap<String,String?>"));
  B.List_empty3 = A._setArrayType(makeConstList([]), A.findType("JSArray<Symbol0>"));
  B.Map_empty1 = new A.ConstantStringMap(0, {}, B.List_empty3, A.findType("ConstantStringMap<Symbol0,@>"));
  B.PackageName_Mno = new A.PackageName("");
  B.PackageName_vtk = new A.PackageName("vtk");
  B.XmlNodeType_1 = new A.XmlNodeType("CDATA");
  B.XmlNodeType_2 = new A.XmlNodeType("COMMENT");
  B.XmlNodeType_7 = new A.XmlNodeType("ELEMENT");
  B.XmlNodeType_8 = new A.XmlNodeType("PROCESSING");
  B.XmlNodeType_9 = new A.XmlNodeType("TEXT");
  B.Map_EyMBF = new A.GeneralConstantMap([B.XmlNodeType_1, null, B.XmlNodeType_2, null, B.XmlNodeType_7, null, B.XmlNodeType_8, null, B.XmlNodeType_9, null], type$.GeneralConstantMap_XmlNodeType_Null);
  B.Set_EyI1 = new A._UnmodifiableSet(B.Map_EyMBF, type$._UnmodifiableSet_XmlNodeType);
  B.XmlNodeType_0 = new A.XmlNodeType("ATTRIBUTE");
  B.Map_r7O98 = new A.GeneralConstantMap([B.XmlNodeType_0, null], type$.GeneralConstantMap_XmlNodeType_Null);
  B.Set_r7Xh1 = new A._UnmodifiableSet(B.Map_r7O98, type$._UnmodifiableSet_XmlNodeType);
  B.XmlNodeType_3 = new A.XmlNodeType("DECLARATION");
  B.XmlNodeType_4 = new A.XmlNodeType("DOCUMENT_TYPE");
  B.Map_wEIik = new A.GeneralConstantMap([B.XmlNodeType_1, null, B.XmlNodeType_2, null, B.XmlNodeType_3, null, B.XmlNodeType_4, null, B.XmlNodeType_7, null, B.XmlNodeType_8, null, B.XmlNodeType_9, null], type$.GeneralConstantMap_XmlNodeType_Null);
  B.Set_wEo81 = new A._UnmodifiableSet(B.Map_wEIik, type$._UnmodifiableSet_XmlNodeType);
  B.Symbol_call = new A.Symbol("call");
  B.Type_Object_xQ6 = A.typeLiteral("Object");
  B.Utf8Codec_false = new A.Utf8Codec(false);
  B.Utf8Decoder_true = new A.Utf8Decoder(true);
  B.XmlAttributeType_PIp = new A.XmlAttributeType('"', "DOUBLE_QUOTE");
  B.XmlAttributeType_fgL = new A.XmlAttributeType("'", "SINGLE_QUOTE");
  B.XmlNodeType_5 = new A.XmlNodeType("DOCUMENT");
  B.XmlNodeType_6 = new A.XmlNodeType("DOCUMENT_FRAGMENT");
  B._IterationMarker_null_2 = new A._IterationMarker(null, 2);
})();
(function staticFields() {
  $._JS_INTEROP_INTERCEPTOR_TAG = null;
  $.Primitives__identityHashCodeProperty = null;
  $.BoundClosure__receiverFieldNameCache = null;
  $.BoundClosure__interceptorFieldNameCache = null;
  $.getTagFunction = null;
  $.alternateTagFunction = null;
  $.prototypeForTagFunction = null;
  $.dispatchRecordsForInstanceTags = null;
  $.interceptorsForUncacheableTags = null;
  $.initNativeDispatchFlag = null;
  $._toStringVisiting = A._setArrayType([], A.findType("JSArray<Object>"));
  $._FieldSet__zeroList = [];
  $.GeneratedMessage__defaultMakers = A.LinkedHashMap_LinkedHashMap$_empty(A.findType("Function?"), A.findType("_SingletonMaker<GeneratedMessage>"));
})();
(function lazyInitializers() {
  var _lazyFinal = hunkHelpers.lazyFinal;
  _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
  _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
    toString: function() {
      return "$receiver$";
    }
  })));
  _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
    toString: function() {
      return "$receiver$";
    }
  })));
  _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
  _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
    var $argumentsExpr$ = "$arguments$";
    try {
      null.$method$($argumentsExpr$);
    } catch (e) {
      return e.message;
    }
  }()));
  _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
  _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
    var $argumentsExpr$ = "$arguments$";
    try {
      (void 0).$method$($argumentsExpr$);
    } catch (e) {
      return e.message;
    }
  }()));
  _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
  _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
    try {
      null.$method$;
    } catch (e) {
      return e.message;
    }
  }()));
  _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
  _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
    try {
      (void 0).$method$;
    } catch (e) {
      return e.message;
    }
  }()));
  _lazyFinal($, "Utf8Decoder__decoder", "$get$Utf8Decoder__decoder", () => new A.Utf8Decoder__decoder_closure().call$0());
  _lazyFinal($, "Utf8Decoder__decoderNonfatal", "$get$Utf8Decoder__decoderNonfatal", () => new A.Utf8Decoder__decoderNonfatal_closure().call$0());
  _lazyFinal($, "_hashSeed", "$get$_hashSeed", () => A.objectHashCode(B.Type_Object_xQ6));
  _lazyFinal($, "UnknownFieldSet_emptyUnknownFieldSet", "$get$UnknownFieldSet_emptyUnknownFieldSet", () => {
    var t1 = A.UnknownFieldSet$();
    t1._markReadOnly$0();
    return t1;
  });
  _lazyFinal($, "Record__i", "$get$Record__i", () => {
    var t1 = A.BuilderInfo$("Record", A.vtk_pb_Record_create$closure(), B.PackageName_vtk);
    t1.oo$2(0, A._setArrayType([1, 2, 16, 17, 18], type$.JSArray_int));
    t1.aOM$1$3$subBuilder(1, "trackpoint", A.vtk_pb_Trackpoint_create$closure(), type$.Trackpoint);
    t1.aOM$1$3$subBuilder(2, "timerEvent", A.vtk_pb_TimerEvent_create$closure(), A.findType("TimerEvent"));
    t1.aOM$1$3$subBuilder(16, "buttonEvent", A.vtk_pb_ButtonEvent_create$closure(), A.findType("ButtonEvent"));
    t1.aOM$1$3$subBuilder(17, "hardwareDescription", A.vtk_pb_HardwareDescription_create$closure(), A.findType("HardwareDescription"));
    t1.aOM$1$3$subBuilder(18, "magneticDeclination", A.vtk_pb_MagneticDeclination_create$closure(), A.findType("MagneticDeclination"));
    return t1;
  });
  _lazyFinal($, "Trackpoint__i", "$get$Trackpoint__i", () => {
    var _32768 = 32768,
      _s10_ = "latitudeE7",
      _8192 = 8192,
      _s11_ = "longitudeE7",
      t1 = A.BuilderInfo$("Trackpoint", A.vtk_pb_Trackpoint_create$closure(), B.PackageName_vtk),
      t2 = type$.int;
    t1.a$1$3(1, "seconds", _32768, t2);
    t1.a$1$3(2, "centiseconds", _32768, t2);
    t1.a$1$4$protoName(3, _s10_, _8192, _s10_, t2);
    t1.a$1$4$protoName(4, _s11_, _8192, _s11_, t2);
    t1.a$1$4$protoName(5, "sogKnotsE1", _32768, "sog_knotsE1", t2);
    t1.a$1$3(6, "cog", _32768, t2);
    t1.a$1$4$protoName(7, "q1E3", _8192, "q1E3", t2);
    t1.a$1$4$protoName(8, "q2E3", _8192, "q2E3", t2);
    t1.a$1$4$protoName(9, "q3E3", _8192, "q3E3", t2);
    t1.a$1$4$protoName(10, "q4E3", _8192, "q4E3", t2);
    return t1;
  });
  _lazyFinal($, "TimerEvent__i", "$get$TimerEvent__i", () => {
    var t1 = A.BuilderInfo$("TimerEvent", A.vtk_pb_TimerEvent_create$closure(), B.PackageName_vtk);
    t1.e$1$6$defaultOrMaker$enumValues$valueOf(1, "type", 512, B.TimerEvent_TimerEventType_0_TIMER_NONE, B.List_ivD, A.vtk_pbenum_TimerEvent_TimerEventType_valueOf$closure(), A.findType("TimerEvent_TimerEventType"));
    t1.a$1$3(2, "seconds", 2048, type$.int);
    return t1;
  });
  _lazyFinal($, "ButtonEvent__i", "$get$ButtonEvent__i", () => {
    var t1 = A.BuilderInfo$("ButtonEvent", A.vtk_pb_ButtonEvent_create$closure(), B.PackageName_vtk);
    t1.e$1$6$defaultOrMaker$enumValues$valueOf(1, "type", 512, B.ButtonEvent_ButtonEventType_0_BUTTON_NONE, B.List_IJ0, A.vtk_pbenum_ButtonEvent_ButtonEventType_valueOf$closure(), A.findType("ButtonEvent_ButtonEventType"));
    return t1;
  });
  _lazyFinal($, "HardwareDescription__i", "$get$HardwareDescription__i", () => {
    var _2048 = 2048,
      t1 = A.BuilderInfo$("HardwareDescription", A.vtk_pb_HardwareDescription_create$closure(), B.PackageName_vtk),
      t2 = type$.int;
    t1.a$1$3(1, "modelId", _2048, t2);
    t1.a$1$3(2, "hardwareId", _2048, t2);
    t1.a$1$3(3, "firmwareId", _2048, t2);
    t1.a$1$3(4, "serialNumber", _2048, t2);
    return t1;
  });
  _lazyFinal($, "MagneticDeclination__i", "$get$MagneticDeclination__i", () => {
    var t1 = A.BuilderInfo$("MagneticDeclination", A.vtk_pb_MagneticDeclination_create$closure(), B.PackageName_vtk);
    t1.a$1$3(1, "declination", 8192, type$.int);
    return t1;
  });
  _lazyFinal($, "TimerEvent_TimerEventType__byValue", "$get$TimerEvent_TimerEventType__byValue", () => A.ProtobufEnum_initByValue(B.List_ivD, A.findType("TimerEvent_TimerEventType")));
  _lazyFinal($, "ButtonEvent_ButtonEventType__byValue", "$get$ButtonEvent_ButtonEventType__byValue", () => A.ProtobufEnum_initByValue(B.List_IJ0, A.findType("ButtonEvent_ButtonEventType")));
  _lazyFinal($, "NamespaceData_xmlData", "$get$NamespaceData_xmlData", () => A.NamespaceData$("xml", true));
  _lazyFinal($, "_textPattern", "$get$_textPattern", () => A.RegExp_RegExp("[&<\\u0001-\\u0008\\u000b\\u000c\\u000e-\\u001f\\u007f-\\u0084\\u0086-\\u009f]|]]>"));
  _lazyFinal($, "_singeQuoteAttributePattern", "$get$_singeQuoteAttributePattern", () => A.RegExp_RegExp("['&<\\n\\r\\t\\u0001-\\u0008\\u000b\\u000c\\u000e-\\u001f\\u007f-\\u0084\\u0086-\\u009f]"));
  _lazyFinal($, "_doubleQuoteAttributePattern", "$get$_doubleQuoteAttributePattern", () => A.RegExp_RegExp('["&<\\n\\r\\t\\u0001-\\u0008\\u000b\\u000c\\u000e-\\u001f\\u007f-\\u0084\\u0086-\\u009f]'));
  _lazyFinal($, "_whitespaceOrLineTerminators", "$get$_whitespaceOrLineTerminators", () => A.RegExp_RegExp("\\s+"));
})();
(function nativeSupport() {
  !function() {
    var intern = function(s) {
      var o = {};
      o[s] = 1;
      return Object.keys(hunkHelpers.convertToFastObject(o))[0];
    };
    init.getIsolateTag = function(name) {
      return intern("___dart_" + name + init.isolateTag);
    };
    var tableProperty = "___dart_isolate_tags_";
    var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
    var rootProperty = "_ZxYxX";
    for (var i = 0;; i++) {
      var property = intern(rootProperty + "_" + i + "_");
      if (!(property in usedProperties)) {
        usedProperties[property] = 1;
        init.isolateTag = property;
        break;
      }
    }
    init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
  }();
  hunkHelpers.setOrUpdateInterceptorsByTag({ArrayBuffer: J.Interceptor, ApplicationCacheErrorEvent: J.JavaScriptObject, DOMError: J.JavaScriptObject, ErrorEvent: J.JavaScriptObject, Event: J.JavaScriptObject, InputEvent: J.JavaScriptObject, SubmitEvent: J.JavaScriptObject, MediaError: J.JavaScriptObject, NavigatorUserMediaError: J.JavaScriptObject, OverconstrainedError: J.JavaScriptObject, PositionError: J.JavaScriptObject, GeolocationPositionError: J.JavaScriptObject, SensorErrorEvent: J.JavaScriptObject, SpeechRecognitionError: J.JavaScriptObject, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Float32Array: A.NativeFloat32List, Uint8Array: A.NativeUint8List, DOMException: A.DomException});
  hunkHelpers.setOrUpdateLeafTags({ArrayBuffer: true, ApplicationCacheErrorEvent: true, DOMError: true, ErrorEvent: true, Event: true, InputEvent: true, SubmitEvent: true, MediaError: true, NavigatorUserMediaError: true, OverconstrainedError: true, PositionError: true, GeolocationPositionError: true, SensorErrorEvent: true, SpeechRecognitionError: true, ArrayBufferView: false, DataView: true, Float32Array: true, Uint8Array: false, DOMException: true});
  A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
  A.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
  A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
})();
Function.prototype.call$0 = function() {
  return this();
};
Function.prototype.call$1 = function(a) {
  return this(a);
};
Function.prototype.call$2 = function(a, b) {
  return this(a, b);
};
Function.prototype.call$1$1 = function(a) {
  return this(a);
};
Function.prototype.call$1$2 = function(a, b) {
  return this(a, b);
};
Function.prototype.call$1$3 = function(a, b, c) {
  return this(a, b, c);
};
Function.prototype.call$3 = function(a, b, c) {
  return this(a, b, c);
};
convertAllToFastObject(holders);
convertToFastObject($);
(function(callback) {
  if (typeof document === "undefined") {
    callback(null);
    return;
  }
  if (typeof document.currentScript != "undefined") {
    callback(document.currentScript);
    return;
  }
  var scripts = document.scripts;
  function onLoad(event) {
    for (var i = 0; i < scripts.length; ++i)
      scripts[i].removeEventListener("load", onLoad, false);
    callback(event.target);
  }
  for (var i = 0; i < scripts.length; ++i)
    scripts[i].addEventListener("load", onLoad, false);
})(function(currentScript) {
  init.currentScript = currentScript;
  var callMain = A.main;
  if (typeof dartMainRunner === "function")
    dartMainRunner(callMain, []);
  else
    callMain([]);
});

//# sourceMappingURL=converter.js.map
